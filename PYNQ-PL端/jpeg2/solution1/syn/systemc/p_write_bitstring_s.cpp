// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "p_write_bitstring_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic p_write_bitstring_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic p_write_bitstring_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> p_write_bitstring_s::ap_ST_fsm_state1 = "1";
const sc_lv<11> p_write_bitstring_s::ap_ST_fsm_state2 = "10";
const sc_lv<11> p_write_bitstring_s::ap_ST_fsm_state3 = "100";
const sc_lv<11> p_write_bitstring_s::ap_ST_fsm_state4 = "1000";
const sc_lv<11> p_write_bitstring_s::ap_ST_fsm_state5 = "10000";
const sc_lv<11> p_write_bitstring_s::ap_ST_fsm_state6 = "100000";
const sc_lv<11> p_write_bitstring_s::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> p_write_bitstring_s::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> p_write_bitstring_s::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> p_write_bitstring_s::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> p_write_bitstring_s::ap_ST_fsm_state11 = "10000000000";
const bool p_write_bitstring_s::ap_const_boolean_1 = true;
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_9 = "1001";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_A = "1010";
const sc_lv<1> p_write_bitstring_s::ap_const_lv1_1 = "1";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_1 = "1";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_2 = "10";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_4 = "100";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_5 = "101";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_6 = "110";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_7 = "111";
const sc_lv<31> p_write_bitstring_s::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<1> p_write_bitstring_s::ap_const_lv1_0 = "0";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_3 = "11";
const sc_lv<8> p_write_bitstring_s::ap_const_lv8_0 = "00000000";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_8 = "1000";
const sc_lv<31> p_write_bitstring_s::ap_const_lv31_1 = "1";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<16> p_write_bitstring_s::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_10 = "10000";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_1F = "11111";
const sc_lv<32> p_write_bitstring_s::ap_const_lv32_FF = "11111111";

p_write_bitstring_s::p_write_bitstring_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    mask1_U = new p_write_bitstringEe0("mask1_U");
    mask1_U->clk(ap_clk);
    mask1_U->reset(ap_rst);
    mask1_U->address0(mask1_address0);
    mask1_U->ce0(mask1_ce0);
    mask1_U->q0(mask1_q0);
    grp_p_write_byte_s_fu_193 = new p_write_byte_s("grp_p_write_byte_s_fu_193");
    grp_p_write_byte_s_fu_193->ap_clk(ap_clk);
    grp_p_write_byte_s_fu_193->ap_rst(ap_rst);
    grp_p_write_byte_s_fu_193->ap_start(grp_p_write_byte_s_fu_193_ap_start);
    grp_p_write_byte_s_fu_193->ap_done(grp_p_write_byte_s_fu_193_ap_done);
    grp_p_write_byte_s_fu_193->ap_idle(grp_p_write_byte_s_fu_193_ap_idle);
    grp_p_write_byte_s_fu_193->ap_ready(grp_p_write_byte_s_fu_193_ap_ready);
    grp_p_write_byte_s_fu_193->JpegEncoder_outhebyte_last_V_read(ap_var_for_const0);
    grp_p_write_byte_s_fu_193->value_r(grp_p_write_byte_s_fu_193_value_r);
    grp_p_write_byte_s_fu_193->jpeg_out_TDATA(grp_p_write_byte_s_fu_193_jpeg_out_TDATA);
    grp_p_write_byte_s_fu_193->jpeg_out_TVALID(grp_p_write_byte_s_fu_193_jpeg_out_TVALID);
    grp_p_write_byte_s_fu_193->jpeg_out_TREADY(grp_p_write_byte_s_fu_193_jpeg_out_TREADY);
    grp_p_write_byte_s_fu_193->jpeg_out_TKEEP(grp_p_write_byte_s_fu_193_jpeg_out_TKEEP);
    grp_p_write_byte_s_fu_193->jpeg_out_TSTRB(grp_p_write_byte_s_fu_193_jpeg_out_TSTRB);
    grp_p_write_byte_s_fu_193->jpeg_out_TLAST(grp_p_write_byte_s_fu_193_jpeg_out_TLAST);
    grp_p_write_byte_s_fu_193->ap_return(grp_p_write_byte_s_fu_193_ap_return);
    grp_p_write_byte_s_fu_193->jpeg_out_TDATA_blk_n(grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n);
    grp_p_write_byte_s_fu_193->ap_ce(grp_p_write_byte_s_fu_193_ap_ce);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln597_fu_348_p1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( newBytePos_0_fu_94 );

    SC_METHOD(thread_add_ln597_fu_348_p2);
    sensitive << ( add_ln597_fu_348_p1 );

    SC_METHOD(thread_and_ln592_fu_302_p2);
    sensitive << ( trunc_ln588_reg_435 );
    sensitive << ( mask1_load_reg_464 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state11);
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n );
    sensitive << ( ap_predicate_op89_call_state11 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln583_fu_239_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_predicate_op89_call_state11);
    sensitive << ( tmp_1_reg_481 );
    sensitive << ( icmp_ln602_reg_485 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln583_fu_239_p2 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln583_fu_239_p2 );
    sensitive << ( newByte_0_fu_98 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln583_fu_239_p2 );
    sensitive << ( newBytePos_0_fu_94 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln583_fu_239_p2 );
    sensitive << ( JpegEncoder_outhebyt_fu_90 );

    SC_METHOD(thread_bs_length_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln588_fu_250_p1 );

    SC_METHOD(thread_bs_length_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_bs_value_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln588_fu_250_p1 );

    SC_METHOD(thread_bs_value_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_p_write_byte_s_fu_193_ap_ce);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_p_write_byte_s_fu_193_ap_start);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_predicate_op89_call_state11 );

    SC_METHOD(thread_grp_p_write_byte_s_fu_193_jpeg_out_TREADY);
    sensitive << ( jpeg_out_TREADY );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_p_write_byte_s_fu_193_value_r);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_predicate_op89_call_state11 );
    sensitive << ( trunc_ln601_fu_370_p1 );

    SC_METHOD(thread_i_fu_244_p2);
    sensitive << ( i_0_reg_173 );

    SC_METHOD(thread_icmp_ln583_fu_239_p2);
    sensitive << ( counts );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln583_fu_235_p1 );

    SC_METHOD(thread_icmp_ln590_fu_287_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( posval_0_in_reg_184 );

    SC_METHOD(thread_icmp_ln592_fu_306_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( and_ln592_fu_302_p2 );

    SC_METHOD(thread_icmp_ln602_fu_374_p2);
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( select_ln592_reg_474 );

    SC_METHOD(thread_jpeg_out_TDATA);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TDATA );
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TVALID );
    sensitive << ( ap_predicate_op89_call_state11 );

    SC_METHOD(thread_jpeg_out_TDATA_blk_n);
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_1_reg_481 );
    sensitive << ( icmp_ln602_reg_485 );

    SC_METHOD(thread_jpeg_out_TKEEP);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TVALID );
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TKEEP );
    sensitive << ( ap_predicate_op89_call_state11 );

    SC_METHOD(thread_jpeg_out_TLAST);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TVALID );
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TLAST );
    sensitive << ( ap_predicate_op89_call_state11 );

    SC_METHOD(thread_jpeg_out_TSTRB);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TVALID );
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TSTRB );
    sensitive << ( ap_predicate_op89_call_state11 );

    SC_METHOD(thread_jpeg_out_TVALID);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TVALID );
    sensitive << ( ap_predicate_op89_call_state11 );

    SC_METHOD(thread_mask1_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln592_fu_293_p1 );
    sensitive << ( sext_ln594_fu_297_p1 );

    SC_METHOD(thread_mask1_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_or_ln594_fu_316_p2);
    sensitive << ( mask1_q0 );
    sensitive << ( trunc_ln594_fu_312_p1 );

    SC_METHOD(thread_or_ln_fu_332_p3);
    sensitive << ( tmp_3_fu_322_p4 );
    sensitive << ( or_ln594_fu_316_p2 );

    SC_METHOD(thread_posval_fu_281_p2);
    sensitive << ( posval_0_in_reg_184 );

    SC_METHOD(thread_select_ln592_fu_340_p3);
    sensitive << ( newByte_0_fu_98 );
    sensitive << ( icmp_ln592_fu_306_p2 );
    sensitive << ( or_ln_fu_332_p3 );

    SC_METHOD(thread_sext_ln594_fu_297_p0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( newBytePos_0_fu_94 );

    SC_METHOD(thread_sext_ln594_fu_297_p1);
    sensitive << ( sext_ln594_fu_297_p0 );

    SC_METHOD(thread_tmp_1_fu_353_p3);
    sensitive << ( add_ln597_fu_348_p2 );

    SC_METHOD(thread_tmp_3_fu_322_p4);
    sensitive << ( newByte_0_fu_98 );

    SC_METHOD(thread_trunc_ln588_fu_277_p1);
    sensitive << ( bs_value_q0 );

    SC_METHOD(thread_trunc_ln594_fu_312_p1);
    sensitive << ( newByte_0_fu_98 );

    SC_METHOD(thread_trunc_ln601_fu_370_p1);
    sensitive << ( select_ln592_reg_474 );

    SC_METHOD(thread_zext_ln583_fu_235_p1);
    sensitive << ( i_0_reg_173 );

    SC_METHOD(thread_zext_ln588_fu_250_p1);
    sensitive << ( i_0_reg_173 );

    SC_METHOD(thread_zext_ln592_fu_293_p1);
    sensitive << ( posval_reg_445 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln583_fu_239_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_1_fu_353_p3 );
    sensitive << ( ap_predicate_op89_call_state11 );
    sensitive << ( icmp_ln590_fu_287_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "p_write_bitstring_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, JpegEncoder_outhebyte_data_V_read, "(port)JpegEncoder_outhebyte_data_V_read");
    sc_trace(mVcdFile, bs_length_address0, "(port)bs_length_address0");
    sc_trace(mVcdFile, bs_length_ce0, "(port)bs_length_ce0");
    sc_trace(mVcdFile, bs_length_q0, "(port)bs_length_q0");
    sc_trace(mVcdFile, bs_value_address0, "(port)bs_value_address0");
    sc_trace(mVcdFile, bs_value_ce0, "(port)bs_value_ce0");
    sc_trace(mVcdFile, bs_value_q0, "(port)bs_value_q0");
    sc_trace(mVcdFile, counts, "(port)counts");
    sc_trace(mVcdFile, newByte_read, "(port)newByte_read");
    sc_trace(mVcdFile, newBytePos_read, "(port)newBytePos_read");
    sc_trace(mVcdFile, jpeg_out_TDATA, "(port)jpeg_out_TDATA");
    sc_trace(mVcdFile, jpeg_out_TVALID, "(port)jpeg_out_TVALID");
    sc_trace(mVcdFile, jpeg_out_TREADY, "(port)jpeg_out_TREADY");
    sc_trace(mVcdFile, jpeg_out_TKEEP, "(port)jpeg_out_TKEEP");
    sc_trace(mVcdFile, jpeg_out_TSTRB, "(port)jpeg_out_TSTRB");
    sc_trace(mVcdFile, jpeg_out_TLAST, "(port)jpeg_out_TLAST");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, mask1_address0, "mask1_address0");
    sc_trace(mVcdFile, mask1_ce0, "mask1_ce0");
    sc_trace(mVcdFile, mask1_q0, "mask1_q0");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n, "grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n");
    sc_trace(mVcdFile, jpeg_out_TDATA_blk_n, "jpeg_out_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_1_reg_481, "tmp_1_reg_481");
    sc_trace(mVcdFile, icmp_ln602_reg_485, "icmp_ln602_reg_485");
    sc_trace(mVcdFile, i_fu_244_p2, "i_fu_244_p2");
    sc_trace(mVcdFile, i_reg_420, "i_reg_420");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln583_fu_239_p2, "icmp_ln583_fu_239_p2");
    sc_trace(mVcdFile, trunc_ln588_fu_277_p1, "trunc_ln588_fu_277_p1");
    sc_trace(mVcdFile, trunc_ln588_reg_435, "trunc_ln588_reg_435");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, bs_length_load_reg_440, "bs_length_load_reg_440");
    sc_trace(mVcdFile, posval_fu_281_p2, "posval_fu_281_p2");
    sc_trace(mVcdFile, posval_reg_445, "posval_reg_445");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, mask1_load_reg_464, "mask1_load_reg_464");
    sc_trace(mVcdFile, select_ln592_fu_340_p3, "select_ln592_fu_340_p3");
    sc_trace(mVcdFile, select_ln592_reg_474, "select_ln592_reg_474");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_1_fu_353_p3, "tmp_1_fu_353_p3");
    sc_trace(mVcdFile, icmp_ln602_fu_374_p2, "icmp_ln602_fu_374_p2");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_ap_start, "grp_p_write_byte_s_fu_193_ap_start");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_ap_done, "grp_p_write_byte_s_fu_193_ap_done");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_ap_idle, "grp_p_write_byte_s_fu_193_ap_idle");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_ap_ready, "grp_p_write_byte_s_fu_193_ap_ready");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_value_r, "grp_p_write_byte_s_fu_193_value_r");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_jpeg_out_TDATA, "grp_p_write_byte_s_fu_193_jpeg_out_TDATA");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_jpeg_out_TVALID, "grp_p_write_byte_s_fu_193_jpeg_out_TVALID");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_jpeg_out_TREADY, "grp_p_write_byte_s_fu_193_jpeg_out_TREADY");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_jpeg_out_TKEEP, "grp_p_write_byte_s_fu_193_jpeg_out_TKEEP");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_jpeg_out_TSTRB, "grp_p_write_byte_s_fu_193_jpeg_out_TSTRB");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_jpeg_out_TLAST, "grp_p_write_byte_s_fu_193_jpeg_out_TLAST");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_ap_return, "grp_p_write_byte_s_fu_193_ap_return");
    sc_trace(mVcdFile, grp_p_write_byte_s_fu_193_ap_ce, "grp_p_write_byte_s_fu_193_ap_ce");
    sc_trace(mVcdFile, ap_predicate_op89_call_state11, "ap_predicate_op89_call_state11");
    sc_trace(mVcdFile, i_0_reg_173, "i_0_reg_173");
    sc_trace(mVcdFile, icmp_ln590_fu_287_p2, "icmp_ln590_fu_287_p2");
    sc_trace(mVcdFile, posval_0_in_reg_184, "posval_0_in_reg_184");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_block_state11, "ap_block_state11");
    sc_trace(mVcdFile, trunc_ln601_fu_370_p1, "trunc_ln601_fu_370_p1");
    sc_trace(mVcdFile, zext_ln588_fu_250_p1, "zext_ln588_fu_250_p1");
    sc_trace(mVcdFile, zext_ln592_fu_293_p1, "zext_ln592_fu_293_p1");
    sc_trace(mVcdFile, sext_ln594_fu_297_p1, "sext_ln594_fu_297_p1");
    sc_trace(mVcdFile, JpegEncoder_outhebyt_fu_90, "JpegEncoder_outhebyt_fu_90");
    sc_trace(mVcdFile, newBytePos_0_fu_94, "newBytePos_0_fu_94");
    sc_trace(mVcdFile, add_ln597_fu_348_p2, "add_ln597_fu_348_p2");
    sc_trace(mVcdFile, newByte_0_fu_98, "newByte_0_fu_98");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, zext_ln583_fu_235_p1, "zext_ln583_fu_235_p1");
    sc_trace(mVcdFile, sext_ln594_fu_297_p0, "sext_ln594_fu_297_p0");
    sc_trace(mVcdFile, and_ln592_fu_302_p2, "and_ln592_fu_302_p2");
    sc_trace(mVcdFile, trunc_ln594_fu_312_p1, "trunc_ln594_fu_312_p1");
    sc_trace(mVcdFile, tmp_3_fu_322_p4, "tmp_3_fu_322_p4");
    sc_trace(mVcdFile, or_ln594_fu_316_p2, "or_ln594_fu_316_p2");
    sc_trace(mVcdFile, icmp_ln592_fu_306_p2, "icmp_ln592_fu_306_p2");
    sc_trace(mVcdFile, or_ln_fu_332_p3, "or_ln_fu_332_p3");
    sc_trace(mVcdFile, add_ln597_fu_348_p1, "add_ln597_fu_348_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

p_write_bitstring_s::~p_write_bitstring_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete mask1_U;
    delete grp_p_write_byte_s_fu_193;
}

void p_write_bitstring_s::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv1_0;
}

void p_write_bitstring_s::thread_ap_clk_no_reset_() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(icmp_ln602_fu_374_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(tmp_1_reg_481.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln602_reg_485.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_call_state11.read()))))) {
        JpegEncoder_outhebyt_fu_90 = grp_p_write_byte_s_fu_193_ap_return.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        JpegEncoder_outhebyt_fu_90 = JpegEncoder_outhebyte_data_V_read.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln590_fu_287_p2.read(), ap_const_lv1_0))) {
        i_0_reg_173 = i_reg_420.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_173 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n.read(), ap_const_logic_1))) {
        newBytePos_0_fu_94 = ap_const_lv32_7;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(tmp_1_fu_353_p3.read(), ap_const_lv1_0))) {
        newBytePos_0_fu_94 = add_ln597_fu_348_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        newBytePos_0_fu_94 = newBytePos_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n.read(), ap_const_logic_1))) {
        newByte_0_fu_98 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        newByte_0_fu_98 = select_ln592_reg_474.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        newByte_0_fu_98 = newByte_read.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_call_state11.read())))) {
        posval_0_in_reg_184 = posval_reg_445.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        posval_0_in_reg_184 = bs_length_load_reg_440.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bs_length_load_reg_440 = bs_length_q0.read();
        trunc_ln588_reg_435 = trunc_ln588_fu_277_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_420 = i_fu_244_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n.read(), ap_const_logic_1))) {
        icmp_ln602_reg_485 = icmp_ln602_fu_374_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        mask1_load_reg_464 = mask1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        posval_reg_445 = posval_fu_281_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        select_ln592_reg_474 = select_ln592_fu_340_p3.read();
        tmp_1_reg_481 = add_ln597_fu_348_p2.read().range(31, 31);
    }
}

void p_write_bitstring_s::thread_add_ln597_fu_348_p1() {
    add_ln597_fu_348_p1 = newBytePos_0_fu_94.read();
}

void p_write_bitstring_s::thread_add_ln597_fu_348_p2() {
    add_ln597_fu_348_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !add_ln597_fu_348_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_bigint<32>(add_ln597_fu_348_p1.read()));
}

void p_write_bitstring_s::thread_and_ln592_fu_302_p2() {
    and_ln592_fu_302_p2 = (trunc_ln588_reg_435.read() & mask1_load_reg_464.read());
}

void p_write_bitstring_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void p_write_bitstring_s::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void p_write_bitstring_s::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void p_write_bitstring_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void p_write_bitstring_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void p_write_bitstring_s::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void p_write_bitstring_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void p_write_bitstring_s::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void p_write_bitstring_s::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void p_write_bitstring_s::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void p_write_bitstring_s::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void p_write_bitstring_s::thread_ap_block_state11() {
    ap_block_state11 = (esl_seteq<1,1,1>(ap_const_logic_0, grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_call_state11.read()));
}

void p_write_bitstring_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln583_fu_239_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void p_write_bitstring_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void p_write_bitstring_s::thread_ap_predicate_op89_call_state11() {
    ap_predicate_op89_call_state11 = (esl_seteq<1,1,1>(tmp_1_reg_481.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln602_reg_485.read()));
}

void p_write_bitstring_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln583_fu_239_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void p_write_bitstring_s::thread_ap_return_0() {
    ap_return_0 = newByte_0_fu_98.read();
}

void p_write_bitstring_s::thread_ap_return_1() {
    ap_return_1 = newBytePos_0_fu_94.read();
}

void p_write_bitstring_s::thread_ap_return_2() {
    ap_return_2 = JpegEncoder_outhebyt_fu_90.read();
}

void p_write_bitstring_s::thread_bs_length_address0() {
    bs_length_address0 =  (sc_lv<7>) (zext_ln588_fu_250_p1.read());
}

void p_write_bitstring_s::thread_bs_length_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bs_length_ce0 = ap_const_logic_1;
    } else {
        bs_length_ce0 = ap_const_logic_0;
    }
}

void p_write_bitstring_s::thread_bs_value_address0() {
    bs_value_address0 =  (sc_lv<7>) (zext_ln588_fu_250_p1.read());
}

void p_write_bitstring_s::thread_bs_value_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bs_value_ce0 = ap_const_logic_1;
    } else {
        bs_value_ce0 = ap_const_logic_0;
    }
}

void p_write_bitstring_s::thread_grp_p_write_byte_s_fu_193_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        grp_p_write_byte_s_fu_193_ap_ce = ap_const_logic_1;
    } else {
        grp_p_write_byte_s_fu_193_ap_ce = ap_const_logic_0;
    }
}

void p_write_bitstring_s::thread_grp_p_write_byte_s_fu_193_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_call_state11.read())))) {
        grp_p_write_byte_s_fu_193_ap_start = ap_const_logic_1;
    } else {
        grp_p_write_byte_s_fu_193_ap_start = ap_const_logic_0;
    }
}

void p_write_bitstring_s::thread_grp_p_write_byte_s_fu_193_jpeg_out_TREADY() {
    grp_p_write_byte_s_fu_193_jpeg_out_TREADY = ((jpeg_out_TREADY.read() & 
  ap_CS_fsm_state10.read()) | (jpeg_out_TREADY.read() & 
  ap_CS_fsm_state11.read()));
}

void p_write_bitstring_s::thread_grp_p_write_byte_s_fu_193_value_r() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_call_state11.read()))) {
        grp_p_write_byte_s_fu_193_value_r = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_p_write_byte_s_fu_193_value_r = trunc_ln601_fu_370_p1.read();
    } else {
        grp_p_write_byte_s_fu_193_value_r = "XXXXXXXX";
    }
}

void p_write_bitstring_s::thread_i_fu_244_p2() {
    i_fu_244_p2 = (!i_0_reg_173.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_0_reg_173.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void p_write_bitstring_s::thread_icmp_ln583_fu_239_p2() {
    icmp_ln583_fu_239_p2 = (!zext_ln583_fu_235_p1.read().is_01() || !counts.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln583_fu_235_p1.read()) < sc_bigint<32>(counts.read()));
}

void p_write_bitstring_s::thread_icmp_ln590_fu_287_p2() {
    icmp_ln590_fu_287_p2 = (!posval_0_in_reg_184.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(posval_0_in_reg_184.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void p_write_bitstring_s::thread_icmp_ln592_fu_306_p2() {
    icmp_ln592_fu_306_p2 = (!and_ln592_fu_302_p2.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(and_ln592_fu_302_p2.read() == ap_const_lv16_0);
}

void p_write_bitstring_s::thread_icmp_ln602_fu_374_p2() {
    icmp_ln602_fu_374_p2 = (!select_ln592_reg_474.read().is_01() || !ap_const_lv32_FF.is_01())? sc_lv<1>(): sc_lv<1>(select_ln592_reg_474.read() == ap_const_lv32_FF);
}

void p_write_bitstring_s::thread_jpeg_out_TDATA() {
    jpeg_out_TDATA = grp_p_write_byte_s_fu_193_jpeg_out_TDATA.read();
}

void p_write_bitstring_s::thread_jpeg_out_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(tmp_1_reg_481.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln602_reg_485.read())))) {
        jpeg_out_TDATA_blk_n = grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n.read();
    } else {
        jpeg_out_TDATA_blk_n = ap_const_logic_1;
    }
}

void p_write_bitstring_s::thread_jpeg_out_TKEEP() {
    jpeg_out_TKEEP = grp_p_write_byte_s_fu_193_jpeg_out_TKEEP.read();
}

void p_write_bitstring_s::thread_jpeg_out_TLAST() {
    jpeg_out_TLAST = grp_p_write_byte_s_fu_193_jpeg_out_TLAST.read();
}

void p_write_bitstring_s::thread_jpeg_out_TSTRB() {
    jpeg_out_TSTRB = grp_p_write_byte_s_fu_193_jpeg_out_TSTRB.read();
}

void p_write_bitstring_s::thread_jpeg_out_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_call_state11.read())))) {
        jpeg_out_TVALID = grp_p_write_byte_s_fu_193_jpeg_out_TVALID.read();
    } else {
        jpeg_out_TVALID = ap_const_logic_0;
    }
}

void p_write_bitstring_s::thread_mask1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        mask1_address0 =  (sc_lv<4>) (sext_ln594_fu_297_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        mask1_address0 =  (sc_lv<4>) (zext_ln592_fu_293_p1.read());
    } else {
        mask1_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void p_write_bitstring_s::thread_mask1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        mask1_ce0 = ap_const_logic_1;
    } else {
        mask1_ce0 = ap_const_logic_0;
    }
}

void p_write_bitstring_s::thread_or_ln594_fu_316_p2() {
    or_ln594_fu_316_p2 = (mask1_q0.read() | trunc_ln594_fu_312_p1.read());
}

void p_write_bitstring_s::thread_or_ln_fu_332_p3() {
    or_ln_fu_332_p3 = esl_concat<16,16>(tmp_3_fu_322_p4.read(), or_ln594_fu_316_p2.read());
}

void p_write_bitstring_s::thread_posval_fu_281_p2() {
    posval_fu_281_p2 = (!posval_0_in_reg_184.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_biguint<32>(posval_0_in_reg_184.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void p_write_bitstring_s::thread_select_ln592_fu_340_p3() {
    select_ln592_fu_340_p3 = (!icmp_ln592_fu_306_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln592_fu_306_p2.read()[0].to_bool())? newByte_0_fu_98.read(): or_ln_fu_332_p3.read());
}

void p_write_bitstring_s::thread_sext_ln594_fu_297_p0() {
    sext_ln594_fu_297_p0 = newBytePos_0_fu_94.read();
}

void p_write_bitstring_s::thread_sext_ln594_fu_297_p1() {
    sext_ln594_fu_297_p1 = esl_sext<64,32>(sext_ln594_fu_297_p0.read());
}

void p_write_bitstring_s::thread_tmp_1_fu_353_p3() {
    tmp_1_fu_353_p3 = add_ln597_fu_348_p2.read().range(31, 31);
}

void p_write_bitstring_s::thread_tmp_3_fu_322_p4() {
    tmp_3_fu_322_p4 = newByte_0_fu_98.read().range(31, 16);
}

void p_write_bitstring_s::thread_trunc_ln588_fu_277_p1() {
    trunc_ln588_fu_277_p1 = bs_value_q0.read().range(16-1, 0);
}

void p_write_bitstring_s::thread_trunc_ln594_fu_312_p1() {
    trunc_ln594_fu_312_p1 = newByte_0_fu_98.read().range(16-1, 0);
}

void p_write_bitstring_s::thread_trunc_ln601_fu_370_p1() {
    trunc_ln601_fu_370_p1 = select_ln592_reg_474.read().range(8-1, 0);
}

void p_write_bitstring_s::thread_zext_ln583_fu_235_p1() {
    zext_ln583_fu_235_p1 = esl_zext<32,31>(i_0_reg_173.read());
}

void p_write_bitstring_s::thread_zext_ln588_fu_250_p1() {
    zext_ln588_fu_250_p1 = esl_zext<64,31>(i_0_reg_173.read());
}

void p_write_bitstring_s::thread_zext_ln592_fu_293_p1() {
    zext_ln592_fu_293_p1 = esl_zext<64,32>(posval_reg_445.read());
}

void p_write_bitstring_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln583_fu_239_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln590_fu_287_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_353_p3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, grp_p_write_byte_s_fu_193_jpeg_out_TDATA_blk_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op89_call_state11.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

