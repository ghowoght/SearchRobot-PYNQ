-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity encodeToJPG is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    JpegEncoder_buffer_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    JpegEncoder_buffer_ce0 : OUT STD_LOGIC;
    JpegEncoder_buffer_we0 : OUT STD_LOGIC;
    JpegEncoder_buffer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_buffer_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_buffer_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    JpegEncoder_buffer_ce1 : OUT STD_LOGIC;
    JpegEncoder_buffer_we1 : OUT STD_LOGIC;
    JpegEncoder_buffer_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_buffer_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_YTable_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    JpegEncoder_m_YTable_ce0 : OUT STD_LOGIC;
    JpegEncoder_m_YTable_we0 : OUT STD_LOGIC;
    JpegEncoder_m_YTable_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_YTable_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_CbCrTable_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    JpegEncoder_m_CbCrTable_ce0 : OUT STD_LOGIC;
    JpegEncoder_m_CbCrTable_we0 : OUT STD_LOGIC;
    JpegEncoder_m_CbCrTable_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_CbCrTable_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_Y_DC_Huffman_Table_length_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    JpegEncoder_m_Y_DC_Huffman_Table_length_ce0 : OUT STD_LOGIC;
    JpegEncoder_m_Y_DC_Huffman_Table_length_we0 : OUT STD_LOGIC;
    JpegEncoder_m_Y_DC_Huffman_Table_length_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    JpegEncoder_m_Y_DC_Huffman_Table_length_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    JpegEncoder_m_Y_DC_Huffman_Table_value_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    JpegEncoder_m_Y_DC_Huffman_Table_value_ce0 : OUT STD_LOGIC;
    JpegEncoder_m_Y_DC_Huffman_Table_value_we0 : OUT STD_LOGIC;
    JpegEncoder_m_Y_DC_Huffman_Table_value_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    JpegEncoder_m_Y_DC_Huffman_Table_value_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    JpegEncoder_m_Y_AC_Huffman_Table_length_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_Y_AC_Huffman_Table_length_ce0 : OUT STD_LOGIC;
    JpegEncoder_m_Y_AC_Huffman_Table_length_we0 : OUT STD_LOGIC;
    JpegEncoder_m_Y_AC_Huffman_Table_length_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    JpegEncoder_m_Y_AC_Huffman_Table_length_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    JpegEncoder_m_Y_AC_Huffman_Table_length_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_Y_AC_Huffman_Table_length_ce1 : OUT STD_LOGIC;
    JpegEncoder_m_Y_AC_Huffman_Table_length_q1 : IN STD_LOGIC_VECTOR (4 downto 0);
    JpegEncoder_m_Y_AC_Huffman_Table_value_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_Y_AC_Huffman_Table_value_ce0 : OUT STD_LOGIC;
    JpegEncoder_m_Y_AC_Huffman_Table_value_we0 : OUT STD_LOGIC;
    JpegEncoder_m_Y_AC_Huffman_Table_value_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    JpegEncoder_m_Y_AC_Huffman_Table_value_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    JpegEncoder_m_Y_AC_Huffman_Table_value_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_Y_AC_Huffman_Table_value_ce1 : OUT STD_LOGIC;
    JpegEncoder_m_Y_AC_Huffman_Table_value_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    JpegEncoder_m_CbCr_DC_Huffman_Table_length_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    JpegEncoder_m_CbCr_DC_Huffman_Table_length_ce0 : OUT STD_LOGIC;
    JpegEncoder_m_CbCr_DC_Huffman_Table_length_we0 : OUT STD_LOGIC;
    JpegEncoder_m_CbCr_DC_Huffman_Table_length_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    JpegEncoder_m_CbCr_DC_Huffman_Table_length_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    JpegEncoder_m_CbCr_DC_Huffman_Table_value_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    JpegEncoder_m_CbCr_DC_Huffman_Table_value_ce0 : OUT STD_LOGIC;
    JpegEncoder_m_CbCr_DC_Huffman_Table_value_we0 : OUT STD_LOGIC;
    JpegEncoder_m_CbCr_DC_Huffman_Table_value_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    JpegEncoder_m_CbCr_DC_Huffman_Table_value_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    JpegEncoder_m_CbCr_AC_Huffman_Table_length_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce0 : OUT STD_LOGIC;
    JpegEncoder_m_CbCr_AC_Huffman_Table_length_we0 : OUT STD_LOGIC;
    JpegEncoder_m_CbCr_AC_Huffman_Table_length_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    JpegEncoder_m_CbCr_AC_Huffman_Table_length_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
    JpegEncoder_m_CbCr_AC_Huffman_Table_length_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce1 : OUT STD_LOGIC;
    JpegEncoder_m_CbCr_AC_Huffman_Table_length_q1 : IN STD_LOGIC_VECTOR (4 downto 0);
    JpegEncoder_m_CbCr_AC_Huffman_Table_value_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce0 : OUT STD_LOGIC;
    JpegEncoder_m_CbCr_AC_Huffman_Table_value_we0 : OUT STD_LOGIC;
    JpegEncoder_m_CbCr_AC_Huffman_Table_value_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    JpegEncoder_m_CbCr_AC_Huffman_Table_value_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    JpegEncoder_m_CbCr_AC_Huffman_Table_value_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce1 : OUT STD_LOGIC;
    JpegEncoder_m_CbCr_AC_Huffman_Table_value_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    rgb_in_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    rgb_in_TVALID : IN STD_LOGIC;
    rgb_in_TREADY : OUT STD_LOGIC;
    rgb_in_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    rgb_in_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    rgb_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    jpeg_out_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    jpeg_out_TVALID : OUT STD_LOGIC;
    jpeg_out_TREADY : IN STD_LOGIC;
    jpeg_out_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    jpeg_out_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    jpeg_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of encodeToJPG is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_anonymous_namespace_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_anonymous_namespace_7_ce0 : STD_LOGIC;
    signal p_anonymous_namespace_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ZigZag_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal ZigZag_ce0 : STD_LOGIC;
    signal ZigZag_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_anonymous_namespace_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_anonymous_namespace_6_ce0 : STD_LOGIC;
    signal p_anonymous_namespace_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_anonymous_namespace_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_anonymous_namespace_5_ce0 : STD_LOGIC;
    signal p_anonymous_namespace_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_anonymous_namespace_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_anonymous_namespace_ce0 : STD_LOGIC;
    signal p_anonymous_namespace_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_anonymous_namespace_10_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_anonymous_namespace_10_ce0 : STD_LOGIC;
    signal p_anonymous_namespace_10_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_anonymous_namespace_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_anonymous_namespace_1_ce0 : STD_LOGIC;
    signal p_anonymous_namespace_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_anonymous_namespace_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_anonymous_namespace_3_ce0 : STD_LOGIC;
    signal p_anonymous_namespace_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_anonymous_namespace_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_anonymous_namespace_4_ce0 : STD_LOGIC;
    signal p_anonymous_namespace_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_anonymous_namespace_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_anonymous_namespace_8_ce0 : STD_LOGIC;
    signal p_anonymous_namespace_8_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_anonymous_namespace_9_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_anonymous_namespace_9_ce0 : STD_LOGIC;
    signal p_anonymous_namespace_9_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_753 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_p_foword_FDC_fu_405_ap_ready : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_ap_done : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_ap_ready : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_ap_done : STD_LOGIC;
    signal ap_block_state13_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_p_write_bitstring_s_fu_631_ap_ready : STD_LOGIC;
    signal grp_p_write_bitstring_s_fu_631_ap_done : STD_LOGIC;
    signal ap_block_state15_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal reg_758 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_763 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_768 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_779_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_reg_908 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln293_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_anonymous_namespace_12_reg_970 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ZigZag_load_reg_975 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_anonymous_namespace_14_reg_980 : STD_LOGIC_VECTOR (7 downto 0);
    signal count_fu_833_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal count_reg_988 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal xPos_fu_845_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal xPos_reg_996 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln633_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal yData_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_0_ce0 : STD_LOGIC;
    signal yData_0_we0 : STD_LOGIC;
    signal yData_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_0_ce1 : STD_LOGIC;
    signal yData_0_we1 : STD_LOGIC;
    signal yData_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_1_ce0 : STD_LOGIC;
    signal yData_1_we0 : STD_LOGIC;
    signal yData_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_1_ce1 : STD_LOGIC;
    signal yData_1_we1 : STD_LOGIC;
    signal yData_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_2_ce0 : STD_LOGIC;
    signal yData_2_we0 : STD_LOGIC;
    signal yData_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_2_ce1 : STD_LOGIC;
    signal yData_2_we1 : STD_LOGIC;
    signal yData_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_3_ce0 : STD_LOGIC;
    signal yData_3_we0 : STD_LOGIC;
    signal yData_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_3_ce1 : STD_LOGIC;
    signal yData_3_we1 : STD_LOGIC;
    signal yData_3_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_4_ce0 : STD_LOGIC;
    signal yData_4_we0 : STD_LOGIC;
    signal yData_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_4_ce1 : STD_LOGIC;
    signal yData_4_we1 : STD_LOGIC;
    signal yData_4_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_5_ce0 : STD_LOGIC;
    signal yData_5_we0 : STD_LOGIC;
    signal yData_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_5_ce1 : STD_LOGIC;
    signal yData_5_we1 : STD_LOGIC;
    signal yData_5_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_6_ce0 : STD_LOGIC;
    signal yData_6_we0 : STD_LOGIC;
    signal yData_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_6_ce1 : STD_LOGIC;
    signal yData_6_we1 : STD_LOGIC;
    signal yData_6_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_7_ce0 : STD_LOGIC;
    signal yData_7_we0 : STD_LOGIC;
    signal yData_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal yData_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal yData_7_ce1 : STD_LOGIC;
    signal yData_7_we1 : STD_LOGIC;
    signal yData_7_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cbData_0_ce0 : STD_LOGIC;
    signal cbData_0_we0 : STD_LOGIC;
    signal cbData_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_0_ce1 : STD_LOGIC;
    signal cbData_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cbData_1_ce0 : STD_LOGIC;
    signal cbData_1_we0 : STD_LOGIC;
    signal cbData_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_1_ce1 : STD_LOGIC;
    signal cbData_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cbData_2_ce0 : STD_LOGIC;
    signal cbData_2_we0 : STD_LOGIC;
    signal cbData_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_2_ce1 : STD_LOGIC;
    signal cbData_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cbData_3_ce0 : STD_LOGIC;
    signal cbData_3_we0 : STD_LOGIC;
    signal cbData_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_3_ce1 : STD_LOGIC;
    signal cbData_3_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cbData_4_ce0 : STD_LOGIC;
    signal cbData_4_we0 : STD_LOGIC;
    signal cbData_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_4_ce1 : STD_LOGIC;
    signal cbData_4_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cbData_5_ce0 : STD_LOGIC;
    signal cbData_5_we0 : STD_LOGIC;
    signal cbData_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_5_ce1 : STD_LOGIC;
    signal cbData_5_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cbData_6_ce0 : STD_LOGIC;
    signal cbData_6_we0 : STD_LOGIC;
    signal cbData_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_6_ce1 : STD_LOGIC;
    signal cbData_6_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cbData_7_ce0 : STD_LOGIC;
    signal cbData_7_we0 : STD_LOGIC;
    signal cbData_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cbData_7_ce1 : STD_LOGIC;
    signal cbData_7_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal crData_0_ce0 : STD_LOGIC;
    signal crData_0_we0 : STD_LOGIC;
    signal crData_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_0_ce1 : STD_LOGIC;
    signal crData_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal crData_1_ce0 : STD_LOGIC;
    signal crData_1_we0 : STD_LOGIC;
    signal crData_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_1_ce1 : STD_LOGIC;
    signal crData_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal crData_2_ce0 : STD_LOGIC;
    signal crData_2_we0 : STD_LOGIC;
    signal crData_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_2_ce1 : STD_LOGIC;
    signal crData_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal crData_3_ce0 : STD_LOGIC;
    signal crData_3_we0 : STD_LOGIC;
    signal crData_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_3_ce1 : STD_LOGIC;
    signal crData_3_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal crData_4_ce0 : STD_LOGIC;
    signal crData_4_we0 : STD_LOGIC;
    signal crData_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_4_ce1 : STD_LOGIC;
    signal crData_4_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal crData_5_ce0 : STD_LOGIC;
    signal crData_5_we0 : STD_LOGIC;
    signal crData_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_5_ce1 : STD_LOGIC;
    signal crData_5_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal crData_6_ce0 : STD_LOGIC;
    signal crData_6_we0 : STD_LOGIC;
    signal crData_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_6_ce1 : STD_LOGIC;
    signal crData_6_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal crData_7_ce0 : STD_LOGIC;
    signal crData_7_we0 : STD_LOGIC;
    signal crData_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal crData_7_ce1 : STD_LOGIC;
    signal crData_7_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal yQuant_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal yQuant_ce0 : STD_LOGIC;
    signal yQuant_we0 : STD_LOGIC;
    signal yQuant_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal yQuant_ce1 : STD_LOGIC;
    signal yQuant_we1 : STD_LOGIC;
    signal cbQuant_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cbQuant_ce0 : STD_LOGIC;
    signal cbQuant_we0 : STD_LOGIC;
    signal cbQuant_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal cbQuant_ce1 : STD_LOGIC;
    signal cbQuant_we1 : STD_LOGIC;
    signal crQuant_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal crQuant_ce0 : STD_LOGIC;
    signal crQuant_we0 : STD_LOGIC;
    signal crQuant_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal crQuant_ce1 : STD_LOGIC;
    signal crQuant_we1 : STD_LOGIC;
    signal outputBitString_y_le_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal outputBitString_y_le_ce0 : STD_LOGIC;
    signal outputBitString_y_le_we0 : STD_LOGIC;
    signal outputBitString_y_le_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputBitString_y_va_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal outputBitString_y_va_ce0 : STD_LOGIC;
    signal outputBitString_y_va_we0 : STD_LOGIC;
    signal outputBitString_y_va_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputBitString_cr_l_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal outputBitString_cr_l_ce0 : STD_LOGIC;
    signal outputBitString_cr_l_we0 : STD_LOGIC;
    signal outputBitString_cr_l_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputBitString_cr_v_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal outputBitString_cr_v_ce0 : STD_LOGIC;
    signal outputBitString_cr_v_we0 : STD_LOGIC;
    signal outputBitString_cr_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputBitString_cb_l_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal outputBitString_cb_l_ce0 : STD_LOGIC;
    signal outputBitString_cb_l_we0 : STD_LOGIC;
    signal outputBitString_cb_l_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputBitString_cb_v_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal outputBitString_cb_v_ce0 : STD_LOGIC;
    signal outputBitString_cb_v_we0 : STD_LOGIC;
    signal outputBitString_cb_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_foword_FDC_fu_405_ap_start : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_ap_idle : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_0_ce0 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_0_ce1 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_1_ce0 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_1_ce1 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_2_ce0 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_2_ce1 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_3_ce0 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_3_ce1 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_3_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_4_ce0 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_4_ce1 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_4_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_5_ce0 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_5_ce1 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_5_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_6_ce0 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_6_ce1 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_6_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_7_ce0 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_foword_FDC_fu_405_channel_data_7_ce1 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_channel_data_7_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_1_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_2_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_3_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_4_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_5_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_6_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_7_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_8_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_9_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_10_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_11_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_12_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_13_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_14_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_15_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_16_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_17_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_18_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_19_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_20_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_21_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_22_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_23_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_24_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_25_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_26_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_27_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_28_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_29_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_30_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_31_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_32_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_33_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_34_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_35_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_36_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_39_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_40_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_41_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_42_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_43_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_44_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_47_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_48_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_49_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_50_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_51_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_56_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_quant_57_read : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_foword_FDC_fu_405_fdc_data_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_p_foword_FDC_fu_405_fdc_data_ce0 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_fdc_data_we0 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_fdc_data_d0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_p_foword_FDC_fu_405_fdc_data_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_p_foword_FDC_fu_405_fdc_data_ce1 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_fdc_data_we1 : STD_LOGIC;
    signal grp_p_foword_FDC_fu_405_fdc_data_d1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_p_convertColorSpace_fu_565_ap_start : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_ap_done : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_ap_idle : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_ap_ready : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_ce1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_0_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_0_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_0_ce1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_0_we1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_1_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_1_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_1_ce1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_1_we1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_2_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_2_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_2_ce1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_2_we1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_2_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_3_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_3_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_3_ce1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_3_we1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_3_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_4_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_4_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_4_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_4_ce1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_4_we1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_5_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_5_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_5_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_5_ce1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_5_we1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_6_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_6_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_6_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_6_ce1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_6_we1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_6_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_7_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_7_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_7_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_yData_7_ce1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_7_we1 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_yData_7_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_0_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_0_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_1_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_1_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_2_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_2_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_3_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_3_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_4_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_4_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_4_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_5_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_5_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_5_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_6_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_6_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_6_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_cbData_7_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_7_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_cbData_7_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_0_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_0_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_1_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_1_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_2_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_2_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_3_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_3_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_4_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_4_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_4_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_5_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_5_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_5_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_6_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_6_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_6_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_p_convertColorSpace_fu_565_crData_7_ce0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_7_we0 : STD_LOGIC;
    signal grp_p_convertColorSpace_fu_565_crData_7_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_ap_start : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_ap_idle : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_DU_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_DU_ce0 : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_DU_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_prevDC_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_HTDC_length_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_HTDC_length_ce0 : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_HTDC_length_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_HTDC_value_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_HTDC_value_ce0 : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_HTDC_value_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_HTAC_length_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_HTAC_length_ce0 : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_HTAC_length_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_HTAC_length_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_HTAC_length_ce1 : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_HTAC_length_q1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_HTAC_value_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_HTAC_value_ce0 : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_HTAC_value_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_HTAC_value_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_HTAC_value_ce1 : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_HTAC_value_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_outputBitString_length_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_outputBitString_length_ce0 : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_outputBitString_length_we0 : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_outputBitString_length_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_outputBitString_value_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_outputBitString_value_ce0 : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_outputBitString_value_we0 : STD_LOGIC;
    signal grp_p_doHuffmanEncoding_fu_597_outputBitString_value_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_p_doHuffmanEncoding_fu_597_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_readFromBMP_fu_617_ap_start : STD_LOGIC;
    signal grp_readFromBMP_fu_617_ap_done : STD_LOGIC;
    signal grp_readFromBMP_fu_617_ap_idle : STD_LOGIC;
    signal grp_readFromBMP_fu_617_ap_ready : STD_LOGIC;
    signal grp_readFromBMP_fu_617_JpegEncoder_buffer_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_readFromBMP_fu_617_JpegEncoder_buffer_ce0 : STD_LOGIC;
    signal grp_readFromBMP_fu_617_JpegEncoder_buffer_we0 : STD_LOGIC;
    signal grp_readFromBMP_fu_617_JpegEncoder_buffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_readFromBMP_fu_617_JpegEncoder_buffer_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_readFromBMP_fu_617_JpegEncoder_buffer_ce1 : STD_LOGIC;
    signal grp_readFromBMP_fu_617_JpegEncoder_buffer_we1 : STD_LOGIC;
    signal grp_readFromBMP_fu_617_JpegEncoder_buffer_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_readFromBMP_fu_617_rgb_in_TREADY : STD_LOGIC;
    signal grp_p_write_bitstring_s_fu_631_ap_start : STD_LOGIC;
    signal grp_p_write_bitstring_s_fu_631_ap_idle : STD_LOGIC;
    signal grp_p_write_bitstring_s_fu_631_JpegEncoder_outhebyte_data_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_write_bitstring_s_fu_631_bs_length_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_p_write_bitstring_s_fu_631_bs_length_ce0 : STD_LOGIC;
    signal grp_p_write_bitstring_s_fu_631_bs_length_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_write_bitstring_s_fu_631_bs_value_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_p_write_bitstring_s_fu_631_bs_value_ce0 : STD_LOGIC;
    signal grp_p_write_bitstring_s_fu_631_bs_value_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_write_bitstring_s_fu_631_newByte_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_write_bitstring_s_fu_631_newBytePos_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_write_bitstring_s_fu_631_jpeg_out_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID : STD_LOGIC;
    signal grp_p_write_bitstring_s_fu_631_jpeg_out_TREADY : STD_LOGIC;
    signal grp_p_write_bitstring_s_fu_631_jpeg_out_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_p_write_bitstring_s_fu_631_jpeg_out_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_p_write_bitstring_s_fu_631_jpeg_out_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_p_write_bitstring_s_fu_631_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_write_bitstring_s_fu_631_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_write_bitstring_s_fu_631_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_write_jpeg_header_fu_651_ap_start : STD_LOGIC;
    signal grp_p_write_jpeg_header_fu_651_ap_done : STD_LOGIC;
    signal grp_p_write_jpeg_header_fu_651_ap_idle : STD_LOGIC;
    signal grp_p_write_jpeg_header_fu_651_ap_ready : STD_LOGIC;
    signal grp_p_write_jpeg_header_fu_651_JpegEncoder_m_YTable_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_p_write_jpeg_header_fu_651_JpegEncoder_m_YTable_ce0 : STD_LOGIC;
    signal grp_p_write_jpeg_header_fu_651_JpegEncoder_m_CbCrTable_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_p_write_jpeg_header_fu_651_JpegEncoder_m_CbCrTable_ce0 : STD_LOGIC;
    signal grp_p_write_jpeg_header_fu_651_jpeg_out_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_write_jpeg_header_fu_651_jpeg_out_TVALID : STD_LOGIC;
    signal grp_p_write_jpeg_header_fu_651_jpeg_out_TREADY : STD_LOGIC;
    signal grp_p_write_jpeg_header_fu_651_jpeg_out_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_p_write_jpeg_header_fu_651_jpeg_out_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_p_write_jpeg_header_fu_651_jpeg_out_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_p_write_jpeg_header_fu_651_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_computeHuffmanTable_fu_685_ap_start : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_685_ap_done : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_685_ap_idle : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_685_ap_ready : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_685_nr_codes_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_computeHuffmanTable_fu_685_nr_codes_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_685_std_table_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_computeHuffmanTable_fu_685_std_table_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_685_huffman_table_length_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_computeHuffmanTable_fu_685_huffman_table_length_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_685_huffman_table_length_we0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_685_huffman_table_length_d0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_computeHuffmanTable_fu_685_huffman_table_value_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_computeHuffmanTable_fu_685_huffman_table_value_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_685_huffman_table_value_we0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_685_huffman_table_value_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_p_computeHuffmanTable_fu_697_ap_start : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_697_ap_done : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_697_ap_idle : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_697_ap_ready : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_697_nr_codes_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_computeHuffmanTable_fu_697_nr_codes_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_697_std_table_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_computeHuffmanTable_fu_697_std_table_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_697_huffman_table_length_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_computeHuffmanTable_fu_697_huffman_table_length_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_697_huffman_table_length_we0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_697_huffman_table_length_d0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_computeHuffmanTable_fu_697_huffman_table_value_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_p_computeHuffmanTable_fu_697_huffman_table_value_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_697_huffman_table_value_we0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_fu_697_huffman_table_value_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_p_computeHuffmanTable_1_fu_709_ap_start : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_709_ap_done : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_709_ap_idle : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_709_ap_ready : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_709_nr_codes_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_computeHuffmanTable_1_fu_709_nr_codes_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_709_std_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_computeHuffmanTable_1_fu_709_std_table_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_we0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_d0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_we0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_p_computeHuffmanTable_1_fu_721_ap_start : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_721_ap_done : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_721_ap_idle : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_721_ap_ready : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_721_nr_codes_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_computeHuffmanTable_1_fu_721_nr_codes_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_721_std_table_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_computeHuffmanTable_1_fu_721_std_table_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_we0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_d0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_ce0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_we0 : STD_LOGIC;
    signal grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_0_i_reg_371 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal count_0_reg_382 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_state5_on_subcall_done : BOOLEAN;
    signal xPos_0_reg_393 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_p_foword_FDC_fu_405_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_p_convertColorSpace_fu_565_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_p_doHuffmanEncoding_fu_597_ap_start_reg : STD_LOGIC := '0';
    signal grp_readFromBMP_fu_617_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln630_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_p_write_bitstring_s_fu_631_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_p_write_jpeg_header_fu_651_ap_start_reg : STD_LOGIC := '0';
    signal grp_p_computeHuffmanTable_fu_685_ap_start_reg : STD_LOGIC := '0';
    signal grp_p_computeHuffmanTable_fu_697_ap_start_reg : STD_LOGIC := '0';
    signal grp_p_computeHuffmanTable_1_fu_709_ap_start_reg : STD_LOGIC := '0';
    signal grp_p_computeHuffmanTable_1_fu_721_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln295_fu_785_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln295_1_fu_817_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal JpegEncoder_outhebyt_fu_282 : STD_LOGIC_VECTOR (7 downto 0);
    signal prev_DC_Y_1_fu_286 : STD_LOGIC_VECTOR (15 downto 0);
    signal prev_DC_Cb_1_fu_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal prev_DC_Cr_1_fu_294 : STD_LOGIC_VECTOR (15 downto 0);
    signal newByte_1_fu_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal newBytePos_1_fu_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);

    component p_foword_FDC IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        channel_data_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_0_ce0 : OUT STD_LOGIC;
        channel_data_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_0_ce1 : OUT STD_LOGIC;
        channel_data_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_1_ce0 : OUT STD_LOGIC;
        channel_data_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_1_ce1 : OUT STD_LOGIC;
        channel_data_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_2_ce0 : OUT STD_LOGIC;
        channel_data_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_2_ce1 : OUT STD_LOGIC;
        channel_data_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_3_ce0 : OUT STD_LOGIC;
        channel_data_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_3_ce1 : OUT STD_LOGIC;
        channel_data_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_4_ce0 : OUT STD_LOGIC;
        channel_data_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_4_ce1 : OUT STD_LOGIC;
        channel_data_4_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_5_ce0 : OUT STD_LOGIC;
        channel_data_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_5_ce1 : OUT STD_LOGIC;
        channel_data_5_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_6_ce0 : OUT STD_LOGIC;
        channel_data_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_6_ce1 : OUT STD_LOGIC;
        channel_data_6_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_7_ce0 : OUT STD_LOGIC;
        channel_data_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        channel_data_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        channel_data_7_ce1 : OUT STD_LOGIC;
        channel_data_7_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        quant_1_read : IN STD_LOGIC_VECTOR (3 downto 0);
        quant_2_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_3_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_4_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_5_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_6_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_7_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_8_read : IN STD_LOGIC_VECTOR (3 downto 0);
        quant_9_read : IN STD_LOGIC_VECTOR (3 downto 0);
        quant_10_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_11_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_12_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_13_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_14_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_15_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_16_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_17_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_18_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_19_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_20_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_21_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_22_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_23_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_24_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_25_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_26_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_27_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_28_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_29_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_30_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_31_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_32_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_33_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_34_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_35_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_36_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_39_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_40_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_41_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_42_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_43_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_44_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_47_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_48_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_49_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_50_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_51_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_56_read : IN STD_LOGIC_VECTOR (4 downto 0);
        quant_57_read : IN STD_LOGIC_VECTOR (4 downto 0);
        fdc_data_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        fdc_data_ce0 : OUT STD_LOGIC;
        fdc_data_we0 : OUT STD_LOGIC;
        fdc_data_d0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        fdc_data_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        fdc_data_ce1 : OUT STD_LOGIC;
        fdc_data_we1 : OUT STD_LOGIC;
        fdc_data_d1 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component p_convertColorSpace IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        JpegEncoder_buffer_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        JpegEncoder_buffer_ce0 : OUT STD_LOGIC;
        JpegEncoder_buffer_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        JpegEncoder_buffer_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        JpegEncoder_buffer_ce1 : OUT STD_LOGIC;
        JpegEncoder_buffer_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        xPos : IN STD_LOGIC_VECTOR (9 downto 0);
        yData_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_0_ce0 : OUT STD_LOGIC;
        yData_0_we0 : OUT STD_LOGIC;
        yData_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_0_ce1 : OUT STD_LOGIC;
        yData_0_we1 : OUT STD_LOGIC;
        yData_0_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_1_ce0 : OUT STD_LOGIC;
        yData_1_we0 : OUT STD_LOGIC;
        yData_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_1_ce1 : OUT STD_LOGIC;
        yData_1_we1 : OUT STD_LOGIC;
        yData_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_2_ce0 : OUT STD_LOGIC;
        yData_2_we0 : OUT STD_LOGIC;
        yData_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_2_ce1 : OUT STD_LOGIC;
        yData_2_we1 : OUT STD_LOGIC;
        yData_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_3_ce0 : OUT STD_LOGIC;
        yData_3_we0 : OUT STD_LOGIC;
        yData_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_3_ce1 : OUT STD_LOGIC;
        yData_3_we1 : OUT STD_LOGIC;
        yData_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_4_ce0 : OUT STD_LOGIC;
        yData_4_we0 : OUT STD_LOGIC;
        yData_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_4_ce1 : OUT STD_LOGIC;
        yData_4_we1 : OUT STD_LOGIC;
        yData_4_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_5_ce0 : OUT STD_LOGIC;
        yData_5_we0 : OUT STD_LOGIC;
        yData_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_5_ce1 : OUT STD_LOGIC;
        yData_5_we1 : OUT STD_LOGIC;
        yData_5_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_6_ce0 : OUT STD_LOGIC;
        yData_6_we0 : OUT STD_LOGIC;
        yData_6_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_6_ce1 : OUT STD_LOGIC;
        yData_6_we1 : OUT STD_LOGIC;
        yData_6_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_7_ce0 : OUT STD_LOGIC;
        yData_7_we0 : OUT STD_LOGIC;
        yData_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        yData_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        yData_7_ce1 : OUT STD_LOGIC;
        yData_7_we1 : OUT STD_LOGIC;
        yData_7_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        cbData_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cbData_0_ce0 : OUT STD_LOGIC;
        cbData_0_we0 : OUT STD_LOGIC;
        cbData_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        cbData_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cbData_1_ce0 : OUT STD_LOGIC;
        cbData_1_we0 : OUT STD_LOGIC;
        cbData_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        cbData_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cbData_2_ce0 : OUT STD_LOGIC;
        cbData_2_we0 : OUT STD_LOGIC;
        cbData_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        cbData_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cbData_3_ce0 : OUT STD_LOGIC;
        cbData_3_we0 : OUT STD_LOGIC;
        cbData_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        cbData_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cbData_4_ce0 : OUT STD_LOGIC;
        cbData_4_we0 : OUT STD_LOGIC;
        cbData_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        cbData_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cbData_5_ce0 : OUT STD_LOGIC;
        cbData_5_we0 : OUT STD_LOGIC;
        cbData_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        cbData_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cbData_6_ce0 : OUT STD_LOGIC;
        cbData_6_we0 : OUT STD_LOGIC;
        cbData_6_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        cbData_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cbData_7_ce0 : OUT STD_LOGIC;
        cbData_7_we0 : OUT STD_LOGIC;
        cbData_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        crData_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        crData_0_ce0 : OUT STD_LOGIC;
        crData_0_we0 : OUT STD_LOGIC;
        crData_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        crData_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        crData_1_ce0 : OUT STD_LOGIC;
        crData_1_we0 : OUT STD_LOGIC;
        crData_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        crData_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        crData_2_ce0 : OUT STD_LOGIC;
        crData_2_we0 : OUT STD_LOGIC;
        crData_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        crData_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        crData_3_ce0 : OUT STD_LOGIC;
        crData_3_we0 : OUT STD_LOGIC;
        crData_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        crData_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        crData_4_ce0 : OUT STD_LOGIC;
        crData_4_we0 : OUT STD_LOGIC;
        crData_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        crData_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        crData_5_ce0 : OUT STD_LOGIC;
        crData_5_we0 : OUT STD_LOGIC;
        crData_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        crData_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        crData_6_ce0 : OUT STD_LOGIC;
        crData_6_we0 : OUT STD_LOGIC;
        crData_6_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        crData_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        crData_7_ce0 : OUT STD_LOGIC;
        crData_7_we0 : OUT STD_LOGIC;
        crData_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component p_doHuffmanEncoding IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        DU_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        DU_ce0 : OUT STD_LOGIC;
        DU_q0 : IN STD_LOGIC_VECTOR (10 downto 0);
        prevDC_read : IN STD_LOGIC_VECTOR (15 downto 0);
        HTDC_length_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        HTDC_length_ce0 : OUT STD_LOGIC;
        HTDC_length_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        HTDC_value_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        HTDC_value_ce0 : OUT STD_LOGIC;
        HTDC_value_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        HTAC_length_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        HTAC_length_ce0 : OUT STD_LOGIC;
        HTAC_length_q0 : IN STD_LOGIC_VECTOR (4 downto 0);
        HTAC_length_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        HTAC_length_ce1 : OUT STD_LOGIC;
        HTAC_length_q1 : IN STD_LOGIC_VECTOR (4 downto 0);
        HTAC_value_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        HTAC_value_ce0 : OUT STD_LOGIC;
        HTAC_value_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        HTAC_value_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        HTAC_value_ce1 : OUT STD_LOGIC;
        HTAC_value_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        outputBitString_length_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        outputBitString_length_ce0 : OUT STD_LOGIC;
        outputBitString_length_we0 : OUT STD_LOGIC;
        outputBitString_length_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        outputBitString_value_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        outputBitString_value_ce0 : OUT STD_LOGIC;
        outputBitString_value_we0 : OUT STD_LOGIC;
        outputBitString_value_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component readFromBMP IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        JpegEncoder_buffer_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        JpegEncoder_buffer_ce0 : OUT STD_LOGIC;
        JpegEncoder_buffer_we0 : OUT STD_LOGIC;
        JpegEncoder_buffer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        JpegEncoder_buffer_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        JpegEncoder_buffer_ce1 : OUT STD_LOGIC;
        JpegEncoder_buffer_we1 : OUT STD_LOGIC;
        JpegEncoder_buffer_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rgb_in_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        rgb_in_TVALID : IN STD_LOGIC;
        rgb_in_TREADY : OUT STD_LOGIC;
        rgb_in_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        rgb_in_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        rgb_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component p_write_bitstring_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        JpegEncoder_outhebyte_data_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        bs_length_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bs_length_ce0 : OUT STD_LOGIC;
        bs_length_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bs_value_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bs_value_ce0 : OUT STD_LOGIC;
        bs_value_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        counts : IN STD_LOGIC_VECTOR (31 downto 0);
        newByte_read : IN STD_LOGIC_VECTOR (31 downto 0);
        newBytePos_read : IN STD_LOGIC_VECTOR (31 downto 0);
        jpeg_out_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        jpeg_out_TVALID : OUT STD_LOGIC;
        jpeg_out_TREADY : IN STD_LOGIC;
        jpeg_out_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        jpeg_out_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        jpeg_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component p_write_jpeg_header IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        JpegEncoder_m_YTable_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        JpegEncoder_m_YTable_ce0 : OUT STD_LOGIC;
        JpegEncoder_m_YTable_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        JpegEncoder_m_CbCrTable_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        JpegEncoder_m_CbCrTable_ce0 : OUT STD_LOGIC;
        JpegEncoder_m_CbCrTable_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        jpeg_out_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        jpeg_out_TVALID : OUT STD_LOGIC;
        jpeg_out_TREADY : IN STD_LOGIC;
        jpeg_out_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        jpeg_out_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        jpeg_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component p_computeHuffmanTable IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nr_codes_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        nr_codes_ce0 : OUT STD_LOGIC;
        nr_codes_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        std_table_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        std_table_ce0 : OUT STD_LOGIC;
        std_table_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        huffman_table_length_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        huffman_table_length_ce0 : OUT STD_LOGIC;
        huffman_table_length_we0 : OUT STD_LOGIC;
        huffman_table_length_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        huffman_table_value_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        huffman_table_value_ce0 : OUT STD_LOGIC;
        huffman_table_value_we0 : OUT STD_LOGIC;
        huffman_table_value_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component p_computeHuffmanTable_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nr_codes_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        nr_codes_ce0 : OUT STD_LOGIC;
        nr_codes_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        std_table_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        std_table_ce0 : OUT STD_LOGIC;
        std_table_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        huffman_table_length_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        huffman_table_length_ce0 : OUT STD_LOGIC;
        huffman_table_length_we0 : OUT STD_LOGIC;
        huffman_table_length_d0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        huffman_table_value_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        huffman_table_value_ce0 : OUT STD_LOGIC;
        huffman_table_value_we0 : OUT STD_LOGIC;
        huffman_table_value_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component encodeToJPG_p_anoFfa IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component encodeToJPG_ZigZag IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component encodeToJPG_p_anoGfk IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component encodeToJPG_p_anoHfu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component encodeToJPG_p_anoIfE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component encodeToJPG_p_anoJfO IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component encodeToJPG_p_anoKfY IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component encodeToJPG_p_anoLf8 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component encodeToJPG_p_anoMgi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component encodeToJPG_p_anoNgs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component encodeToJPG_p_anoOgC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component encodeToJPG_yData_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component encodeToJPG_cbDatPgM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component encodeToJPG_yQuant IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (10 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component encodeToJPG_outpu5jm IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    p_anonymous_namespace_7_U : component encodeToJPG_p_anoFfa
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_anonymous_namespace_7_address0,
        ce0 => p_anonymous_namespace_7_ce0,
        q0 => p_anonymous_namespace_7_q0);

    ZigZag_U : component encodeToJPG_ZigZag
    generic map (
        DataWidth => 6,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ZigZag_address0,
        ce0 => ZigZag_ce0,
        q0 => ZigZag_q0);

    p_anonymous_namespace_6_U : component encodeToJPG_p_anoGfk
    generic map (
        DataWidth => 8,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_anonymous_namespace_6_address0,
        ce0 => p_anonymous_namespace_6_ce0,
        q0 => p_anonymous_namespace_6_q0);

    p_anonymous_namespace_5_U : component encodeToJPG_p_anoHfu
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_anonymous_namespace_5_address0,
        ce0 => p_anonymous_namespace_5_ce0,
        q0 => p_anonymous_namespace_5_q0);

    p_anonymous_namespace_U : component encodeToJPG_p_anoIfE
    generic map (
        DataWidth => 8,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_anonymous_namespace_address0,
        ce0 => p_anonymous_namespace_ce0,
        q0 => p_anonymous_namespace_q0);

    p_anonymous_namespace_10_U : component encodeToJPG_p_anoJfO
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_anonymous_namespace_10_address0,
        ce0 => p_anonymous_namespace_10_ce0,
        q0 => p_anonymous_namespace_10_q0);

    p_anonymous_namespace_1_U : component encodeToJPG_p_anoKfY
    generic map (
        DataWidth => 8,
        AddressRange => 162,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_anonymous_namespace_1_address0,
        ce0 => p_anonymous_namespace_1_ce0,
        q0 => p_anonymous_namespace_1_q0);

    p_anonymous_namespace_3_U : component encodeToJPG_p_anoLf8
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_anonymous_namespace_3_address0,
        ce0 => p_anonymous_namespace_3_ce0,
        q0 => p_anonymous_namespace_3_q0);

    p_anonymous_namespace_4_U : component encodeToJPG_p_anoMgi
    generic map (
        DataWidth => 8,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_anonymous_namespace_4_address0,
        ce0 => p_anonymous_namespace_4_ce0,
        q0 => p_anonymous_namespace_4_q0);

    p_anonymous_namespace_8_U : component encodeToJPG_p_anoNgs
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_anonymous_namespace_8_address0,
        ce0 => p_anonymous_namespace_8_ce0,
        q0 => p_anonymous_namespace_8_q0);

    p_anonymous_namespace_9_U : component encodeToJPG_p_anoOgC
    generic map (
        DataWidth => 8,
        AddressRange => 162,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_anonymous_namespace_9_address0,
        ce0 => p_anonymous_namespace_9_ce0,
        q0 => p_anonymous_namespace_9_q0);

    yData_0_U : component encodeToJPG_yData_0
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => yData_0_address0,
        ce0 => yData_0_ce0,
        we0 => yData_0_we0,
        d0 => grp_p_convertColorSpace_fu_565_yData_0_d0,
        q0 => yData_0_q0,
        address1 => yData_0_address1,
        ce1 => yData_0_ce1,
        we1 => yData_0_we1,
        d1 => grp_p_convertColorSpace_fu_565_yData_0_d1,
        q1 => yData_0_q1);

    yData_1_U : component encodeToJPG_yData_0
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => yData_1_address0,
        ce0 => yData_1_ce0,
        we0 => yData_1_we0,
        d0 => grp_p_convertColorSpace_fu_565_yData_1_d0,
        q0 => yData_1_q0,
        address1 => yData_1_address1,
        ce1 => yData_1_ce1,
        we1 => yData_1_we1,
        d1 => grp_p_convertColorSpace_fu_565_yData_1_d1,
        q1 => yData_1_q1);

    yData_2_U : component encodeToJPG_yData_0
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => yData_2_address0,
        ce0 => yData_2_ce0,
        we0 => yData_2_we0,
        d0 => grp_p_convertColorSpace_fu_565_yData_2_d0,
        q0 => yData_2_q0,
        address1 => yData_2_address1,
        ce1 => yData_2_ce1,
        we1 => yData_2_we1,
        d1 => grp_p_convertColorSpace_fu_565_yData_2_d1,
        q1 => yData_2_q1);

    yData_3_U : component encodeToJPG_yData_0
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => yData_3_address0,
        ce0 => yData_3_ce0,
        we0 => yData_3_we0,
        d0 => grp_p_convertColorSpace_fu_565_yData_3_d0,
        q0 => yData_3_q0,
        address1 => yData_3_address1,
        ce1 => yData_3_ce1,
        we1 => yData_3_we1,
        d1 => grp_p_convertColorSpace_fu_565_yData_3_d1,
        q1 => yData_3_q1);

    yData_4_U : component encodeToJPG_yData_0
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => yData_4_address0,
        ce0 => yData_4_ce0,
        we0 => yData_4_we0,
        d0 => grp_p_convertColorSpace_fu_565_yData_4_d0,
        q0 => yData_4_q0,
        address1 => yData_4_address1,
        ce1 => yData_4_ce1,
        we1 => yData_4_we1,
        d1 => grp_p_convertColorSpace_fu_565_yData_4_d1,
        q1 => yData_4_q1);

    yData_5_U : component encodeToJPG_yData_0
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => yData_5_address0,
        ce0 => yData_5_ce0,
        we0 => yData_5_we0,
        d0 => grp_p_convertColorSpace_fu_565_yData_5_d0,
        q0 => yData_5_q0,
        address1 => yData_5_address1,
        ce1 => yData_5_ce1,
        we1 => yData_5_we1,
        d1 => grp_p_convertColorSpace_fu_565_yData_5_d1,
        q1 => yData_5_q1);

    yData_6_U : component encodeToJPG_yData_0
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => yData_6_address0,
        ce0 => yData_6_ce0,
        we0 => yData_6_we0,
        d0 => grp_p_convertColorSpace_fu_565_yData_6_d0,
        q0 => yData_6_q0,
        address1 => yData_6_address1,
        ce1 => yData_6_ce1,
        we1 => yData_6_we1,
        d1 => grp_p_convertColorSpace_fu_565_yData_6_d1,
        q1 => yData_6_q1);

    yData_7_U : component encodeToJPG_yData_0
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => yData_7_address0,
        ce0 => yData_7_ce0,
        we0 => yData_7_we0,
        d0 => grp_p_convertColorSpace_fu_565_yData_7_d0,
        q0 => yData_7_q0,
        address1 => yData_7_address1,
        ce1 => yData_7_ce1,
        we1 => yData_7_we1,
        d1 => grp_p_convertColorSpace_fu_565_yData_7_d1,
        q1 => yData_7_q1);

    cbData_0_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cbData_0_address0,
        ce0 => cbData_0_ce0,
        we0 => cbData_0_we0,
        d0 => grp_p_convertColorSpace_fu_565_cbData_0_d0,
        q0 => cbData_0_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_0_address1,
        ce1 => cbData_0_ce1,
        q1 => cbData_0_q1);

    cbData_1_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cbData_1_address0,
        ce0 => cbData_1_ce0,
        we0 => cbData_1_we0,
        d0 => grp_p_convertColorSpace_fu_565_cbData_1_d0,
        q0 => cbData_1_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_1_address1,
        ce1 => cbData_1_ce1,
        q1 => cbData_1_q1);

    cbData_2_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cbData_2_address0,
        ce0 => cbData_2_ce0,
        we0 => cbData_2_we0,
        d0 => grp_p_convertColorSpace_fu_565_cbData_2_d0,
        q0 => cbData_2_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_2_address1,
        ce1 => cbData_2_ce1,
        q1 => cbData_2_q1);

    cbData_3_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cbData_3_address0,
        ce0 => cbData_3_ce0,
        we0 => cbData_3_we0,
        d0 => grp_p_convertColorSpace_fu_565_cbData_3_d0,
        q0 => cbData_3_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_3_address1,
        ce1 => cbData_3_ce1,
        q1 => cbData_3_q1);

    cbData_4_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cbData_4_address0,
        ce0 => cbData_4_ce0,
        we0 => cbData_4_we0,
        d0 => grp_p_convertColorSpace_fu_565_cbData_4_d0,
        q0 => cbData_4_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_4_address1,
        ce1 => cbData_4_ce1,
        q1 => cbData_4_q1);

    cbData_5_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cbData_5_address0,
        ce0 => cbData_5_ce0,
        we0 => cbData_5_we0,
        d0 => grp_p_convertColorSpace_fu_565_cbData_5_d0,
        q0 => cbData_5_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_5_address1,
        ce1 => cbData_5_ce1,
        q1 => cbData_5_q1);

    cbData_6_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cbData_6_address0,
        ce0 => cbData_6_ce0,
        we0 => cbData_6_we0,
        d0 => grp_p_convertColorSpace_fu_565_cbData_6_d0,
        q0 => cbData_6_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_6_address1,
        ce1 => cbData_6_ce1,
        q1 => cbData_6_q1);

    cbData_7_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cbData_7_address0,
        ce0 => cbData_7_ce0,
        we0 => cbData_7_we0,
        d0 => grp_p_convertColorSpace_fu_565_cbData_7_d0,
        q0 => cbData_7_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_7_address1,
        ce1 => cbData_7_ce1,
        q1 => cbData_7_q1);

    crData_0_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => crData_0_address0,
        ce0 => crData_0_ce0,
        we0 => crData_0_we0,
        d0 => grp_p_convertColorSpace_fu_565_crData_0_d0,
        q0 => crData_0_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_0_address1,
        ce1 => crData_0_ce1,
        q1 => crData_0_q1);

    crData_1_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => crData_1_address0,
        ce0 => crData_1_ce0,
        we0 => crData_1_we0,
        d0 => grp_p_convertColorSpace_fu_565_crData_1_d0,
        q0 => crData_1_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_1_address1,
        ce1 => crData_1_ce1,
        q1 => crData_1_q1);

    crData_2_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => crData_2_address0,
        ce0 => crData_2_ce0,
        we0 => crData_2_we0,
        d0 => grp_p_convertColorSpace_fu_565_crData_2_d0,
        q0 => crData_2_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_2_address1,
        ce1 => crData_2_ce1,
        q1 => crData_2_q1);

    crData_3_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => crData_3_address0,
        ce0 => crData_3_ce0,
        we0 => crData_3_we0,
        d0 => grp_p_convertColorSpace_fu_565_crData_3_d0,
        q0 => crData_3_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_3_address1,
        ce1 => crData_3_ce1,
        q1 => crData_3_q1);

    crData_4_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => crData_4_address0,
        ce0 => crData_4_ce0,
        we0 => crData_4_we0,
        d0 => grp_p_convertColorSpace_fu_565_crData_4_d0,
        q0 => crData_4_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_4_address1,
        ce1 => crData_4_ce1,
        q1 => crData_4_q1);

    crData_5_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => crData_5_address0,
        ce0 => crData_5_ce0,
        we0 => crData_5_we0,
        d0 => grp_p_convertColorSpace_fu_565_crData_5_d0,
        q0 => crData_5_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_5_address1,
        ce1 => crData_5_ce1,
        q1 => crData_5_q1);

    crData_6_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => crData_6_address0,
        ce0 => crData_6_ce0,
        we0 => crData_6_we0,
        d0 => grp_p_convertColorSpace_fu_565_crData_6_d0,
        q0 => crData_6_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_6_address1,
        ce1 => crData_6_ce1,
        q1 => crData_6_q1);

    crData_7_U : component encodeToJPG_cbDatPgM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => crData_7_address0,
        ce0 => crData_7_ce0,
        we0 => crData_7_we0,
        d0 => grp_p_convertColorSpace_fu_565_crData_7_d0,
        q0 => crData_7_q0,
        address1 => grp_p_foword_FDC_fu_405_channel_data_7_address1,
        ce1 => crData_7_ce1,
        q1 => crData_7_q1);

    yQuant_U : component encodeToJPG_yQuant
    generic map (
        DataWidth => 11,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => yQuant_address0,
        ce0 => yQuant_ce0,
        we0 => yQuant_we0,
        d0 => grp_p_foword_FDC_fu_405_fdc_data_d0,
        q0 => yQuant_q0,
        address1 => grp_p_foword_FDC_fu_405_fdc_data_address1,
        ce1 => yQuant_ce1,
        we1 => yQuant_we1,
        d1 => grp_p_foword_FDC_fu_405_fdc_data_d1);

    cbQuant_U : component encodeToJPG_yQuant
    generic map (
        DataWidth => 11,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cbQuant_address0,
        ce0 => cbQuant_ce0,
        we0 => cbQuant_we0,
        d0 => grp_p_foword_FDC_fu_405_fdc_data_d0,
        q0 => cbQuant_q0,
        address1 => grp_p_foword_FDC_fu_405_fdc_data_address1,
        ce1 => cbQuant_ce1,
        we1 => cbQuant_we1,
        d1 => grp_p_foword_FDC_fu_405_fdc_data_d1);

    crQuant_U : component encodeToJPG_yQuant
    generic map (
        DataWidth => 11,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => crQuant_address0,
        ce0 => crQuant_ce0,
        we0 => crQuant_we0,
        d0 => grp_p_foword_FDC_fu_405_fdc_data_d0,
        q0 => crQuant_q0,
        address1 => grp_p_foword_FDC_fu_405_fdc_data_address1,
        ce1 => crQuant_ce1,
        we1 => crQuant_we1,
        d1 => grp_p_foword_FDC_fu_405_fdc_data_d1);

    outputBitString_y_le_U : component encodeToJPG_outpu5jm
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outputBitString_y_le_address0,
        ce0 => outputBitString_y_le_ce0,
        we0 => outputBitString_y_le_we0,
        d0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_length_d0,
        q0 => outputBitString_y_le_q0);

    outputBitString_y_va_U : component encodeToJPG_outpu5jm
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outputBitString_y_va_address0,
        ce0 => outputBitString_y_va_ce0,
        we0 => outputBitString_y_va_we0,
        d0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_value_d0,
        q0 => outputBitString_y_va_q0);

    outputBitString_cr_l_U : component encodeToJPG_outpu5jm
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outputBitString_cr_l_address0,
        ce0 => outputBitString_cr_l_ce0,
        we0 => outputBitString_cr_l_we0,
        d0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_length_d0,
        q0 => outputBitString_cr_l_q0);

    outputBitString_cr_v_U : component encodeToJPG_outpu5jm
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outputBitString_cr_v_address0,
        ce0 => outputBitString_cr_v_ce0,
        we0 => outputBitString_cr_v_we0,
        d0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_value_d0,
        q0 => outputBitString_cr_v_q0);

    outputBitString_cb_l_U : component encodeToJPG_outpu5jm
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outputBitString_cb_l_address0,
        ce0 => outputBitString_cb_l_ce0,
        we0 => outputBitString_cb_l_we0,
        d0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_length_d0,
        q0 => outputBitString_cb_l_q0);

    outputBitString_cb_v_U : component encodeToJPG_outpu5jm
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outputBitString_cb_v_address0,
        ce0 => outputBitString_cb_v_ce0,
        we0 => outputBitString_cb_v_we0,
        d0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_value_d0,
        q0 => outputBitString_cb_v_q0);

    grp_p_foword_FDC_fu_405 : component p_foword_FDC
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_foword_FDC_fu_405_ap_start,
        ap_done => grp_p_foword_FDC_fu_405_ap_done,
        ap_idle => grp_p_foword_FDC_fu_405_ap_idle,
        ap_ready => grp_p_foword_FDC_fu_405_ap_ready,
        channel_data_0_address0 => grp_p_foword_FDC_fu_405_channel_data_0_address0,
        channel_data_0_ce0 => grp_p_foword_FDC_fu_405_channel_data_0_ce0,
        channel_data_0_q0 => grp_p_foword_FDC_fu_405_channel_data_0_q0,
        channel_data_0_address1 => grp_p_foword_FDC_fu_405_channel_data_0_address1,
        channel_data_0_ce1 => grp_p_foword_FDC_fu_405_channel_data_0_ce1,
        channel_data_0_q1 => grp_p_foword_FDC_fu_405_channel_data_0_q1,
        channel_data_1_address0 => grp_p_foword_FDC_fu_405_channel_data_1_address0,
        channel_data_1_ce0 => grp_p_foword_FDC_fu_405_channel_data_1_ce0,
        channel_data_1_q0 => grp_p_foword_FDC_fu_405_channel_data_1_q0,
        channel_data_1_address1 => grp_p_foword_FDC_fu_405_channel_data_1_address1,
        channel_data_1_ce1 => grp_p_foword_FDC_fu_405_channel_data_1_ce1,
        channel_data_1_q1 => grp_p_foword_FDC_fu_405_channel_data_1_q1,
        channel_data_2_address0 => grp_p_foword_FDC_fu_405_channel_data_2_address0,
        channel_data_2_ce0 => grp_p_foword_FDC_fu_405_channel_data_2_ce0,
        channel_data_2_q0 => grp_p_foword_FDC_fu_405_channel_data_2_q0,
        channel_data_2_address1 => grp_p_foword_FDC_fu_405_channel_data_2_address1,
        channel_data_2_ce1 => grp_p_foword_FDC_fu_405_channel_data_2_ce1,
        channel_data_2_q1 => grp_p_foword_FDC_fu_405_channel_data_2_q1,
        channel_data_3_address0 => grp_p_foword_FDC_fu_405_channel_data_3_address0,
        channel_data_3_ce0 => grp_p_foword_FDC_fu_405_channel_data_3_ce0,
        channel_data_3_q0 => grp_p_foword_FDC_fu_405_channel_data_3_q0,
        channel_data_3_address1 => grp_p_foword_FDC_fu_405_channel_data_3_address1,
        channel_data_3_ce1 => grp_p_foword_FDC_fu_405_channel_data_3_ce1,
        channel_data_3_q1 => grp_p_foword_FDC_fu_405_channel_data_3_q1,
        channel_data_4_address0 => grp_p_foword_FDC_fu_405_channel_data_4_address0,
        channel_data_4_ce0 => grp_p_foword_FDC_fu_405_channel_data_4_ce0,
        channel_data_4_q0 => grp_p_foword_FDC_fu_405_channel_data_4_q0,
        channel_data_4_address1 => grp_p_foword_FDC_fu_405_channel_data_4_address1,
        channel_data_4_ce1 => grp_p_foword_FDC_fu_405_channel_data_4_ce1,
        channel_data_4_q1 => grp_p_foword_FDC_fu_405_channel_data_4_q1,
        channel_data_5_address0 => grp_p_foword_FDC_fu_405_channel_data_5_address0,
        channel_data_5_ce0 => grp_p_foword_FDC_fu_405_channel_data_5_ce0,
        channel_data_5_q0 => grp_p_foword_FDC_fu_405_channel_data_5_q0,
        channel_data_5_address1 => grp_p_foword_FDC_fu_405_channel_data_5_address1,
        channel_data_5_ce1 => grp_p_foword_FDC_fu_405_channel_data_5_ce1,
        channel_data_5_q1 => grp_p_foword_FDC_fu_405_channel_data_5_q1,
        channel_data_6_address0 => grp_p_foword_FDC_fu_405_channel_data_6_address0,
        channel_data_6_ce0 => grp_p_foword_FDC_fu_405_channel_data_6_ce0,
        channel_data_6_q0 => grp_p_foword_FDC_fu_405_channel_data_6_q0,
        channel_data_6_address1 => grp_p_foword_FDC_fu_405_channel_data_6_address1,
        channel_data_6_ce1 => grp_p_foword_FDC_fu_405_channel_data_6_ce1,
        channel_data_6_q1 => grp_p_foword_FDC_fu_405_channel_data_6_q1,
        channel_data_7_address0 => grp_p_foword_FDC_fu_405_channel_data_7_address0,
        channel_data_7_ce0 => grp_p_foword_FDC_fu_405_channel_data_7_ce0,
        channel_data_7_q0 => grp_p_foword_FDC_fu_405_channel_data_7_q0,
        channel_data_7_address1 => grp_p_foword_FDC_fu_405_channel_data_7_address1,
        channel_data_7_ce1 => grp_p_foword_FDC_fu_405_channel_data_7_ce1,
        channel_data_7_q1 => grp_p_foword_FDC_fu_405_channel_data_7_q1,
        quant_1_read => grp_p_foword_FDC_fu_405_quant_1_read,
        quant_2_read => grp_p_foword_FDC_fu_405_quant_2_read,
        quant_3_read => grp_p_foword_FDC_fu_405_quant_3_read,
        quant_4_read => grp_p_foword_FDC_fu_405_quant_4_read,
        quant_5_read => grp_p_foword_FDC_fu_405_quant_5_read,
        quant_6_read => grp_p_foword_FDC_fu_405_quant_6_read,
        quant_7_read => grp_p_foword_FDC_fu_405_quant_7_read,
        quant_8_read => grp_p_foword_FDC_fu_405_quant_8_read,
        quant_9_read => grp_p_foword_FDC_fu_405_quant_9_read,
        quant_10_read => grp_p_foword_FDC_fu_405_quant_10_read,
        quant_11_read => grp_p_foword_FDC_fu_405_quant_11_read,
        quant_12_read => grp_p_foword_FDC_fu_405_quant_12_read,
        quant_13_read => grp_p_foword_FDC_fu_405_quant_13_read,
        quant_14_read => grp_p_foword_FDC_fu_405_quant_14_read,
        quant_15_read => grp_p_foword_FDC_fu_405_quant_15_read,
        quant_16_read => grp_p_foword_FDC_fu_405_quant_16_read,
        quant_17_read => grp_p_foword_FDC_fu_405_quant_17_read,
        quant_18_read => grp_p_foword_FDC_fu_405_quant_18_read,
        quant_19_read => grp_p_foword_FDC_fu_405_quant_19_read,
        quant_20_read => grp_p_foword_FDC_fu_405_quant_20_read,
        quant_21_read => grp_p_foword_FDC_fu_405_quant_21_read,
        quant_22_read => grp_p_foword_FDC_fu_405_quant_22_read,
        quant_23_read => grp_p_foword_FDC_fu_405_quant_23_read,
        quant_24_read => grp_p_foword_FDC_fu_405_quant_24_read,
        quant_25_read => grp_p_foword_FDC_fu_405_quant_25_read,
        quant_26_read => grp_p_foword_FDC_fu_405_quant_26_read,
        quant_27_read => grp_p_foword_FDC_fu_405_quant_27_read,
        quant_28_read => grp_p_foword_FDC_fu_405_quant_28_read,
        quant_29_read => grp_p_foword_FDC_fu_405_quant_29_read,
        quant_30_read => grp_p_foword_FDC_fu_405_quant_30_read,
        quant_31_read => grp_p_foword_FDC_fu_405_quant_31_read,
        quant_32_read => grp_p_foword_FDC_fu_405_quant_32_read,
        quant_33_read => grp_p_foword_FDC_fu_405_quant_33_read,
        quant_34_read => grp_p_foword_FDC_fu_405_quant_34_read,
        quant_35_read => grp_p_foword_FDC_fu_405_quant_35_read,
        quant_36_read => grp_p_foword_FDC_fu_405_quant_36_read,
        quant_39_read => grp_p_foword_FDC_fu_405_quant_39_read,
        quant_40_read => grp_p_foword_FDC_fu_405_quant_40_read,
        quant_41_read => grp_p_foword_FDC_fu_405_quant_41_read,
        quant_42_read => grp_p_foword_FDC_fu_405_quant_42_read,
        quant_43_read => grp_p_foword_FDC_fu_405_quant_43_read,
        quant_44_read => grp_p_foword_FDC_fu_405_quant_44_read,
        quant_47_read => grp_p_foword_FDC_fu_405_quant_47_read,
        quant_48_read => grp_p_foword_FDC_fu_405_quant_48_read,
        quant_49_read => grp_p_foword_FDC_fu_405_quant_49_read,
        quant_50_read => grp_p_foword_FDC_fu_405_quant_50_read,
        quant_51_read => grp_p_foword_FDC_fu_405_quant_51_read,
        quant_56_read => grp_p_foword_FDC_fu_405_quant_56_read,
        quant_57_read => grp_p_foword_FDC_fu_405_quant_57_read,
        fdc_data_address0 => grp_p_foword_FDC_fu_405_fdc_data_address0,
        fdc_data_ce0 => grp_p_foword_FDC_fu_405_fdc_data_ce0,
        fdc_data_we0 => grp_p_foword_FDC_fu_405_fdc_data_we0,
        fdc_data_d0 => grp_p_foword_FDC_fu_405_fdc_data_d0,
        fdc_data_address1 => grp_p_foword_FDC_fu_405_fdc_data_address1,
        fdc_data_ce1 => grp_p_foword_FDC_fu_405_fdc_data_ce1,
        fdc_data_we1 => grp_p_foword_FDC_fu_405_fdc_data_we1,
        fdc_data_d1 => grp_p_foword_FDC_fu_405_fdc_data_d1);

    grp_p_convertColorSpace_fu_565 : component p_convertColorSpace
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_convertColorSpace_fu_565_ap_start,
        ap_done => grp_p_convertColorSpace_fu_565_ap_done,
        ap_idle => grp_p_convertColorSpace_fu_565_ap_idle,
        ap_ready => grp_p_convertColorSpace_fu_565_ap_ready,
        JpegEncoder_buffer_address0 => grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_address0,
        JpegEncoder_buffer_ce0 => grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_ce0,
        JpegEncoder_buffer_q0 => JpegEncoder_buffer_q0,
        JpegEncoder_buffer_address1 => grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_address1,
        JpegEncoder_buffer_ce1 => grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_ce1,
        JpegEncoder_buffer_q1 => JpegEncoder_buffer_q1,
        xPos => xPos_0_reg_393,
        yData_0_address0 => grp_p_convertColorSpace_fu_565_yData_0_address0,
        yData_0_ce0 => grp_p_convertColorSpace_fu_565_yData_0_ce0,
        yData_0_we0 => grp_p_convertColorSpace_fu_565_yData_0_we0,
        yData_0_d0 => grp_p_convertColorSpace_fu_565_yData_0_d0,
        yData_0_address1 => grp_p_convertColorSpace_fu_565_yData_0_address1,
        yData_0_ce1 => grp_p_convertColorSpace_fu_565_yData_0_ce1,
        yData_0_we1 => grp_p_convertColorSpace_fu_565_yData_0_we1,
        yData_0_d1 => grp_p_convertColorSpace_fu_565_yData_0_d1,
        yData_1_address0 => grp_p_convertColorSpace_fu_565_yData_1_address0,
        yData_1_ce0 => grp_p_convertColorSpace_fu_565_yData_1_ce0,
        yData_1_we0 => grp_p_convertColorSpace_fu_565_yData_1_we0,
        yData_1_d0 => grp_p_convertColorSpace_fu_565_yData_1_d0,
        yData_1_address1 => grp_p_convertColorSpace_fu_565_yData_1_address1,
        yData_1_ce1 => grp_p_convertColorSpace_fu_565_yData_1_ce1,
        yData_1_we1 => grp_p_convertColorSpace_fu_565_yData_1_we1,
        yData_1_d1 => grp_p_convertColorSpace_fu_565_yData_1_d1,
        yData_2_address0 => grp_p_convertColorSpace_fu_565_yData_2_address0,
        yData_2_ce0 => grp_p_convertColorSpace_fu_565_yData_2_ce0,
        yData_2_we0 => grp_p_convertColorSpace_fu_565_yData_2_we0,
        yData_2_d0 => grp_p_convertColorSpace_fu_565_yData_2_d0,
        yData_2_address1 => grp_p_convertColorSpace_fu_565_yData_2_address1,
        yData_2_ce1 => grp_p_convertColorSpace_fu_565_yData_2_ce1,
        yData_2_we1 => grp_p_convertColorSpace_fu_565_yData_2_we1,
        yData_2_d1 => grp_p_convertColorSpace_fu_565_yData_2_d1,
        yData_3_address0 => grp_p_convertColorSpace_fu_565_yData_3_address0,
        yData_3_ce0 => grp_p_convertColorSpace_fu_565_yData_3_ce0,
        yData_3_we0 => grp_p_convertColorSpace_fu_565_yData_3_we0,
        yData_3_d0 => grp_p_convertColorSpace_fu_565_yData_3_d0,
        yData_3_address1 => grp_p_convertColorSpace_fu_565_yData_3_address1,
        yData_3_ce1 => grp_p_convertColorSpace_fu_565_yData_3_ce1,
        yData_3_we1 => grp_p_convertColorSpace_fu_565_yData_3_we1,
        yData_3_d1 => grp_p_convertColorSpace_fu_565_yData_3_d1,
        yData_4_address0 => grp_p_convertColorSpace_fu_565_yData_4_address0,
        yData_4_ce0 => grp_p_convertColorSpace_fu_565_yData_4_ce0,
        yData_4_we0 => grp_p_convertColorSpace_fu_565_yData_4_we0,
        yData_4_d0 => grp_p_convertColorSpace_fu_565_yData_4_d0,
        yData_4_address1 => grp_p_convertColorSpace_fu_565_yData_4_address1,
        yData_4_ce1 => grp_p_convertColorSpace_fu_565_yData_4_ce1,
        yData_4_we1 => grp_p_convertColorSpace_fu_565_yData_4_we1,
        yData_4_d1 => grp_p_convertColorSpace_fu_565_yData_4_d1,
        yData_5_address0 => grp_p_convertColorSpace_fu_565_yData_5_address0,
        yData_5_ce0 => grp_p_convertColorSpace_fu_565_yData_5_ce0,
        yData_5_we0 => grp_p_convertColorSpace_fu_565_yData_5_we0,
        yData_5_d0 => grp_p_convertColorSpace_fu_565_yData_5_d0,
        yData_5_address1 => grp_p_convertColorSpace_fu_565_yData_5_address1,
        yData_5_ce1 => grp_p_convertColorSpace_fu_565_yData_5_ce1,
        yData_5_we1 => grp_p_convertColorSpace_fu_565_yData_5_we1,
        yData_5_d1 => grp_p_convertColorSpace_fu_565_yData_5_d1,
        yData_6_address0 => grp_p_convertColorSpace_fu_565_yData_6_address0,
        yData_6_ce0 => grp_p_convertColorSpace_fu_565_yData_6_ce0,
        yData_6_we0 => grp_p_convertColorSpace_fu_565_yData_6_we0,
        yData_6_d0 => grp_p_convertColorSpace_fu_565_yData_6_d0,
        yData_6_address1 => grp_p_convertColorSpace_fu_565_yData_6_address1,
        yData_6_ce1 => grp_p_convertColorSpace_fu_565_yData_6_ce1,
        yData_6_we1 => grp_p_convertColorSpace_fu_565_yData_6_we1,
        yData_6_d1 => grp_p_convertColorSpace_fu_565_yData_6_d1,
        yData_7_address0 => grp_p_convertColorSpace_fu_565_yData_7_address0,
        yData_7_ce0 => grp_p_convertColorSpace_fu_565_yData_7_ce0,
        yData_7_we0 => grp_p_convertColorSpace_fu_565_yData_7_we0,
        yData_7_d0 => grp_p_convertColorSpace_fu_565_yData_7_d0,
        yData_7_address1 => grp_p_convertColorSpace_fu_565_yData_7_address1,
        yData_7_ce1 => grp_p_convertColorSpace_fu_565_yData_7_ce1,
        yData_7_we1 => grp_p_convertColorSpace_fu_565_yData_7_we1,
        yData_7_d1 => grp_p_convertColorSpace_fu_565_yData_7_d1,
        cbData_0_address0 => grp_p_convertColorSpace_fu_565_cbData_0_address0,
        cbData_0_ce0 => grp_p_convertColorSpace_fu_565_cbData_0_ce0,
        cbData_0_we0 => grp_p_convertColorSpace_fu_565_cbData_0_we0,
        cbData_0_d0 => grp_p_convertColorSpace_fu_565_cbData_0_d0,
        cbData_1_address0 => grp_p_convertColorSpace_fu_565_cbData_1_address0,
        cbData_1_ce0 => grp_p_convertColorSpace_fu_565_cbData_1_ce0,
        cbData_1_we0 => grp_p_convertColorSpace_fu_565_cbData_1_we0,
        cbData_1_d0 => grp_p_convertColorSpace_fu_565_cbData_1_d0,
        cbData_2_address0 => grp_p_convertColorSpace_fu_565_cbData_2_address0,
        cbData_2_ce0 => grp_p_convertColorSpace_fu_565_cbData_2_ce0,
        cbData_2_we0 => grp_p_convertColorSpace_fu_565_cbData_2_we0,
        cbData_2_d0 => grp_p_convertColorSpace_fu_565_cbData_2_d0,
        cbData_3_address0 => grp_p_convertColorSpace_fu_565_cbData_3_address0,
        cbData_3_ce0 => grp_p_convertColorSpace_fu_565_cbData_3_ce0,
        cbData_3_we0 => grp_p_convertColorSpace_fu_565_cbData_3_we0,
        cbData_3_d0 => grp_p_convertColorSpace_fu_565_cbData_3_d0,
        cbData_4_address0 => grp_p_convertColorSpace_fu_565_cbData_4_address0,
        cbData_4_ce0 => grp_p_convertColorSpace_fu_565_cbData_4_ce0,
        cbData_4_we0 => grp_p_convertColorSpace_fu_565_cbData_4_we0,
        cbData_4_d0 => grp_p_convertColorSpace_fu_565_cbData_4_d0,
        cbData_5_address0 => grp_p_convertColorSpace_fu_565_cbData_5_address0,
        cbData_5_ce0 => grp_p_convertColorSpace_fu_565_cbData_5_ce0,
        cbData_5_we0 => grp_p_convertColorSpace_fu_565_cbData_5_we0,
        cbData_5_d0 => grp_p_convertColorSpace_fu_565_cbData_5_d0,
        cbData_6_address0 => grp_p_convertColorSpace_fu_565_cbData_6_address0,
        cbData_6_ce0 => grp_p_convertColorSpace_fu_565_cbData_6_ce0,
        cbData_6_we0 => grp_p_convertColorSpace_fu_565_cbData_6_we0,
        cbData_6_d0 => grp_p_convertColorSpace_fu_565_cbData_6_d0,
        cbData_7_address0 => grp_p_convertColorSpace_fu_565_cbData_7_address0,
        cbData_7_ce0 => grp_p_convertColorSpace_fu_565_cbData_7_ce0,
        cbData_7_we0 => grp_p_convertColorSpace_fu_565_cbData_7_we0,
        cbData_7_d0 => grp_p_convertColorSpace_fu_565_cbData_7_d0,
        crData_0_address0 => grp_p_convertColorSpace_fu_565_crData_0_address0,
        crData_0_ce0 => grp_p_convertColorSpace_fu_565_crData_0_ce0,
        crData_0_we0 => grp_p_convertColorSpace_fu_565_crData_0_we0,
        crData_0_d0 => grp_p_convertColorSpace_fu_565_crData_0_d0,
        crData_1_address0 => grp_p_convertColorSpace_fu_565_crData_1_address0,
        crData_1_ce0 => grp_p_convertColorSpace_fu_565_crData_1_ce0,
        crData_1_we0 => grp_p_convertColorSpace_fu_565_crData_1_we0,
        crData_1_d0 => grp_p_convertColorSpace_fu_565_crData_1_d0,
        crData_2_address0 => grp_p_convertColorSpace_fu_565_crData_2_address0,
        crData_2_ce0 => grp_p_convertColorSpace_fu_565_crData_2_ce0,
        crData_2_we0 => grp_p_convertColorSpace_fu_565_crData_2_we0,
        crData_2_d0 => grp_p_convertColorSpace_fu_565_crData_2_d0,
        crData_3_address0 => grp_p_convertColorSpace_fu_565_crData_3_address0,
        crData_3_ce0 => grp_p_convertColorSpace_fu_565_crData_3_ce0,
        crData_3_we0 => grp_p_convertColorSpace_fu_565_crData_3_we0,
        crData_3_d0 => grp_p_convertColorSpace_fu_565_crData_3_d0,
        crData_4_address0 => grp_p_convertColorSpace_fu_565_crData_4_address0,
        crData_4_ce0 => grp_p_convertColorSpace_fu_565_crData_4_ce0,
        crData_4_we0 => grp_p_convertColorSpace_fu_565_crData_4_we0,
        crData_4_d0 => grp_p_convertColorSpace_fu_565_crData_4_d0,
        crData_5_address0 => grp_p_convertColorSpace_fu_565_crData_5_address0,
        crData_5_ce0 => grp_p_convertColorSpace_fu_565_crData_5_ce0,
        crData_5_we0 => grp_p_convertColorSpace_fu_565_crData_5_we0,
        crData_5_d0 => grp_p_convertColorSpace_fu_565_crData_5_d0,
        crData_6_address0 => grp_p_convertColorSpace_fu_565_crData_6_address0,
        crData_6_ce0 => grp_p_convertColorSpace_fu_565_crData_6_ce0,
        crData_6_we0 => grp_p_convertColorSpace_fu_565_crData_6_we0,
        crData_6_d0 => grp_p_convertColorSpace_fu_565_crData_6_d0,
        crData_7_address0 => grp_p_convertColorSpace_fu_565_crData_7_address0,
        crData_7_ce0 => grp_p_convertColorSpace_fu_565_crData_7_ce0,
        crData_7_we0 => grp_p_convertColorSpace_fu_565_crData_7_we0,
        crData_7_d0 => grp_p_convertColorSpace_fu_565_crData_7_d0);

    grp_p_doHuffmanEncoding_fu_597 : component p_doHuffmanEncoding
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_doHuffmanEncoding_fu_597_ap_start,
        ap_done => grp_p_doHuffmanEncoding_fu_597_ap_done,
        ap_idle => grp_p_doHuffmanEncoding_fu_597_ap_idle,
        ap_ready => grp_p_doHuffmanEncoding_fu_597_ap_ready,
        DU_address0 => grp_p_doHuffmanEncoding_fu_597_DU_address0,
        DU_ce0 => grp_p_doHuffmanEncoding_fu_597_DU_ce0,
        DU_q0 => grp_p_doHuffmanEncoding_fu_597_DU_q0,
        prevDC_read => grp_p_doHuffmanEncoding_fu_597_prevDC_read,
        HTDC_length_address0 => grp_p_doHuffmanEncoding_fu_597_HTDC_length_address0,
        HTDC_length_ce0 => grp_p_doHuffmanEncoding_fu_597_HTDC_length_ce0,
        HTDC_length_q0 => grp_p_doHuffmanEncoding_fu_597_HTDC_length_q0,
        HTDC_value_address0 => grp_p_doHuffmanEncoding_fu_597_HTDC_value_address0,
        HTDC_value_ce0 => grp_p_doHuffmanEncoding_fu_597_HTDC_value_ce0,
        HTDC_value_q0 => grp_p_doHuffmanEncoding_fu_597_HTDC_value_q0,
        HTAC_length_address0 => grp_p_doHuffmanEncoding_fu_597_HTAC_length_address0,
        HTAC_length_ce0 => grp_p_doHuffmanEncoding_fu_597_HTAC_length_ce0,
        HTAC_length_q0 => grp_p_doHuffmanEncoding_fu_597_HTAC_length_q0,
        HTAC_length_address1 => grp_p_doHuffmanEncoding_fu_597_HTAC_length_address1,
        HTAC_length_ce1 => grp_p_doHuffmanEncoding_fu_597_HTAC_length_ce1,
        HTAC_length_q1 => grp_p_doHuffmanEncoding_fu_597_HTAC_length_q1,
        HTAC_value_address0 => grp_p_doHuffmanEncoding_fu_597_HTAC_value_address0,
        HTAC_value_ce0 => grp_p_doHuffmanEncoding_fu_597_HTAC_value_ce0,
        HTAC_value_q0 => grp_p_doHuffmanEncoding_fu_597_HTAC_value_q0,
        HTAC_value_address1 => grp_p_doHuffmanEncoding_fu_597_HTAC_value_address1,
        HTAC_value_ce1 => grp_p_doHuffmanEncoding_fu_597_HTAC_value_ce1,
        HTAC_value_q1 => grp_p_doHuffmanEncoding_fu_597_HTAC_value_q1,
        outputBitString_length_address0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_length_address0,
        outputBitString_length_ce0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_length_ce0,
        outputBitString_length_we0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_length_we0,
        outputBitString_length_d0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_length_d0,
        outputBitString_value_address0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_value_address0,
        outputBitString_value_ce0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_value_ce0,
        outputBitString_value_we0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_value_we0,
        outputBitString_value_d0 => grp_p_doHuffmanEncoding_fu_597_outputBitString_value_d0,
        ap_return_0 => grp_p_doHuffmanEncoding_fu_597_ap_return_0,
        ap_return_1 => grp_p_doHuffmanEncoding_fu_597_ap_return_1);

    grp_readFromBMP_fu_617 : component readFromBMP
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_readFromBMP_fu_617_ap_start,
        ap_done => grp_readFromBMP_fu_617_ap_done,
        ap_idle => grp_readFromBMP_fu_617_ap_idle,
        ap_ready => grp_readFromBMP_fu_617_ap_ready,
        JpegEncoder_buffer_address0 => grp_readFromBMP_fu_617_JpegEncoder_buffer_address0,
        JpegEncoder_buffer_ce0 => grp_readFromBMP_fu_617_JpegEncoder_buffer_ce0,
        JpegEncoder_buffer_we0 => grp_readFromBMP_fu_617_JpegEncoder_buffer_we0,
        JpegEncoder_buffer_d0 => grp_readFromBMP_fu_617_JpegEncoder_buffer_d0,
        JpegEncoder_buffer_address1 => grp_readFromBMP_fu_617_JpegEncoder_buffer_address1,
        JpegEncoder_buffer_ce1 => grp_readFromBMP_fu_617_JpegEncoder_buffer_ce1,
        JpegEncoder_buffer_we1 => grp_readFromBMP_fu_617_JpegEncoder_buffer_we1,
        JpegEncoder_buffer_d1 => grp_readFromBMP_fu_617_JpegEncoder_buffer_d1,
        rgb_in_TDATA => rgb_in_TDATA,
        rgb_in_TVALID => rgb_in_TVALID,
        rgb_in_TREADY => grp_readFromBMP_fu_617_rgb_in_TREADY,
        rgb_in_TKEEP => rgb_in_TKEEP,
        rgb_in_TSTRB => rgb_in_TSTRB,
        rgb_in_TLAST => rgb_in_TLAST);

    grp_p_write_bitstring_s_fu_631 : component p_write_bitstring_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_write_bitstring_s_fu_631_ap_start,
        ap_done => grp_p_write_bitstring_s_fu_631_ap_done,
        ap_idle => grp_p_write_bitstring_s_fu_631_ap_idle,
        ap_ready => grp_p_write_bitstring_s_fu_631_ap_ready,
        JpegEncoder_outhebyte_data_V_read => grp_p_write_bitstring_s_fu_631_JpegEncoder_outhebyte_data_V_read,
        bs_length_address0 => grp_p_write_bitstring_s_fu_631_bs_length_address0,
        bs_length_ce0 => grp_p_write_bitstring_s_fu_631_bs_length_ce0,
        bs_length_q0 => grp_p_write_bitstring_s_fu_631_bs_length_q0,
        bs_value_address0 => grp_p_write_bitstring_s_fu_631_bs_value_address0,
        bs_value_ce0 => grp_p_write_bitstring_s_fu_631_bs_value_ce0,
        bs_value_q0 => grp_p_write_bitstring_s_fu_631_bs_value_q0,
        counts => reg_753,
        newByte_read => grp_p_write_bitstring_s_fu_631_newByte_read,
        newBytePos_read => grp_p_write_bitstring_s_fu_631_newBytePos_read,
        jpeg_out_TDATA => grp_p_write_bitstring_s_fu_631_jpeg_out_TDATA,
        jpeg_out_TVALID => grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID,
        jpeg_out_TREADY => grp_p_write_bitstring_s_fu_631_jpeg_out_TREADY,
        jpeg_out_TKEEP => grp_p_write_bitstring_s_fu_631_jpeg_out_TKEEP,
        jpeg_out_TSTRB => grp_p_write_bitstring_s_fu_631_jpeg_out_TSTRB,
        jpeg_out_TLAST => grp_p_write_bitstring_s_fu_631_jpeg_out_TLAST,
        ap_return_0 => grp_p_write_bitstring_s_fu_631_ap_return_0,
        ap_return_1 => grp_p_write_bitstring_s_fu_631_ap_return_1,
        ap_return_2 => grp_p_write_bitstring_s_fu_631_ap_return_2);

    grp_p_write_jpeg_header_fu_651 : component p_write_jpeg_header
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_write_jpeg_header_fu_651_ap_start,
        ap_done => grp_p_write_jpeg_header_fu_651_ap_done,
        ap_idle => grp_p_write_jpeg_header_fu_651_ap_idle,
        ap_ready => grp_p_write_jpeg_header_fu_651_ap_ready,
        JpegEncoder_m_YTable_address0 => grp_p_write_jpeg_header_fu_651_JpegEncoder_m_YTable_address0,
        JpegEncoder_m_YTable_ce0 => grp_p_write_jpeg_header_fu_651_JpegEncoder_m_YTable_ce0,
        JpegEncoder_m_YTable_q0 => JpegEncoder_m_YTable_q0,
        JpegEncoder_m_CbCrTable_address0 => grp_p_write_jpeg_header_fu_651_JpegEncoder_m_CbCrTable_address0,
        JpegEncoder_m_CbCrTable_ce0 => grp_p_write_jpeg_header_fu_651_JpegEncoder_m_CbCrTable_ce0,
        JpegEncoder_m_CbCrTable_q0 => JpegEncoder_m_CbCrTable_q0,
        jpeg_out_TDATA => grp_p_write_jpeg_header_fu_651_jpeg_out_TDATA,
        jpeg_out_TVALID => grp_p_write_jpeg_header_fu_651_jpeg_out_TVALID,
        jpeg_out_TREADY => grp_p_write_jpeg_header_fu_651_jpeg_out_TREADY,
        jpeg_out_TKEEP => grp_p_write_jpeg_header_fu_651_jpeg_out_TKEEP,
        jpeg_out_TSTRB => grp_p_write_jpeg_header_fu_651_jpeg_out_TSTRB,
        jpeg_out_TLAST => grp_p_write_jpeg_header_fu_651_jpeg_out_TLAST,
        ap_return => grp_p_write_jpeg_header_fu_651_ap_return);

    grp_p_computeHuffmanTable_fu_685 : component p_computeHuffmanTable
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_computeHuffmanTable_fu_685_ap_start,
        ap_done => grp_p_computeHuffmanTable_fu_685_ap_done,
        ap_idle => grp_p_computeHuffmanTable_fu_685_ap_idle,
        ap_ready => grp_p_computeHuffmanTable_fu_685_ap_ready,
        nr_codes_address0 => grp_p_computeHuffmanTable_fu_685_nr_codes_address0,
        nr_codes_ce0 => grp_p_computeHuffmanTable_fu_685_nr_codes_ce0,
        nr_codes_q0 => p_anonymous_namespace_10_q0,
        std_table_address0 => grp_p_computeHuffmanTable_fu_685_std_table_address0,
        std_table_ce0 => grp_p_computeHuffmanTable_fu_685_std_table_ce0,
        std_table_q0 => p_anonymous_namespace_1_q0,
        huffman_table_length_address0 => grp_p_computeHuffmanTable_fu_685_huffman_table_length_address0,
        huffman_table_length_ce0 => grp_p_computeHuffmanTable_fu_685_huffman_table_length_ce0,
        huffman_table_length_we0 => grp_p_computeHuffmanTable_fu_685_huffman_table_length_we0,
        huffman_table_length_d0 => grp_p_computeHuffmanTable_fu_685_huffman_table_length_d0,
        huffman_table_value_address0 => grp_p_computeHuffmanTable_fu_685_huffman_table_value_address0,
        huffman_table_value_ce0 => grp_p_computeHuffmanTable_fu_685_huffman_table_value_ce0,
        huffman_table_value_we0 => grp_p_computeHuffmanTable_fu_685_huffman_table_value_we0,
        huffman_table_value_d0 => grp_p_computeHuffmanTable_fu_685_huffman_table_value_d0);

    grp_p_computeHuffmanTable_fu_697 : component p_computeHuffmanTable
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_computeHuffmanTable_fu_697_ap_start,
        ap_done => grp_p_computeHuffmanTable_fu_697_ap_done,
        ap_idle => grp_p_computeHuffmanTable_fu_697_ap_idle,
        ap_ready => grp_p_computeHuffmanTable_fu_697_ap_ready,
        nr_codes_address0 => grp_p_computeHuffmanTable_fu_697_nr_codes_address0,
        nr_codes_ce0 => grp_p_computeHuffmanTable_fu_697_nr_codes_ce0,
        nr_codes_q0 => p_anonymous_namespace_8_q0,
        std_table_address0 => grp_p_computeHuffmanTable_fu_697_std_table_address0,
        std_table_ce0 => grp_p_computeHuffmanTable_fu_697_std_table_ce0,
        std_table_q0 => p_anonymous_namespace_9_q0,
        huffman_table_length_address0 => grp_p_computeHuffmanTable_fu_697_huffman_table_length_address0,
        huffman_table_length_ce0 => grp_p_computeHuffmanTable_fu_697_huffman_table_length_ce0,
        huffman_table_length_we0 => grp_p_computeHuffmanTable_fu_697_huffman_table_length_we0,
        huffman_table_length_d0 => grp_p_computeHuffmanTable_fu_697_huffman_table_length_d0,
        huffman_table_value_address0 => grp_p_computeHuffmanTable_fu_697_huffman_table_value_address0,
        huffman_table_value_ce0 => grp_p_computeHuffmanTable_fu_697_huffman_table_value_ce0,
        huffman_table_value_we0 => grp_p_computeHuffmanTable_fu_697_huffman_table_value_we0,
        huffman_table_value_d0 => grp_p_computeHuffmanTable_fu_697_huffman_table_value_d0);

    grp_p_computeHuffmanTable_1_fu_709 : component p_computeHuffmanTable_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_computeHuffmanTable_1_fu_709_ap_start,
        ap_done => grp_p_computeHuffmanTable_1_fu_709_ap_done,
        ap_idle => grp_p_computeHuffmanTable_1_fu_709_ap_idle,
        ap_ready => grp_p_computeHuffmanTable_1_fu_709_ap_ready,
        nr_codes_address0 => grp_p_computeHuffmanTable_1_fu_709_nr_codes_address0,
        nr_codes_ce0 => grp_p_computeHuffmanTable_1_fu_709_nr_codes_ce0,
        nr_codes_q0 => p_anonymous_namespace_5_q0,
        std_table_address0 => grp_p_computeHuffmanTable_1_fu_709_std_table_address0,
        std_table_ce0 => grp_p_computeHuffmanTable_1_fu_709_std_table_ce0,
        std_table_q0 => p_anonymous_namespace_q0,
        huffman_table_length_address0 => grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_address0,
        huffman_table_length_ce0 => grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_ce0,
        huffman_table_length_we0 => grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_we0,
        huffman_table_length_d0 => grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_d0,
        huffman_table_value_address0 => grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_address0,
        huffman_table_value_ce0 => grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_ce0,
        huffman_table_value_we0 => grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_we0,
        huffman_table_value_d0 => grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_d0);

    grp_p_computeHuffmanTable_1_fu_721 : component p_computeHuffmanTable_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_p_computeHuffmanTable_1_fu_721_ap_start,
        ap_done => grp_p_computeHuffmanTable_1_fu_721_ap_done,
        ap_idle => grp_p_computeHuffmanTable_1_fu_721_ap_idle,
        ap_ready => grp_p_computeHuffmanTable_1_fu_721_ap_ready,
        nr_codes_address0 => grp_p_computeHuffmanTable_1_fu_721_nr_codes_address0,
        nr_codes_ce0 => grp_p_computeHuffmanTable_1_fu_721_nr_codes_ce0,
        nr_codes_q0 => p_anonymous_namespace_3_q0,
        std_table_address0 => grp_p_computeHuffmanTable_1_fu_721_std_table_address0,
        std_table_ce0 => grp_p_computeHuffmanTable_1_fu_721_std_table_ce0,
        std_table_q0 => p_anonymous_namespace_4_q0,
        huffman_table_length_address0 => grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_address0,
        huffman_table_length_ce0 => grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_ce0,
        huffman_table_length_we0 => grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_we0,
        huffman_table_length_d0 => grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_d0,
        huffman_table_value_address0 => grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_address0,
        huffman_table_value_ce0 => grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_ce0,
        huffman_table_value_we0 => grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_we0,
        huffman_table_value_d0 => grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_p_computeHuffmanTable_1_fu_709_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_computeHuffmanTable_1_fu_709_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln293_fu_773_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_p_computeHuffmanTable_1_fu_709_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_computeHuffmanTable_1_fu_709_ap_ready = ap_const_logic_1)) then 
                    grp_p_computeHuffmanTable_1_fu_709_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_computeHuffmanTable_1_fu_721_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_computeHuffmanTable_1_fu_721_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln293_fu_773_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_p_computeHuffmanTable_1_fu_721_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_computeHuffmanTable_1_fu_721_ap_ready = ap_const_logic_1)) then 
                    grp_p_computeHuffmanTable_1_fu_721_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_computeHuffmanTable_fu_685_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_computeHuffmanTable_fu_685_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln293_fu_773_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_p_computeHuffmanTable_fu_685_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_computeHuffmanTable_fu_685_ap_ready = ap_const_logic_1)) then 
                    grp_p_computeHuffmanTable_fu_685_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_computeHuffmanTable_fu_697_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_computeHuffmanTable_fu_697_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln293_fu_773_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_p_computeHuffmanTable_fu_697_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_computeHuffmanTable_fu_697_ap_ready = ap_const_logic_1)) then 
                    grp_p_computeHuffmanTable_fu_697_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_convertColorSpace_fu_565_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_convertColorSpace_fu_565_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln633_fu_839_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_p_convertColorSpace_fu_565_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_convertColorSpace_fu_565_ap_ready = ap_const_logic_1)) then 
                    grp_p_convertColorSpace_fu_565_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_doHuffmanEncoding_fu_597_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_doHuffmanEncoding_fu_597_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    grp_p_doHuffmanEncoding_fu_597_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_doHuffmanEncoding_fu_597_ap_ready = ap_const_logic_1)) then 
                    grp_p_doHuffmanEncoding_fu_597_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_foword_FDC_fu_405_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_foword_FDC_fu_405_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_p_foword_FDC_fu_405_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_foword_FDC_fu_405_ap_ready = ap_const_logic_1)) then 
                    grp_p_foword_FDC_fu_405_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_write_bitstring_s_fu_631_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_write_bitstring_s_fu_631_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                    grp_p_write_bitstring_s_fu_631_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_write_bitstring_s_fu_631_ap_ready = ap_const_logic_1)) then 
                    grp_p_write_bitstring_s_fu_631_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_p_write_jpeg_header_fu_651_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_p_write_jpeg_header_fu_651_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln293_fu_773_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_p_write_jpeg_header_fu_651_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_p_write_jpeg_header_fu_651_ap_ready = ap_const_logic_1)) then 
                    grp_p_write_jpeg_header_fu_651_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_readFromBMP_fu_617_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_readFromBMP_fu_617_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln630_fu_827_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_readFromBMP_fu_617_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_readFromBMP_fu_617_ap_ready = ap_const_logic_1)) then 
                    grp_readFromBMP_fu_617_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    JpegEncoder_outhebyt_fu_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_p_write_bitstring_s_fu_631_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                JpegEncoder_outhebyt_fu_282 <= grp_p_write_bitstring_s_fu_631_ap_return_2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then 
                JpegEncoder_outhebyt_fu_282 <= grp_p_write_jpeg_header_fu_651_ap_return;
            end if; 
        end if;
    end process;

    count_0_reg_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln633_fu_839_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                count_0_reg_382 <= count_reg_988;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then 
                count_0_reg_382 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    i_0_i_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_0_i_reg_371 <= i_reg_908;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_i_reg_371 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    newBytePos_1_fu_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_p_write_bitstring_s_fu_631_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                newBytePos_1_fu_302 <= grp_p_write_bitstring_s_fu_631_ap_return_1;
            elsif (((icmp_ln293_fu_773_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                newBytePos_1_fu_302 <= ap_const_lv32_7;
            end if; 
        end if;
    end process;

    newByte_1_fu_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_p_write_bitstring_s_fu_631_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                newByte_1_fu_298 <= grp_p_write_bitstring_s_fu_631_ap_return_0;
            elsif (((icmp_ln293_fu_773_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                newByte_1_fu_298 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    prev_DC_Cb_1_fu_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                prev_DC_Cb_1_fu_290 <= grp_p_doHuffmanEncoding_fu_597_ap_return_0;
            elsif (((icmp_ln293_fu_773_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                prev_DC_Cb_1_fu_290 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    prev_DC_Cr_1_fu_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                prev_DC_Cr_1_fu_294 <= grp_p_doHuffmanEncoding_fu_597_ap_return_0;
            elsif (((icmp_ln293_fu_773_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                prev_DC_Cr_1_fu_294 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    prev_DC_Y_1_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                prev_DC_Y_1_fu_286 <= grp_p_doHuffmanEncoding_fu_597_ap_return_0;
            elsif (((icmp_ln293_fu_773_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                prev_DC_Y_1_fu_286 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    xPos_0_reg_393_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_p_write_bitstring_s_fu_631_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                xPos_0_reg_393 <= xPos_reg_996;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_readFromBMP_fu_617_ap_done = ap_const_logic_1))) then 
                xPos_0_reg_393 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                ZigZag_load_reg_975 <= ZigZag_q0;
                p_anonymous_namespace_12_reg_970 <= p_anonymous_namespace_7_q0;
                p_anonymous_namespace_14_reg_980 <= p_anonymous_namespace_6_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                count_reg_988 <= count_fu_833_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_908 <= i_fu_779_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then
                reg_753 <= grp_p_doHuffmanEncoding_fu_597_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then
                reg_758 <= grp_p_write_bitstring_s_fu_631_ap_return_1;
                reg_763 <= grp_p_write_bitstring_s_fu_631_ap_return_0;
                reg_768 <= grp_p_write_bitstring_s_fu_631_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln633_fu_839_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                xPos_reg_996 <= xPos_fu_845_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_ap_done, ap_block_state13_on_subcall_done, ap_CS_fsm_state15, grp_p_write_bitstring_s_fu_631_ap_done, ap_block_state15_on_subcall_done, ap_CS_fsm_state17, ap_block_state17_on_subcall_done, ap_CS_fsm_state2, icmp_ln293_fu_773_p2, ap_CS_fsm_state6, ap_CS_fsm_state8, icmp_ln633_fu_839_p2, grp_p_convertColorSpace_fu_565_ap_done, grp_readFromBMP_fu_617_ap_done, ap_CS_fsm_state5, ap_block_state5_on_subcall_done, ap_CS_fsm_state7, ap_CS_fsm_state19, ap_CS_fsm_state11, ap_CS_fsm_state9, icmp_ln630_fu_827_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln293_fu_773_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln630_fu_827_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_readFromBMP_fu_617_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln633_fu_839_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_p_convertColorSpace_fu_565_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_p_foword_FDC_fu_405_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((grp_p_write_bitstring_s_fu_631_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    JpegEncoder_buffer_address0_assign_proc : process(grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_address0, grp_readFromBMP_fu_617_JpegEncoder_buffer_address0, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            JpegEncoder_buffer_address0 <= grp_readFromBMP_fu_617_JpegEncoder_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            JpegEncoder_buffer_address0 <= grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_address0;
        else 
            JpegEncoder_buffer_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    JpegEncoder_buffer_address1_assign_proc : process(grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_address1, grp_readFromBMP_fu_617_JpegEncoder_buffer_address1, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            JpegEncoder_buffer_address1 <= grp_readFromBMP_fu_617_JpegEncoder_buffer_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            JpegEncoder_buffer_address1 <= grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_address1;
        else 
            JpegEncoder_buffer_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    JpegEncoder_buffer_ce0_assign_proc : process(grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_ce0, grp_readFromBMP_fu_617_JpegEncoder_buffer_ce0, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            JpegEncoder_buffer_ce0 <= grp_readFromBMP_fu_617_JpegEncoder_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            JpegEncoder_buffer_ce0 <= grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_ce0;
        else 
            JpegEncoder_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_buffer_ce1_assign_proc : process(grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_ce1, grp_readFromBMP_fu_617_JpegEncoder_buffer_ce1, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            JpegEncoder_buffer_ce1 <= grp_readFromBMP_fu_617_JpegEncoder_buffer_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            JpegEncoder_buffer_ce1 <= grp_p_convertColorSpace_fu_565_JpegEncoder_buffer_ce1;
        else 
            JpegEncoder_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    JpegEncoder_buffer_d0 <= grp_readFromBMP_fu_617_JpegEncoder_buffer_d0;
    JpegEncoder_buffer_d1 <= grp_readFromBMP_fu_617_JpegEncoder_buffer_d1;

    JpegEncoder_buffer_we0_assign_proc : process(grp_readFromBMP_fu_617_JpegEncoder_buffer_we0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            JpegEncoder_buffer_we0 <= grp_readFromBMP_fu_617_JpegEncoder_buffer_we0;
        else 
            JpegEncoder_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_buffer_we1_assign_proc : process(grp_readFromBMP_fu_617_JpegEncoder_buffer_we1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            JpegEncoder_buffer_we1 <= grp_readFromBMP_fu_617_JpegEncoder_buffer_we1;
        else 
            JpegEncoder_buffer_we1 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_CbCrTable_address0_assign_proc : process(grp_p_write_jpeg_header_fu_651_JpegEncoder_m_CbCrTable_address0, ap_CS_fsm_state4, ap_CS_fsm_state5, zext_ln295_1_fu_817_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            JpegEncoder_m_CbCrTable_address0 <= zext_ln295_1_fu_817_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCrTable_address0 <= grp_p_write_jpeg_header_fu_651_JpegEncoder_m_CbCrTable_address0;
        else 
            JpegEncoder_m_CbCrTable_address0 <= "XXXXXX";
        end if; 
    end process;


    JpegEncoder_m_CbCrTable_ce0_assign_proc : process(grp_p_write_jpeg_header_fu_651_JpegEncoder_m_CbCrTable_ce0, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            JpegEncoder_m_CbCrTable_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCrTable_ce0 <= grp_p_write_jpeg_header_fu_651_JpegEncoder_m_CbCrTable_ce0;
        else 
            JpegEncoder_m_CbCrTable_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    JpegEncoder_m_CbCrTable_d0 <= p_anonymous_namespace_14_reg_980;

    JpegEncoder_m_CbCrTable_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            JpegEncoder_m_CbCrTable_we0 <= ap_const_logic_1;
        else 
            JpegEncoder_m_CbCrTable_we0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_CbCr_AC_Huffman_Table_length_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_HTAC_length_address0, grp_p_computeHuffmanTable_fu_697_huffman_table_length_address0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCr_AC_Huffman_Table_length_address0 <= grp_p_computeHuffmanTable_fu_697_huffman_table_length_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            JpegEncoder_m_CbCr_AC_Huffman_Table_length_address0 <= grp_p_doHuffmanEncoding_fu_597_HTAC_length_address0;
        else 
            JpegEncoder_m_CbCr_AC_Huffman_Table_length_address0 <= "XXXXXXXX";
        end if; 
    end process;

    JpegEncoder_m_CbCr_AC_Huffman_Table_length_address1 <= grp_p_doHuffmanEncoding_fu_597_HTAC_length_address1;

    JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_HTAC_length_ce0, grp_p_computeHuffmanTable_fu_697_huffman_table_length_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce0 <= grp_p_computeHuffmanTable_fu_697_huffman_table_length_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce0 <= grp_p_doHuffmanEncoding_fu_597_HTAC_length_ce0;
        else 
            JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce1_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_HTAC_length_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce1 <= grp_p_doHuffmanEncoding_fu_597_HTAC_length_ce1;
        else 
            JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    JpegEncoder_m_CbCr_AC_Huffman_Table_length_d0 <= grp_p_computeHuffmanTable_fu_697_huffman_table_length_d0;

    JpegEncoder_m_CbCr_AC_Huffman_Table_length_we0_assign_proc : process(grp_p_computeHuffmanTable_fu_697_huffman_table_length_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCr_AC_Huffman_Table_length_we0 <= grp_p_computeHuffmanTable_fu_697_huffman_table_length_we0;
        else 
            JpegEncoder_m_CbCr_AC_Huffman_Table_length_we0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_CbCr_AC_Huffman_Table_value_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_HTAC_value_address0, grp_p_computeHuffmanTable_fu_697_huffman_table_value_address0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCr_AC_Huffman_Table_value_address0 <= grp_p_computeHuffmanTable_fu_697_huffman_table_value_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            JpegEncoder_m_CbCr_AC_Huffman_Table_value_address0 <= grp_p_doHuffmanEncoding_fu_597_HTAC_value_address0;
        else 
            JpegEncoder_m_CbCr_AC_Huffman_Table_value_address0 <= "XXXXXXXX";
        end if; 
    end process;

    JpegEncoder_m_CbCr_AC_Huffman_Table_value_address1 <= grp_p_doHuffmanEncoding_fu_597_HTAC_value_address1;

    JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_HTAC_value_ce0, grp_p_computeHuffmanTable_fu_697_huffman_table_value_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce0 <= grp_p_computeHuffmanTable_fu_697_huffman_table_value_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce0 <= grp_p_doHuffmanEncoding_fu_597_HTAC_value_ce0;
        else 
            JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce1_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_HTAC_value_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce1 <= grp_p_doHuffmanEncoding_fu_597_HTAC_value_ce1;
        else 
            JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    JpegEncoder_m_CbCr_AC_Huffman_Table_value_d0 <= grp_p_computeHuffmanTable_fu_697_huffman_table_value_d0;

    JpegEncoder_m_CbCr_AC_Huffman_Table_value_we0_assign_proc : process(grp_p_computeHuffmanTable_fu_697_huffman_table_value_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCr_AC_Huffman_Table_value_we0 <= grp_p_computeHuffmanTable_fu_697_huffman_table_value_we0;
        else 
            JpegEncoder_m_CbCr_AC_Huffman_Table_value_we0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_CbCr_DC_Huffman_Table_length_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_HTDC_length_address0, grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_address0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCr_DC_Huffman_Table_length_address0 <= grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            JpegEncoder_m_CbCr_DC_Huffman_Table_length_address0 <= grp_p_doHuffmanEncoding_fu_597_HTDC_length_address0;
        else 
            JpegEncoder_m_CbCr_DC_Huffman_Table_length_address0 <= "XXXX";
        end if; 
    end process;


    JpegEncoder_m_CbCr_DC_Huffman_Table_length_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_HTDC_length_ce0, grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCr_DC_Huffman_Table_length_ce0 <= grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            JpegEncoder_m_CbCr_DC_Huffman_Table_length_ce0 <= grp_p_doHuffmanEncoding_fu_597_HTDC_length_ce0;
        else 
            JpegEncoder_m_CbCr_DC_Huffman_Table_length_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    JpegEncoder_m_CbCr_DC_Huffman_Table_length_d0 <= grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_d0;

    JpegEncoder_m_CbCr_DC_Huffman_Table_length_we0_assign_proc : process(grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCr_DC_Huffman_Table_length_we0 <= grp_p_computeHuffmanTable_1_fu_721_huffman_table_length_we0;
        else 
            JpegEncoder_m_CbCr_DC_Huffman_Table_length_we0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_CbCr_DC_Huffman_Table_value_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_HTDC_value_address0, grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_address0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCr_DC_Huffman_Table_value_address0 <= grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            JpegEncoder_m_CbCr_DC_Huffman_Table_value_address0 <= grp_p_doHuffmanEncoding_fu_597_HTDC_value_address0;
        else 
            JpegEncoder_m_CbCr_DC_Huffman_Table_value_address0 <= "XXXX";
        end if; 
    end process;


    JpegEncoder_m_CbCr_DC_Huffman_Table_value_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_HTDC_value_ce0, grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCr_DC_Huffman_Table_value_ce0 <= grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            JpegEncoder_m_CbCr_DC_Huffman_Table_value_ce0 <= grp_p_doHuffmanEncoding_fu_597_HTDC_value_ce0;
        else 
            JpegEncoder_m_CbCr_DC_Huffman_Table_value_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    JpegEncoder_m_CbCr_DC_Huffman_Table_value_d0 <= grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_d0;

    JpegEncoder_m_CbCr_DC_Huffman_Table_value_we0_assign_proc : process(grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_CbCr_DC_Huffman_Table_value_we0 <= grp_p_computeHuffmanTable_1_fu_721_huffman_table_value_we0;
        else 
            JpegEncoder_m_CbCr_DC_Huffman_Table_value_we0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_YTable_address0_assign_proc : process(grp_p_write_jpeg_header_fu_651_JpegEncoder_m_YTable_address0, ap_CS_fsm_state4, ap_CS_fsm_state5, zext_ln295_1_fu_817_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            JpegEncoder_m_YTable_address0 <= zext_ln295_1_fu_817_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_YTable_address0 <= grp_p_write_jpeg_header_fu_651_JpegEncoder_m_YTable_address0;
        else 
            JpegEncoder_m_YTable_address0 <= "XXXXXX";
        end if; 
    end process;


    JpegEncoder_m_YTable_ce0_assign_proc : process(grp_p_write_jpeg_header_fu_651_JpegEncoder_m_YTable_ce0, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            JpegEncoder_m_YTable_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_YTable_ce0 <= grp_p_write_jpeg_header_fu_651_JpegEncoder_m_YTable_ce0;
        else 
            JpegEncoder_m_YTable_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    JpegEncoder_m_YTable_d0 <= p_anonymous_namespace_12_reg_970;

    JpegEncoder_m_YTable_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            JpegEncoder_m_YTable_we0 <= ap_const_logic_1;
        else 
            JpegEncoder_m_YTable_we0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_Y_AC_Huffman_Table_length_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_doHuffmanEncoding_fu_597_HTAC_length_address0, grp_p_computeHuffmanTable_fu_685_huffman_table_length_address0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_Y_AC_Huffman_Table_length_address0 <= grp_p_computeHuffmanTable_fu_685_huffman_table_length_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            JpegEncoder_m_Y_AC_Huffman_Table_length_address0 <= grp_p_doHuffmanEncoding_fu_597_HTAC_length_address0;
        else 
            JpegEncoder_m_Y_AC_Huffman_Table_length_address0 <= "XXXXXXXX";
        end if; 
    end process;

    JpegEncoder_m_Y_AC_Huffman_Table_length_address1 <= grp_p_doHuffmanEncoding_fu_597_HTAC_length_address1;

    JpegEncoder_m_Y_AC_Huffman_Table_length_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_doHuffmanEncoding_fu_597_HTAC_length_ce0, grp_p_computeHuffmanTable_fu_685_huffman_table_length_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_Y_AC_Huffman_Table_length_ce0 <= grp_p_computeHuffmanTable_fu_685_huffman_table_length_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            JpegEncoder_m_Y_AC_Huffman_Table_length_ce0 <= grp_p_doHuffmanEncoding_fu_597_HTAC_length_ce0;
        else 
            JpegEncoder_m_Y_AC_Huffman_Table_length_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_Y_AC_Huffman_Table_length_ce1_assign_proc : process(ap_CS_fsm_state13, grp_p_doHuffmanEncoding_fu_597_HTAC_length_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            JpegEncoder_m_Y_AC_Huffman_Table_length_ce1 <= grp_p_doHuffmanEncoding_fu_597_HTAC_length_ce1;
        else 
            JpegEncoder_m_Y_AC_Huffman_Table_length_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    JpegEncoder_m_Y_AC_Huffman_Table_length_d0 <= grp_p_computeHuffmanTable_fu_685_huffman_table_length_d0;

    JpegEncoder_m_Y_AC_Huffman_Table_length_we0_assign_proc : process(grp_p_computeHuffmanTable_fu_685_huffman_table_length_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_Y_AC_Huffman_Table_length_we0 <= grp_p_computeHuffmanTable_fu_685_huffman_table_length_we0;
        else 
            JpegEncoder_m_Y_AC_Huffman_Table_length_we0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_Y_AC_Huffman_Table_value_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_doHuffmanEncoding_fu_597_HTAC_value_address0, grp_p_computeHuffmanTable_fu_685_huffman_table_value_address0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_Y_AC_Huffman_Table_value_address0 <= grp_p_computeHuffmanTable_fu_685_huffman_table_value_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            JpegEncoder_m_Y_AC_Huffman_Table_value_address0 <= grp_p_doHuffmanEncoding_fu_597_HTAC_value_address0;
        else 
            JpegEncoder_m_Y_AC_Huffman_Table_value_address0 <= "XXXXXXXX";
        end if; 
    end process;

    JpegEncoder_m_Y_AC_Huffman_Table_value_address1 <= grp_p_doHuffmanEncoding_fu_597_HTAC_value_address1;

    JpegEncoder_m_Y_AC_Huffman_Table_value_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_doHuffmanEncoding_fu_597_HTAC_value_ce0, grp_p_computeHuffmanTable_fu_685_huffman_table_value_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_Y_AC_Huffman_Table_value_ce0 <= grp_p_computeHuffmanTable_fu_685_huffman_table_value_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            JpegEncoder_m_Y_AC_Huffman_Table_value_ce0 <= grp_p_doHuffmanEncoding_fu_597_HTAC_value_ce0;
        else 
            JpegEncoder_m_Y_AC_Huffman_Table_value_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_Y_AC_Huffman_Table_value_ce1_assign_proc : process(ap_CS_fsm_state13, grp_p_doHuffmanEncoding_fu_597_HTAC_value_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            JpegEncoder_m_Y_AC_Huffman_Table_value_ce1 <= grp_p_doHuffmanEncoding_fu_597_HTAC_value_ce1;
        else 
            JpegEncoder_m_Y_AC_Huffman_Table_value_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    JpegEncoder_m_Y_AC_Huffman_Table_value_d0 <= grp_p_computeHuffmanTable_fu_685_huffman_table_value_d0;

    JpegEncoder_m_Y_AC_Huffman_Table_value_we0_assign_proc : process(grp_p_computeHuffmanTable_fu_685_huffman_table_value_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_Y_AC_Huffman_Table_value_we0 <= grp_p_computeHuffmanTable_fu_685_huffman_table_value_we0;
        else 
            JpegEncoder_m_Y_AC_Huffman_Table_value_we0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_Y_DC_Huffman_Table_length_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_doHuffmanEncoding_fu_597_HTDC_length_address0, grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_address0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_Y_DC_Huffman_Table_length_address0 <= grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            JpegEncoder_m_Y_DC_Huffman_Table_length_address0 <= grp_p_doHuffmanEncoding_fu_597_HTDC_length_address0;
        else 
            JpegEncoder_m_Y_DC_Huffman_Table_length_address0 <= "XXXX";
        end if; 
    end process;


    JpegEncoder_m_Y_DC_Huffman_Table_length_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_doHuffmanEncoding_fu_597_HTDC_length_ce0, grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_Y_DC_Huffman_Table_length_ce0 <= grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            JpegEncoder_m_Y_DC_Huffman_Table_length_ce0 <= grp_p_doHuffmanEncoding_fu_597_HTDC_length_ce0;
        else 
            JpegEncoder_m_Y_DC_Huffman_Table_length_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    JpegEncoder_m_Y_DC_Huffman_Table_length_d0 <= grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_d0;

    JpegEncoder_m_Y_DC_Huffman_Table_length_we0_assign_proc : process(grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_Y_DC_Huffman_Table_length_we0 <= grp_p_computeHuffmanTable_1_fu_709_huffman_table_length_we0;
        else 
            JpegEncoder_m_Y_DC_Huffman_Table_length_we0 <= ap_const_logic_0;
        end if; 
    end process;


    JpegEncoder_m_Y_DC_Huffman_Table_value_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_doHuffmanEncoding_fu_597_HTDC_value_address0, grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_address0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_Y_DC_Huffman_Table_value_address0 <= grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            JpegEncoder_m_Y_DC_Huffman_Table_value_address0 <= grp_p_doHuffmanEncoding_fu_597_HTDC_value_address0;
        else 
            JpegEncoder_m_Y_DC_Huffman_Table_value_address0 <= "XXXX";
        end if; 
    end process;


    JpegEncoder_m_Y_DC_Huffman_Table_value_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_doHuffmanEncoding_fu_597_HTDC_value_ce0, grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_Y_DC_Huffman_Table_value_ce0 <= grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            JpegEncoder_m_Y_DC_Huffman_Table_value_ce0 <= grp_p_doHuffmanEncoding_fu_597_HTDC_value_ce0;
        else 
            JpegEncoder_m_Y_DC_Huffman_Table_value_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    JpegEncoder_m_Y_DC_Huffman_Table_value_d0 <= grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_d0;

    JpegEncoder_m_Y_DC_Huffman_Table_value_we0_assign_proc : process(grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            JpegEncoder_m_Y_DC_Huffman_Table_value_we0 <= grp_p_computeHuffmanTable_1_fu_709_huffman_table_value_we0;
        else 
            JpegEncoder_m_Y_DC_Huffman_Table_value_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ZigZag_address0 <= zext_ln295_fu_785_p1(6 - 1 downto 0);

    ZigZag_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ZigZag_ce0 <= ap_const_logic_1;
        else 
            ZigZag_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state13_on_subcall_done_assign_proc : process(grp_p_foword_FDC_fu_405_ap_done, grp_p_doHuffmanEncoding_fu_597_ap_done)
    begin
                ap_block_state13_on_subcall_done <= ((grp_p_doHuffmanEncoding_fu_597_ap_done = ap_const_logic_0) or (grp_p_foword_FDC_fu_405_ap_done = ap_const_logic_0));
    end process;


    ap_block_state15_on_subcall_done_assign_proc : process(grp_p_foword_FDC_fu_405_ap_done, grp_p_doHuffmanEncoding_fu_597_ap_done, grp_p_write_bitstring_s_fu_631_ap_done)
    begin
                ap_block_state15_on_subcall_done <= ((grp_p_write_bitstring_s_fu_631_ap_done = ap_const_logic_0) or (grp_p_doHuffmanEncoding_fu_597_ap_done = ap_const_logic_0) or (grp_p_foword_FDC_fu_405_ap_done = ap_const_logic_0));
    end process;


    ap_block_state17_on_subcall_done_assign_proc : process(grp_p_doHuffmanEncoding_fu_597_ap_done, grp_p_write_bitstring_s_fu_631_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_p_write_bitstring_s_fu_631_ap_done = ap_const_logic_0) or (grp_p_doHuffmanEncoding_fu_597_ap_done = ap_const_logic_0));
    end process;


    ap_block_state5_on_subcall_done_assign_proc : process(grp_p_write_jpeg_header_fu_651_ap_done, grp_p_computeHuffmanTable_fu_685_ap_done, grp_p_computeHuffmanTable_fu_697_ap_done, grp_p_computeHuffmanTable_1_fu_709_ap_done, grp_p_computeHuffmanTable_1_fu_721_ap_done)
    begin
                ap_block_state5_on_subcall_done <= ((grp_p_computeHuffmanTable_1_fu_721_ap_done = ap_const_logic_0) or (grp_p_computeHuffmanTable_1_fu_709_ap_done = ap_const_logic_0) or (grp_p_computeHuffmanTable_fu_697_ap_done = ap_const_logic_0) or (grp_p_computeHuffmanTable_fu_685_ap_done = ap_const_logic_0) or (grp_p_write_jpeg_header_fu_651_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6, icmp_ln630_fu_827_p2)
    begin
        if ((((icmp_ln630_fu_827_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, icmp_ln630_fu_827_p2)
    begin
        if (((icmp_ln630_fu_827_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    cbData_0_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_0_address0, grp_p_convertColorSpace_fu_565_cbData_0_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_0_address0 <= grp_p_convertColorSpace_fu_565_cbData_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_0_address0 <= grp_p_foword_FDC_fu_405_channel_data_0_address0;
        else 
            cbData_0_address0 <= "XXX";
        end if; 
    end process;


    cbData_0_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_0_ce0, grp_p_convertColorSpace_fu_565_cbData_0_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_0_ce0 <= grp_p_convertColorSpace_fu_565_cbData_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_0_ce0 <= grp_p_foword_FDC_fu_405_channel_data_0_ce0;
        else 
            cbData_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_0_ce1_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_0_ce1 <= grp_p_foword_FDC_fu_405_channel_data_0_ce1;
        else 
            cbData_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_0_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_cbData_0_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_0_we0 <= grp_p_convertColorSpace_fu_565_cbData_0_we0;
        else 
            cbData_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_1_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_1_address0, grp_p_convertColorSpace_fu_565_cbData_1_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_1_address0 <= grp_p_convertColorSpace_fu_565_cbData_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_1_address0 <= grp_p_foword_FDC_fu_405_channel_data_1_address0;
        else 
            cbData_1_address0 <= "XXX";
        end if; 
    end process;


    cbData_1_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_1_ce0, grp_p_convertColorSpace_fu_565_cbData_1_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_1_ce0 <= grp_p_convertColorSpace_fu_565_cbData_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_1_ce0 <= grp_p_foword_FDC_fu_405_channel_data_1_ce0;
        else 
            cbData_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_1_ce1_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_1_ce1 <= grp_p_foword_FDC_fu_405_channel_data_1_ce1;
        else 
            cbData_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_1_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_cbData_1_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_1_we0 <= grp_p_convertColorSpace_fu_565_cbData_1_we0;
        else 
            cbData_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_2_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_2_address0, grp_p_convertColorSpace_fu_565_cbData_2_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_2_address0 <= grp_p_convertColorSpace_fu_565_cbData_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_2_address0 <= grp_p_foword_FDC_fu_405_channel_data_2_address0;
        else 
            cbData_2_address0 <= "XXX";
        end if; 
    end process;


    cbData_2_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_2_ce0, grp_p_convertColorSpace_fu_565_cbData_2_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_2_ce0 <= grp_p_convertColorSpace_fu_565_cbData_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_2_ce0 <= grp_p_foword_FDC_fu_405_channel_data_2_ce0;
        else 
            cbData_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_2_ce1_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_2_ce1 <= grp_p_foword_FDC_fu_405_channel_data_2_ce1;
        else 
            cbData_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_2_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_cbData_2_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_2_we0 <= grp_p_convertColorSpace_fu_565_cbData_2_we0;
        else 
            cbData_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_3_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_3_address0, grp_p_convertColorSpace_fu_565_cbData_3_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_3_address0 <= grp_p_convertColorSpace_fu_565_cbData_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_3_address0 <= grp_p_foword_FDC_fu_405_channel_data_3_address0;
        else 
            cbData_3_address0 <= "XXX";
        end if; 
    end process;


    cbData_3_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_3_ce0, grp_p_convertColorSpace_fu_565_cbData_3_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_3_ce0 <= grp_p_convertColorSpace_fu_565_cbData_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_3_ce0 <= grp_p_foword_FDC_fu_405_channel_data_3_ce0;
        else 
            cbData_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_3_ce1_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_3_ce1 <= grp_p_foword_FDC_fu_405_channel_data_3_ce1;
        else 
            cbData_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_3_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_cbData_3_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_3_we0 <= grp_p_convertColorSpace_fu_565_cbData_3_we0;
        else 
            cbData_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_4_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_4_address0, grp_p_convertColorSpace_fu_565_cbData_4_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_4_address0 <= grp_p_convertColorSpace_fu_565_cbData_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_4_address0 <= grp_p_foword_FDC_fu_405_channel_data_4_address0;
        else 
            cbData_4_address0 <= "XXX";
        end if; 
    end process;


    cbData_4_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_4_ce0, grp_p_convertColorSpace_fu_565_cbData_4_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_4_ce0 <= grp_p_convertColorSpace_fu_565_cbData_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_4_ce0 <= grp_p_foword_FDC_fu_405_channel_data_4_ce0;
        else 
            cbData_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_4_ce1_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_4_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_4_ce1 <= grp_p_foword_FDC_fu_405_channel_data_4_ce1;
        else 
            cbData_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_4_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_cbData_4_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_4_we0 <= grp_p_convertColorSpace_fu_565_cbData_4_we0;
        else 
            cbData_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_5_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_5_address0, grp_p_convertColorSpace_fu_565_cbData_5_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_5_address0 <= grp_p_convertColorSpace_fu_565_cbData_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_5_address0 <= grp_p_foword_FDC_fu_405_channel_data_5_address0;
        else 
            cbData_5_address0 <= "XXX";
        end if; 
    end process;


    cbData_5_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_5_ce0, grp_p_convertColorSpace_fu_565_cbData_5_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_5_ce0 <= grp_p_convertColorSpace_fu_565_cbData_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_5_ce0 <= grp_p_foword_FDC_fu_405_channel_data_5_ce0;
        else 
            cbData_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_5_ce1_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_5_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_5_ce1 <= grp_p_foword_FDC_fu_405_channel_data_5_ce1;
        else 
            cbData_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_5_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_cbData_5_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_5_we0 <= grp_p_convertColorSpace_fu_565_cbData_5_we0;
        else 
            cbData_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_6_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_6_address0, grp_p_convertColorSpace_fu_565_cbData_6_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_6_address0 <= grp_p_convertColorSpace_fu_565_cbData_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_6_address0 <= grp_p_foword_FDC_fu_405_channel_data_6_address0;
        else 
            cbData_6_address0 <= "XXX";
        end if; 
    end process;


    cbData_6_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_6_ce0, grp_p_convertColorSpace_fu_565_cbData_6_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_6_ce0 <= grp_p_convertColorSpace_fu_565_cbData_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_6_ce0 <= grp_p_foword_FDC_fu_405_channel_data_6_ce0;
        else 
            cbData_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_6_ce1_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_6_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_6_ce1 <= grp_p_foword_FDC_fu_405_channel_data_6_ce1;
        else 
            cbData_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_6_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_cbData_6_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_6_we0 <= grp_p_convertColorSpace_fu_565_cbData_6_we0;
        else 
            cbData_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_7_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_7_address0, grp_p_convertColorSpace_fu_565_cbData_7_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_7_address0 <= grp_p_convertColorSpace_fu_565_cbData_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_7_address0 <= grp_p_foword_FDC_fu_405_channel_data_7_address0;
        else 
            cbData_7_address0 <= "XXX";
        end if; 
    end process;


    cbData_7_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_7_ce0, grp_p_convertColorSpace_fu_565_cbData_7_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_7_ce0 <= grp_p_convertColorSpace_fu_565_cbData_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_7_ce0 <= grp_p_foword_FDC_fu_405_channel_data_7_ce0;
        else 
            cbData_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_7_ce1_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_channel_data_7_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbData_7_ce1 <= grp_p_foword_FDC_fu_405_channel_data_7_ce1;
        else 
            cbData_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cbData_7_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_cbData_7_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cbData_7_we0 <= grp_p_convertColorSpace_fu_565_cbData_7_we0;
        else 
            cbData_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cbQuant_address0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_fdc_data_address0, grp_p_doHuffmanEncoding_fu_597_DU_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            cbQuant_address0 <= grp_p_doHuffmanEncoding_fu_597_DU_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbQuant_address0 <= grp_p_foword_FDC_fu_405_fdc_data_address0;
        else 
            cbQuant_address0 <= "XXXXXX";
        end if; 
    end process;


    cbQuant_ce0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_fdc_data_ce0, grp_p_doHuffmanEncoding_fu_597_DU_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            cbQuant_ce0 <= grp_p_doHuffmanEncoding_fu_597_DU_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbQuant_ce0 <= grp_p_foword_FDC_fu_405_fdc_data_ce0;
        else 
            cbQuant_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cbQuant_ce1_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_fdc_data_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbQuant_ce1 <= grp_p_foword_FDC_fu_405_fdc_data_ce1;
        else 
            cbQuant_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cbQuant_we0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_fdc_data_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbQuant_we0 <= grp_p_foword_FDC_fu_405_fdc_data_we0;
        else 
            cbQuant_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cbQuant_we1_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_fdc_data_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cbQuant_we1 <= grp_p_foword_FDC_fu_405_fdc_data_we1;
        else 
            cbQuant_we1 <= ap_const_logic_0;
        end if; 
    end process;

    count_fu_833_p2 <= std_logic_vector(unsigned(count_0_reg_382) + unsigned(ap_const_lv6_1));

    crData_0_address0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_0_address0, grp_p_convertColorSpace_fu_565_crData_0_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_0_address0 <= grp_p_convertColorSpace_fu_565_crData_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_0_address0 <= grp_p_foword_FDC_fu_405_channel_data_0_address0;
        else 
            crData_0_address0 <= "XXX";
        end if; 
    end process;


    crData_0_ce0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_0_ce0, grp_p_convertColorSpace_fu_565_crData_0_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_0_ce0 <= grp_p_convertColorSpace_fu_565_crData_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_0_ce0 <= grp_p_foword_FDC_fu_405_channel_data_0_ce0;
        else 
            crData_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_0_ce1_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_0_ce1 <= grp_p_foword_FDC_fu_405_channel_data_0_ce1;
        else 
            crData_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    crData_0_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_crData_0_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_0_we0 <= grp_p_convertColorSpace_fu_565_crData_0_we0;
        else 
            crData_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_1_address0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_1_address0, grp_p_convertColorSpace_fu_565_crData_1_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_1_address0 <= grp_p_convertColorSpace_fu_565_crData_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_1_address0 <= grp_p_foword_FDC_fu_405_channel_data_1_address0;
        else 
            crData_1_address0 <= "XXX";
        end if; 
    end process;


    crData_1_ce0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_1_ce0, grp_p_convertColorSpace_fu_565_crData_1_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_1_ce0 <= grp_p_convertColorSpace_fu_565_crData_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_1_ce0 <= grp_p_foword_FDC_fu_405_channel_data_1_ce0;
        else 
            crData_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_1_ce1_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_1_ce1 <= grp_p_foword_FDC_fu_405_channel_data_1_ce1;
        else 
            crData_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    crData_1_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_crData_1_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_1_we0 <= grp_p_convertColorSpace_fu_565_crData_1_we0;
        else 
            crData_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_2_address0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_2_address0, grp_p_convertColorSpace_fu_565_crData_2_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_2_address0 <= grp_p_convertColorSpace_fu_565_crData_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_2_address0 <= grp_p_foword_FDC_fu_405_channel_data_2_address0;
        else 
            crData_2_address0 <= "XXX";
        end if; 
    end process;


    crData_2_ce0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_2_ce0, grp_p_convertColorSpace_fu_565_crData_2_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_2_ce0 <= grp_p_convertColorSpace_fu_565_crData_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_2_ce0 <= grp_p_foword_FDC_fu_405_channel_data_2_ce0;
        else 
            crData_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_2_ce1_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_2_ce1 <= grp_p_foword_FDC_fu_405_channel_data_2_ce1;
        else 
            crData_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    crData_2_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_crData_2_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_2_we0 <= grp_p_convertColorSpace_fu_565_crData_2_we0;
        else 
            crData_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_3_address0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_3_address0, grp_p_convertColorSpace_fu_565_crData_3_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_3_address0 <= grp_p_convertColorSpace_fu_565_crData_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_3_address0 <= grp_p_foword_FDC_fu_405_channel_data_3_address0;
        else 
            crData_3_address0 <= "XXX";
        end if; 
    end process;


    crData_3_ce0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_3_ce0, grp_p_convertColorSpace_fu_565_crData_3_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_3_ce0 <= grp_p_convertColorSpace_fu_565_crData_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_3_ce0 <= grp_p_foword_FDC_fu_405_channel_data_3_ce0;
        else 
            crData_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_3_ce1_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_3_ce1 <= grp_p_foword_FDC_fu_405_channel_data_3_ce1;
        else 
            crData_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    crData_3_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_crData_3_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_3_we0 <= grp_p_convertColorSpace_fu_565_crData_3_we0;
        else 
            crData_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_4_address0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_4_address0, grp_p_convertColorSpace_fu_565_crData_4_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_4_address0 <= grp_p_convertColorSpace_fu_565_crData_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_4_address0 <= grp_p_foword_FDC_fu_405_channel_data_4_address0;
        else 
            crData_4_address0 <= "XXX";
        end if; 
    end process;


    crData_4_ce0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_4_ce0, grp_p_convertColorSpace_fu_565_crData_4_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_4_ce0 <= grp_p_convertColorSpace_fu_565_crData_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_4_ce0 <= grp_p_foword_FDC_fu_405_channel_data_4_ce0;
        else 
            crData_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_4_ce1_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_4_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_4_ce1 <= grp_p_foword_FDC_fu_405_channel_data_4_ce1;
        else 
            crData_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    crData_4_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_crData_4_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_4_we0 <= grp_p_convertColorSpace_fu_565_crData_4_we0;
        else 
            crData_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_5_address0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_5_address0, grp_p_convertColorSpace_fu_565_crData_5_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_5_address0 <= grp_p_convertColorSpace_fu_565_crData_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_5_address0 <= grp_p_foword_FDC_fu_405_channel_data_5_address0;
        else 
            crData_5_address0 <= "XXX";
        end if; 
    end process;


    crData_5_ce0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_5_ce0, grp_p_convertColorSpace_fu_565_crData_5_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_5_ce0 <= grp_p_convertColorSpace_fu_565_crData_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_5_ce0 <= grp_p_foword_FDC_fu_405_channel_data_5_ce0;
        else 
            crData_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_5_ce1_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_5_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_5_ce1 <= grp_p_foword_FDC_fu_405_channel_data_5_ce1;
        else 
            crData_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    crData_5_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_crData_5_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_5_we0 <= grp_p_convertColorSpace_fu_565_crData_5_we0;
        else 
            crData_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_6_address0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_6_address0, grp_p_convertColorSpace_fu_565_crData_6_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_6_address0 <= grp_p_convertColorSpace_fu_565_crData_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_6_address0 <= grp_p_foword_FDC_fu_405_channel_data_6_address0;
        else 
            crData_6_address0 <= "XXX";
        end if; 
    end process;


    crData_6_ce0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_6_ce0, grp_p_convertColorSpace_fu_565_crData_6_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_6_ce0 <= grp_p_convertColorSpace_fu_565_crData_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_6_ce0 <= grp_p_foword_FDC_fu_405_channel_data_6_ce0;
        else 
            crData_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_6_ce1_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_6_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_6_ce1 <= grp_p_foword_FDC_fu_405_channel_data_6_ce1;
        else 
            crData_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    crData_6_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_crData_6_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_6_we0 <= grp_p_convertColorSpace_fu_565_crData_6_we0;
        else 
            crData_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_7_address0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_7_address0, grp_p_convertColorSpace_fu_565_crData_7_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_7_address0 <= grp_p_convertColorSpace_fu_565_crData_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_7_address0 <= grp_p_foword_FDC_fu_405_channel_data_7_address0;
        else 
            crData_7_address0 <= "XXX";
        end if; 
    end process;


    crData_7_ce0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_7_ce0, grp_p_convertColorSpace_fu_565_crData_7_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_7_ce0 <= grp_p_convertColorSpace_fu_565_crData_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_7_ce0 <= grp_p_foword_FDC_fu_405_channel_data_7_ce0;
        else 
            crData_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    crData_7_ce1_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_channel_data_7_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crData_7_ce1 <= grp_p_foword_FDC_fu_405_channel_data_7_ce1;
        else 
            crData_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    crData_7_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_crData_7_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            crData_7_we0 <= grp_p_convertColorSpace_fu_565_crData_7_we0;
        else 
            crData_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    crQuant_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_foword_FDC_fu_405_fdc_data_address0, grp_p_doHuffmanEncoding_fu_597_DU_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            crQuant_address0 <= grp_p_doHuffmanEncoding_fu_597_DU_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crQuant_address0 <= grp_p_foword_FDC_fu_405_fdc_data_address0;
        else 
            crQuant_address0 <= "XXXXXX";
        end if; 
    end process;


    crQuant_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_foword_FDC_fu_405_fdc_data_ce0, grp_p_doHuffmanEncoding_fu_597_DU_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            crQuant_ce0 <= grp_p_doHuffmanEncoding_fu_597_DU_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crQuant_ce0 <= grp_p_foword_FDC_fu_405_fdc_data_ce0;
        else 
            crQuant_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    crQuant_ce1_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_fdc_data_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crQuant_ce1 <= grp_p_foword_FDC_fu_405_fdc_data_ce1;
        else 
            crQuant_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    crQuant_we0_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_fdc_data_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crQuant_we0 <= grp_p_foword_FDC_fu_405_fdc_data_we0;
        else 
            crQuant_we0 <= ap_const_logic_0;
        end if; 
    end process;


    crQuant_we1_assign_proc : process(ap_CS_fsm_state15, grp_p_foword_FDC_fu_405_fdc_data_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            crQuant_we1 <= grp_p_foword_FDC_fu_405_fdc_data_we1;
        else 
            crQuant_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_p_computeHuffmanTable_1_fu_709_ap_start <= grp_p_computeHuffmanTable_1_fu_709_ap_start_reg;
    grp_p_computeHuffmanTable_1_fu_721_ap_start <= grp_p_computeHuffmanTable_1_fu_721_ap_start_reg;
    grp_p_computeHuffmanTable_fu_685_ap_start <= grp_p_computeHuffmanTable_fu_685_ap_start_reg;
    grp_p_computeHuffmanTable_fu_697_ap_start <= grp_p_computeHuffmanTable_fu_697_ap_start_reg;
    grp_p_convertColorSpace_fu_565_ap_start <= grp_p_convertColorSpace_fu_565_ap_start_reg;

    grp_p_doHuffmanEncoding_fu_597_DU_q0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, yQuant_q0, cbQuant_q0, crQuant_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_p_doHuffmanEncoding_fu_597_DU_q0 <= crQuant_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_doHuffmanEncoding_fu_597_DU_q0 <= cbQuant_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_doHuffmanEncoding_fu_597_DU_q0 <= yQuant_q0;
        else 
            grp_p_doHuffmanEncoding_fu_597_DU_q0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    grp_p_doHuffmanEncoding_fu_597_HTAC_length_q0_assign_proc : process(JpegEncoder_m_Y_AC_Huffman_Table_length_q0, JpegEncoder_m_CbCr_AC_Huffman_Table_length_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_p_doHuffmanEncoding_fu_597_HTAC_length_q0 <= JpegEncoder_m_CbCr_AC_Huffman_Table_length_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_doHuffmanEncoding_fu_597_HTAC_length_q0 <= JpegEncoder_m_Y_AC_Huffman_Table_length_q0;
        else 
            grp_p_doHuffmanEncoding_fu_597_HTAC_length_q0 <= "XXXXX";
        end if; 
    end process;


    grp_p_doHuffmanEncoding_fu_597_HTAC_length_q1_assign_proc : process(JpegEncoder_m_Y_AC_Huffman_Table_length_q1, JpegEncoder_m_CbCr_AC_Huffman_Table_length_q1, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_p_doHuffmanEncoding_fu_597_HTAC_length_q1 <= JpegEncoder_m_CbCr_AC_Huffman_Table_length_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_doHuffmanEncoding_fu_597_HTAC_length_q1 <= JpegEncoder_m_Y_AC_Huffman_Table_length_q1;
        else 
            grp_p_doHuffmanEncoding_fu_597_HTAC_length_q1 <= "XXXXX";
        end if; 
    end process;


    grp_p_doHuffmanEncoding_fu_597_HTAC_value_q0_assign_proc : process(JpegEncoder_m_Y_AC_Huffman_Table_value_q0, JpegEncoder_m_CbCr_AC_Huffman_Table_value_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_p_doHuffmanEncoding_fu_597_HTAC_value_q0 <= JpegEncoder_m_CbCr_AC_Huffman_Table_value_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_doHuffmanEncoding_fu_597_HTAC_value_q0 <= JpegEncoder_m_Y_AC_Huffman_Table_value_q0;
        else 
            grp_p_doHuffmanEncoding_fu_597_HTAC_value_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_doHuffmanEncoding_fu_597_HTAC_value_q1_assign_proc : process(JpegEncoder_m_Y_AC_Huffman_Table_value_q1, JpegEncoder_m_CbCr_AC_Huffman_Table_value_q1, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_p_doHuffmanEncoding_fu_597_HTAC_value_q1 <= JpegEncoder_m_CbCr_AC_Huffman_Table_value_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_doHuffmanEncoding_fu_597_HTAC_value_q1 <= JpegEncoder_m_Y_AC_Huffman_Table_value_q1;
        else 
            grp_p_doHuffmanEncoding_fu_597_HTAC_value_q1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_doHuffmanEncoding_fu_597_HTDC_length_q0_assign_proc : process(JpegEncoder_m_Y_DC_Huffman_Table_length_q0, JpegEncoder_m_CbCr_DC_Huffman_Table_length_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_p_doHuffmanEncoding_fu_597_HTDC_length_q0 <= JpegEncoder_m_CbCr_DC_Huffman_Table_length_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_doHuffmanEncoding_fu_597_HTDC_length_q0 <= JpegEncoder_m_Y_DC_Huffman_Table_length_q0;
        else 
            grp_p_doHuffmanEncoding_fu_597_HTDC_length_q0 <= "XXXXX";
        end if; 
    end process;


    grp_p_doHuffmanEncoding_fu_597_HTDC_value_q0_assign_proc : process(JpegEncoder_m_Y_DC_Huffman_Table_value_q0, JpegEncoder_m_CbCr_DC_Huffman_Table_value_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_p_doHuffmanEncoding_fu_597_HTDC_value_q0 <= JpegEncoder_m_CbCr_DC_Huffman_Table_value_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_doHuffmanEncoding_fu_597_HTDC_value_q0 <= JpegEncoder_m_Y_DC_Huffman_Table_value_q0;
        else 
            grp_p_doHuffmanEncoding_fu_597_HTDC_value_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_p_doHuffmanEncoding_fu_597_ap_start <= grp_p_doHuffmanEncoding_fu_597_ap_start_reg;

    grp_p_doHuffmanEncoding_fu_597_prevDC_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state17, prev_DC_Y_1_fu_286, prev_DC_Cb_1_fu_290, prev_DC_Cr_1_fu_294)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_p_doHuffmanEncoding_fu_597_prevDC_read <= prev_DC_Cr_1_fu_294;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_doHuffmanEncoding_fu_597_prevDC_read <= prev_DC_Cb_1_fu_290;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_doHuffmanEncoding_fu_597_prevDC_read <= prev_DC_Y_1_fu_286;
        else 
            grp_p_doHuffmanEncoding_fu_597_prevDC_read <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_p_foword_FDC_fu_405_ap_start <= grp_p_foword_FDC_fu_405_ap_start_reg;

    grp_p_foword_FDC_fu_405_channel_data_0_q0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_0_q0, cbData_0_q0, crData_0_q0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_0_q0 <= crData_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_0_q0 <= cbData_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_0_q0 <= yData_0_q0;
        else 
            grp_p_foword_FDC_fu_405_channel_data_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_0_q1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_0_q1, cbData_0_q1, crData_0_q1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_0_q1 <= crData_0_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_0_q1 <= cbData_0_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_0_q1 <= yData_0_q1;
        else 
            grp_p_foword_FDC_fu_405_channel_data_0_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_1_q0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_1_q0, cbData_1_q0, crData_1_q0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_1_q0 <= crData_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_1_q0 <= cbData_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_1_q0 <= yData_1_q0;
        else 
            grp_p_foword_FDC_fu_405_channel_data_1_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_1_q1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_1_q1, cbData_1_q1, crData_1_q1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_1_q1 <= crData_1_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_1_q1 <= cbData_1_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_1_q1 <= yData_1_q1;
        else 
            grp_p_foword_FDC_fu_405_channel_data_1_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_2_q0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_2_q0, cbData_2_q0, crData_2_q0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_2_q0 <= crData_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_2_q0 <= cbData_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_2_q0 <= yData_2_q0;
        else 
            grp_p_foword_FDC_fu_405_channel_data_2_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_2_q1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_2_q1, cbData_2_q1, crData_2_q1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_2_q1 <= crData_2_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_2_q1 <= cbData_2_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_2_q1 <= yData_2_q1;
        else 
            grp_p_foword_FDC_fu_405_channel_data_2_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_3_q0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_3_q0, cbData_3_q0, crData_3_q0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_3_q0 <= crData_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_3_q0 <= cbData_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_3_q0 <= yData_3_q0;
        else 
            grp_p_foword_FDC_fu_405_channel_data_3_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_3_q1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_3_q1, cbData_3_q1, crData_3_q1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_3_q1 <= crData_3_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_3_q1 <= cbData_3_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_3_q1 <= yData_3_q1;
        else 
            grp_p_foword_FDC_fu_405_channel_data_3_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_4_q0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_4_q0, cbData_4_q0, crData_4_q0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_4_q0 <= crData_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_4_q0 <= cbData_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_4_q0 <= yData_4_q0;
        else 
            grp_p_foword_FDC_fu_405_channel_data_4_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_4_q1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_4_q1, cbData_4_q1, crData_4_q1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_4_q1 <= crData_4_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_4_q1 <= cbData_4_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_4_q1 <= yData_4_q1;
        else 
            grp_p_foword_FDC_fu_405_channel_data_4_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_5_q0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_5_q0, cbData_5_q0, crData_5_q0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_5_q0 <= crData_5_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_5_q0 <= cbData_5_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_5_q0 <= yData_5_q0;
        else 
            grp_p_foword_FDC_fu_405_channel_data_5_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_5_q1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_5_q1, cbData_5_q1, crData_5_q1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_5_q1 <= crData_5_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_5_q1 <= cbData_5_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_5_q1 <= yData_5_q1;
        else 
            grp_p_foword_FDC_fu_405_channel_data_5_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_6_q0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_6_q0, cbData_6_q0, crData_6_q0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_6_q0 <= crData_6_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_6_q0 <= cbData_6_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_6_q0 <= yData_6_q0;
        else 
            grp_p_foword_FDC_fu_405_channel_data_6_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_6_q1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_6_q1, cbData_6_q1, crData_6_q1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_6_q1 <= crData_6_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_6_q1 <= cbData_6_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_6_q1 <= yData_6_q1;
        else 
            grp_p_foword_FDC_fu_405_channel_data_6_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_7_q0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_7_q0, cbData_7_q0, crData_7_q0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_7_q0 <= crData_7_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_7_q0 <= cbData_7_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_7_q0 <= yData_7_q0;
        else 
            grp_p_foword_FDC_fu_405_channel_data_7_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_channel_data_7_q1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, yData_7_q1, cbData_7_q1, crData_7_q1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_foword_FDC_fu_405_channel_data_7_q1 <= crData_7_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_p_foword_FDC_fu_405_channel_data_7_q1 <= cbData_7_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_channel_data_7_q1 <= yData_7_q1;
        else 
            grp_p_foword_FDC_fu_405_channel_data_7_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_10_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_10_read <= ap_const_lv5_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_10_read <= ap_const_lv5_7;
        else 
            grp_p_foword_FDC_fu_405_quant_10_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_11_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_11_read <= ap_const_lv5_9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_11_read <= ap_const_lv5_7;
        else 
            grp_p_foword_FDC_fu_405_quant_11_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_12_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_12_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_12_read <= ap_const_lv5_8;
        else 
            grp_p_foword_FDC_fu_405_quant_12_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_13_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_13_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_13_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_13_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_14_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_14_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_14_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_14_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_15_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_15_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_15_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_15_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_16_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_16_read <= ap_const_lv5_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_16_read <= ap_const_lv5_7;
        else 
            grp_p_foword_FDC_fu_405_quant_16_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_17_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_17_read <= ap_const_lv5_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_17_read <= ap_const_lv5_7;
        else 
            grp_p_foword_FDC_fu_405_quant_17_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_18_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_18_read <= ap_const_lv5_9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_18_read <= ap_const_lv5_7;
        else 
            grp_p_foword_FDC_fu_405_quant_18_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_19_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_19_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_19_read <= ap_const_lv5_8;
        else 
            grp_p_foword_FDC_fu_405_quant_19_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_1_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_1_read <= ap_const_lv4_7;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_1_read <= ap_const_lv4_6;
        else 
            grp_p_foword_FDC_fu_405_quant_1_read <= "XXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_20_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_20_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_20_read <= ap_const_lv5_8;
        else 
            grp_p_foword_FDC_fu_405_quant_20_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_21_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_21_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_21_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_21_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_22_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_22_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_22_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_22_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_23_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_23_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_23_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_23_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_24_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_24_read <= ap_const_lv5_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_24_read <= ap_const_lv5_7;
        else 
            grp_p_foword_FDC_fu_405_quant_24_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_25_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_25_read <= ap_const_lv5_9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_25_read <= ap_const_lv5_7;
        else 
            grp_p_foword_FDC_fu_405_quant_25_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_26_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_26_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_26_read <= ap_const_lv5_7;
        else 
            grp_p_foword_FDC_fu_405_quant_26_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_27_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_27_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_27_read <= ap_const_lv5_8;
        else 
            grp_p_foword_FDC_fu_405_quant_27_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_28_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_28_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_28_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_28_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_29_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_29_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_29_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_29_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_2_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_2_read <= ap_const_lv5_8;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_2_read <= ap_const_lv5_6;
        else 
            grp_p_foword_FDC_fu_405_quant_2_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_30_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_30_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_30_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_30_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_31_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_31_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_31_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_31_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_32_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_32_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_32_read <= ap_const_lv5_7;
        else 
            grp_p_foword_FDC_fu_405_quant_32_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_33_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_33_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_33_read <= ap_const_lv5_7;
        else 
            grp_p_foword_FDC_fu_405_quant_33_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_34_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_34_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_34_read <= ap_const_lv5_8;
        else 
            grp_p_foword_FDC_fu_405_quant_34_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_35_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_35_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_35_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_35_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_36_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_36_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_36_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_36_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_39_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_39_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_39_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_39_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_3_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_3_read <= ap_const_lv5_9;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_3_read <= ap_const_lv5_7;
        else 
            grp_p_foword_FDC_fu_405_quant_3_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_40_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_40_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_40_read <= ap_const_lv5_7;
        else 
            grp_p_foword_FDC_fu_405_quant_40_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_41_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_41_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_41_read <= ap_const_lv5_8;
        else 
            grp_p_foword_FDC_fu_405_quant_41_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_42_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_42_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_42_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_42_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_43_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_43_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_43_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_43_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_44_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_44_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_44_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_44_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_47_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_47_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_47_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_47_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_48_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_48_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_48_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_48_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_49_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_49_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_49_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_49_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_4_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_4_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_4_read <= ap_const_lv5_8;
        else 
            grp_p_foword_FDC_fu_405_quant_4_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_50_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_50_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_50_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_50_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_51_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_51_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_51_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_51_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_56_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_56_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_56_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_56_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_57_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_57_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_57_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_57_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_5_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_5_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_5_read <= ap_const_lv5_8;
        else 
            grp_p_foword_FDC_fu_405_quant_5_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_6_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_6_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_6_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_6_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_7_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_7_read <= ap_const_lv5_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_7_read <= ap_const_lv5_9;
        else 
            grp_p_foword_FDC_fu_405_quant_7_read <= "XXXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_8_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_8_read <= ap_const_lv4_7;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_8_read <= ap_const_lv4_6;
        else 
            grp_p_foword_FDC_fu_405_quant_8_read <= "XXXX";
        end if; 
    end process;


    grp_p_foword_FDC_fu_405_quant_9_read_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            grp_p_foword_FDC_fu_405_quant_9_read <= ap_const_lv4_7;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_p_foword_FDC_fu_405_quant_9_read <= ap_const_lv4_6;
        else 
            grp_p_foword_FDC_fu_405_quant_9_read <= "XXXX";
        end if; 
    end process;


    grp_p_write_bitstring_s_fu_631_JpegEncoder_outhebyte_data_V_read_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, reg_768, ap_CS_fsm_state19, JpegEncoder_outhebyt_fu_282)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_p_write_bitstring_s_fu_631_JpegEncoder_outhebyte_data_V_read <= reg_768;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_write_bitstring_s_fu_631_JpegEncoder_outhebyte_data_V_read <= JpegEncoder_outhebyt_fu_282;
        else 
            grp_p_write_bitstring_s_fu_631_JpegEncoder_outhebyte_data_V_read <= "XXXXXXXX";
        end if; 
    end process;

    grp_p_write_bitstring_s_fu_631_ap_start <= grp_p_write_bitstring_s_fu_631_ap_start_reg;

    grp_p_write_bitstring_s_fu_631_bs_length_q0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, outputBitString_y_le_q0, outputBitString_cr_l_q0, outputBitString_cb_l_q0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_p_write_bitstring_s_fu_631_bs_length_q0 <= outputBitString_cr_l_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_p_write_bitstring_s_fu_631_bs_length_q0 <= outputBitString_cb_l_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_write_bitstring_s_fu_631_bs_length_q0 <= outputBitString_y_le_q0;
        else 
            grp_p_write_bitstring_s_fu_631_bs_length_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_write_bitstring_s_fu_631_bs_value_q0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, outputBitString_y_va_q0, outputBitString_cr_v_q0, outputBitString_cb_v_q0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_p_write_bitstring_s_fu_631_bs_value_q0 <= outputBitString_cr_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_p_write_bitstring_s_fu_631_bs_value_q0 <= outputBitString_cb_v_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_write_bitstring_s_fu_631_bs_value_q0 <= outputBitString_y_va_q0;
        else 
            grp_p_write_bitstring_s_fu_631_bs_value_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_p_write_bitstring_s_fu_631_jpeg_out_TREADY <= ((jpeg_out_TREADY and ap_CS_fsm_state17) or (jpeg_out_TREADY and ap_CS_fsm_state15) or (jpeg_out_TREADY and ap_CS_fsm_state19));

    grp_p_write_bitstring_s_fu_631_newBytePos_read_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, reg_758, ap_CS_fsm_state19, newBytePos_1_fu_302)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_p_write_bitstring_s_fu_631_newBytePos_read <= reg_758;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_write_bitstring_s_fu_631_newBytePos_read <= newBytePos_1_fu_302;
        else 
            grp_p_write_bitstring_s_fu_631_newBytePos_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_write_bitstring_s_fu_631_newByte_read_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, reg_763, ap_CS_fsm_state19, newByte_1_fu_298)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_p_write_bitstring_s_fu_631_newByte_read <= reg_763;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_p_write_bitstring_s_fu_631_newByte_read <= newByte_1_fu_298;
        else 
            grp_p_write_bitstring_s_fu_631_newByte_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_p_write_jpeg_header_fu_651_ap_start <= grp_p_write_jpeg_header_fu_651_ap_start_reg;
    grp_p_write_jpeg_header_fu_651_jpeg_out_TREADY <= (jpeg_out_TREADY and ap_CS_fsm_state5);
    grp_readFromBMP_fu_617_ap_start <= grp_readFromBMP_fu_617_ap_start_reg;
    i_fu_779_p2 <= std_logic_vector(unsigned(i_0_i_reg_371) + unsigned(ap_const_lv7_1));
    icmp_ln293_fu_773_p2 <= "1" when (i_0_i_reg_371 = ap_const_lv7_40) else "0";
    icmp_ln630_fu_827_p2 <= "1" when (count_0_reg_382 = ap_const_lv6_3C) else "0";
    icmp_ln633_fu_839_p2 <= "1" when (unsigned(xPos_0_reg_393) < unsigned(ap_const_lv10_280)) else "0";

    jpeg_out_TDATA_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_write_bitstring_s_fu_631_jpeg_out_TDATA, grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID, grp_p_write_jpeg_header_fu_651_jpeg_out_TDATA, grp_p_write_jpeg_header_fu_651_jpeg_out_TVALID, ap_CS_fsm_state5, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_p_write_jpeg_header_fu_651_jpeg_out_TVALID = ap_const_logic_1))) then 
            jpeg_out_TDATA <= grp_p_write_jpeg_header_fu_651_jpeg_out_TDATA;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID = ap_const_logic_1)))) then 
            jpeg_out_TDATA <= grp_p_write_bitstring_s_fu_631_jpeg_out_TDATA;
        else 
            jpeg_out_TDATA <= "XXXXXXXX";
        end if; 
    end process;


    jpeg_out_TKEEP_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID, grp_p_write_bitstring_s_fu_631_jpeg_out_TKEEP, grp_p_write_jpeg_header_fu_651_jpeg_out_TVALID, grp_p_write_jpeg_header_fu_651_jpeg_out_TKEEP, ap_CS_fsm_state5, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_p_write_jpeg_header_fu_651_jpeg_out_TVALID = ap_const_logic_1))) then 
            jpeg_out_TKEEP <= grp_p_write_jpeg_header_fu_651_jpeg_out_TKEEP;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID = ap_const_logic_1)))) then 
            jpeg_out_TKEEP <= grp_p_write_bitstring_s_fu_631_jpeg_out_TKEEP;
        else 
            jpeg_out_TKEEP <= "X";
        end if; 
    end process;


    jpeg_out_TLAST_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID, grp_p_write_bitstring_s_fu_631_jpeg_out_TLAST, grp_p_write_jpeg_header_fu_651_jpeg_out_TVALID, grp_p_write_jpeg_header_fu_651_jpeg_out_TLAST, ap_CS_fsm_state5, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_p_write_jpeg_header_fu_651_jpeg_out_TVALID = ap_const_logic_1))) then 
            jpeg_out_TLAST <= grp_p_write_jpeg_header_fu_651_jpeg_out_TLAST;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID = ap_const_logic_1)))) then 
            jpeg_out_TLAST <= grp_p_write_bitstring_s_fu_631_jpeg_out_TLAST;
        else 
            jpeg_out_TLAST <= "X";
        end if; 
    end process;


    jpeg_out_TSTRB_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID, grp_p_write_bitstring_s_fu_631_jpeg_out_TSTRB, grp_p_write_jpeg_header_fu_651_jpeg_out_TVALID, grp_p_write_jpeg_header_fu_651_jpeg_out_TSTRB, ap_CS_fsm_state5, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_p_write_jpeg_header_fu_651_jpeg_out_TVALID = ap_const_logic_1))) then 
            jpeg_out_TSTRB <= grp_p_write_jpeg_header_fu_651_jpeg_out_TSTRB;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID = ap_const_logic_1)))) then 
            jpeg_out_TSTRB <= grp_p_write_bitstring_s_fu_631_jpeg_out_TSTRB;
        else 
            jpeg_out_TSTRB <= "X";
        end if; 
    end process;


    jpeg_out_TVALID_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID, grp_p_write_jpeg_header_fu_651_jpeg_out_TVALID, ap_CS_fsm_state5, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            jpeg_out_TVALID <= grp_p_write_jpeg_header_fu_651_jpeg_out_TVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            jpeg_out_TVALID <= grp_p_write_bitstring_s_fu_631_jpeg_out_TVALID;
        else 
            jpeg_out_TVALID <= ap_const_logic_0;
        end if; 
    end process;


    outputBitString_cb_l_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_outputBitString_length_address0, grp_p_write_bitstring_s_fu_631_bs_length_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            outputBitString_cb_l_address0 <= grp_p_write_bitstring_s_fu_631_bs_length_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            outputBitString_cb_l_address0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_length_address0;
        else 
            outputBitString_cb_l_address0 <= "XXXXXXX";
        end if; 
    end process;


    outputBitString_cb_l_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_outputBitString_length_ce0, grp_p_write_bitstring_s_fu_631_bs_length_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            outputBitString_cb_l_ce0 <= grp_p_write_bitstring_s_fu_631_bs_length_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            outputBitString_cb_l_ce0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_length_ce0;
        else 
            outputBitString_cb_l_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    outputBitString_cb_l_we0_assign_proc : process(ap_CS_fsm_state15, grp_p_doHuffmanEncoding_fu_597_outputBitString_length_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            outputBitString_cb_l_we0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_length_we0;
        else 
            outputBitString_cb_l_we0 <= ap_const_logic_0;
        end if; 
    end process;


    outputBitString_cb_v_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_outputBitString_value_address0, grp_p_write_bitstring_s_fu_631_bs_value_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            outputBitString_cb_v_address0 <= grp_p_write_bitstring_s_fu_631_bs_value_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            outputBitString_cb_v_address0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_value_address0;
        else 
            outputBitString_cb_v_address0 <= "XXXXXXX";
        end if; 
    end process;


    outputBitString_cb_v_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_outputBitString_value_ce0, grp_p_write_bitstring_s_fu_631_bs_value_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            outputBitString_cb_v_ce0 <= grp_p_write_bitstring_s_fu_631_bs_value_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            outputBitString_cb_v_ce0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_value_ce0;
        else 
            outputBitString_cb_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    outputBitString_cb_v_we0_assign_proc : process(ap_CS_fsm_state15, grp_p_doHuffmanEncoding_fu_597_outputBitString_value_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            outputBitString_cb_v_we0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_value_we0;
        else 
            outputBitString_cb_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    outputBitString_cr_l_address0_assign_proc : process(ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_outputBitString_length_address0, grp_p_write_bitstring_s_fu_631_bs_length_address0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            outputBitString_cr_l_address0 <= grp_p_write_bitstring_s_fu_631_bs_length_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            outputBitString_cr_l_address0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_length_address0;
        else 
            outputBitString_cr_l_address0 <= "XXXXXXX";
        end if; 
    end process;


    outputBitString_cr_l_ce0_assign_proc : process(ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_outputBitString_length_ce0, grp_p_write_bitstring_s_fu_631_bs_length_ce0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            outputBitString_cr_l_ce0 <= grp_p_write_bitstring_s_fu_631_bs_length_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            outputBitString_cr_l_ce0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_length_ce0;
        else 
            outputBitString_cr_l_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    outputBitString_cr_l_we0_assign_proc : process(ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_outputBitString_length_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            outputBitString_cr_l_we0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_length_we0;
        else 
            outputBitString_cr_l_we0 <= ap_const_logic_0;
        end if; 
    end process;


    outputBitString_cr_v_address0_assign_proc : process(ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_outputBitString_value_address0, grp_p_write_bitstring_s_fu_631_bs_value_address0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            outputBitString_cr_v_address0 <= grp_p_write_bitstring_s_fu_631_bs_value_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            outputBitString_cr_v_address0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_value_address0;
        else 
            outputBitString_cr_v_address0 <= "XXXXXXX";
        end if; 
    end process;


    outputBitString_cr_v_ce0_assign_proc : process(ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_outputBitString_value_ce0, grp_p_write_bitstring_s_fu_631_bs_value_ce0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            outputBitString_cr_v_ce0 <= grp_p_write_bitstring_s_fu_631_bs_value_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            outputBitString_cr_v_ce0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_value_ce0;
        else 
            outputBitString_cr_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    outputBitString_cr_v_we0_assign_proc : process(ap_CS_fsm_state17, grp_p_doHuffmanEncoding_fu_597_outputBitString_value_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            outputBitString_cr_v_we0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_value_we0;
        else 
            outputBitString_cr_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    outputBitString_y_le_address0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_p_doHuffmanEncoding_fu_597_outputBitString_length_address0, grp_p_write_bitstring_s_fu_631_bs_length_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            outputBitString_y_le_address0 <= grp_p_write_bitstring_s_fu_631_bs_length_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            outputBitString_y_le_address0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_length_address0;
        else 
            outputBitString_y_le_address0 <= "XXXXXXX";
        end if; 
    end process;


    outputBitString_y_le_ce0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_p_doHuffmanEncoding_fu_597_outputBitString_length_ce0, grp_p_write_bitstring_s_fu_631_bs_length_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            outputBitString_y_le_ce0 <= grp_p_write_bitstring_s_fu_631_bs_length_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            outputBitString_y_le_ce0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_length_ce0;
        else 
            outputBitString_y_le_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    outputBitString_y_le_we0_assign_proc : process(ap_CS_fsm_state13, grp_p_doHuffmanEncoding_fu_597_outputBitString_length_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            outputBitString_y_le_we0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_length_we0;
        else 
            outputBitString_y_le_we0 <= ap_const_logic_0;
        end if; 
    end process;


    outputBitString_y_va_address0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_p_doHuffmanEncoding_fu_597_outputBitString_value_address0, grp_p_write_bitstring_s_fu_631_bs_value_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            outputBitString_y_va_address0 <= grp_p_write_bitstring_s_fu_631_bs_value_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            outputBitString_y_va_address0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_value_address0;
        else 
            outputBitString_y_va_address0 <= "XXXXXXX";
        end if; 
    end process;


    outputBitString_y_va_ce0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_p_doHuffmanEncoding_fu_597_outputBitString_value_ce0, grp_p_write_bitstring_s_fu_631_bs_value_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            outputBitString_y_va_ce0 <= grp_p_write_bitstring_s_fu_631_bs_value_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            outputBitString_y_va_ce0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_value_ce0;
        else 
            outputBitString_y_va_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    outputBitString_y_va_we0_assign_proc : process(ap_CS_fsm_state13, grp_p_doHuffmanEncoding_fu_597_outputBitString_value_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            outputBitString_y_va_we0 <= grp_p_doHuffmanEncoding_fu_597_outputBitString_value_we0;
        else 
            outputBitString_y_va_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_anonymous_namespace_10_address0_assign_proc : process(grp_p_computeHuffmanTable_fu_685_nr_codes_address0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_10_address0 <= grp_p_computeHuffmanTable_fu_685_nr_codes_address0;
    end process;


    p_anonymous_namespace_10_ce0_assign_proc : process(grp_p_computeHuffmanTable_fu_685_nr_codes_ce0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_10_ce0 <= grp_p_computeHuffmanTable_fu_685_nr_codes_ce0;
    end process;


    p_anonymous_namespace_1_address0_assign_proc : process(grp_p_computeHuffmanTable_fu_685_std_table_address0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_1_address0 <= grp_p_computeHuffmanTable_fu_685_std_table_address0;
    end process;


    p_anonymous_namespace_1_ce0_assign_proc : process(grp_p_computeHuffmanTable_fu_685_std_table_ce0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_1_ce0 <= grp_p_computeHuffmanTable_fu_685_std_table_ce0;
    end process;


    p_anonymous_namespace_3_address0_assign_proc : process(grp_p_computeHuffmanTable_1_fu_721_nr_codes_address0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_3_address0 <= grp_p_computeHuffmanTable_1_fu_721_nr_codes_address0;
    end process;


    p_anonymous_namespace_3_ce0_assign_proc : process(grp_p_computeHuffmanTable_1_fu_721_nr_codes_ce0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_3_ce0 <= grp_p_computeHuffmanTable_1_fu_721_nr_codes_ce0;
    end process;


    p_anonymous_namespace_4_address0_assign_proc : process(grp_p_computeHuffmanTable_1_fu_721_std_table_address0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_4_address0 <= grp_p_computeHuffmanTable_1_fu_721_std_table_address0;
    end process;


    p_anonymous_namespace_4_ce0_assign_proc : process(grp_p_computeHuffmanTable_1_fu_721_std_table_ce0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_4_ce0 <= grp_p_computeHuffmanTable_1_fu_721_std_table_ce0;
    end process;


    p_anonymous_namespace_5_address0_assign_proc : process(grp_p_computeHuffmanTable_1_fu_709_nr_codes_address0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_5_address0 <= grp_p_computeHuffmanTable_1_fu_709_nr_codes_address0;
    end process;


    p_anonymous_namespace_5_ce0_assign_proc : process(grp_p_computeHuffmanTable_1_fu_709_nr_codes_ce0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_5_ce0 <= grp_p_computeHuffmanTable_1_fu_709_nr_codes_ce0;
    end process;

    p_anonymous_namespace_6_address0 <= zext_ln295_fu_785_p1(6 - 1 downto 0);

    p_anonymous_namespace_6_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_anonymous_namespace_6_ce0 <= ap_const_logic_1;
        else 
            p_anonymous_namespace_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_anonymous_namespace_7_address0 <= zext_ln295_fu_785_p1(6 - 1 downto 0);

    p_anonymous_namespace_7_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_anonymous_namespace_7_ce0 <= ap_const_logic_1;
        else 
            p_anonymous_namespace_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_anonymous_namespace_8_address0_assign_proc : process(grp_p_computeHuffmanTable_fu_697_nr_codes_address0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_8_address0 <= grp_p_computeHuffmanTable_fu_697_nr_codes_address0;
    end process;


    p_anonymous_namespace_8_ce0_assign_proc : process(grp_p_computeHuffmanTable_fu_697_nr_codes_ce0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_8_ce0 <= grp_p_computeHuffmanTable_fu_697_nr_codes_ce0;
    end process;


    p_anonymous_namespace_9_address0_assign_proc : process(grp_p_computeHuffmanTable_fu_697_std_table_address0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_9_address0 <= grp_p_computeHuffmanTable_fu_697_std_table_address0;
    end process;


    p_anonymous_namespace_9_ce0_assign_proc : process(grp_p_computeHuffmanTable_fu_697_std_table_ce0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_9_ce0 <= grp_p_computeHuffmanTable_fu_697_std_table_ce0;
    end process;


    p_anonymous_namespace_address0_assign_proc : process(grp_p_computeHuffmanTable_1_fu_709_std_table_address0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_address0 <= grp_p_computeHuffmanTable_1_fu_709_std_table_address0;
    end process;


    p_anonymous_namespace_ce0_assign_proc : process(grp_p_computeHuffmanTable_1_fu_709_std_table_ce0, ap_CS_fsm_state5)
    begin
        p_anonymous_namespace_ce0 <= grp_p_computeHuffmanTable_1_fu_709_std_table_ce0;
    end process;


    rgb_in_TREADY_assign_proc : process(grp_readFromBMP_fu_617_rgb_in_TREADY, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rgb_in_TREADY <= grp_readFromBMP_fu_617_rgb_in_TREADY;
        else 
            rgb_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    xPos_fu_845_p2 <= std_logic_vector(unsigned(xPos_0_reg_393) + unsigned(ap_const_lv10_8));

    yData_0_address0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_0_address0, grp_p_convertColorSpace_fu_565_yData_0_address0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_0_address0 <= grp_p_convertColorSpace_fu_565_yData_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_0_address0 <= grp_p_foword_FDC_fu_405_channel_data_0_address0;
        else 
            yData_0_address0 <= "XXX";
        end if; 
    end process;


    yData_0_address1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_0_address1, grp_p_convertColorSpace_fu_565_yData_0_address1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_0_address1 <= grp_p_convertColorSpace_fu_565_yData_0_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_0_address1 <= grp_p_foword_FDC_fu_405_channel_data_0_address1;
        else 
            yData_0_address1 <= "XXX";
        end if; 
    end process;


    yData_0_ce0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_0_ce0, grp_p_convertColorSpace_fu_565_yData_0_ce0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_0_ce0 <= grp_p_convertColorSpace_fu_565_yData_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_0_ce0 <= grp_p_foword_FDC_fu_405_channel_data_0_ce0;
        else 
            yData_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_0_ce1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_0_ce1, grp_p_convertColorSpace_fu_565_yData_0_ce1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_0_ce1 <= grp_p_convertColorSpace_fu_565_yData_0_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_0_ce1 <= grp_p_foword_FDC_fu_405_channel_data_0_ce1;
        else 
            yData_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_0_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_0_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_0_we0 <= grp_p_convertColorSpace_fu_565_yData_0_we0;
        else 
            yData_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_0_we1_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_0_we1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_0_we1 <= grp_p_convertColorSpace_fu_565_yData_0_we1;
        else 
            yData_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_1_address0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_1_address0, grp_p_convertColorSpace_fu_565_yData_1_address0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_1_address0 <= grp_p_convertColorSpace_fu_565_yData_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_1_address0 <= grp_p_foword_FDC_fu_405_channel_data_1_address0;
        else 
            yData_1_address0 <= "XXX";
        end if; 
    end process;


    yData_1_address1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_1_address1, grp_p_convertColorSpace_fu_565_yData_1_address1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_1_address1 <= grp_p_convertColorSpace_fu_565_yData_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_1_address1 <= grp_p_foword_FDC_fu_405_channel_data_1_address1;
        else 
            yData_1_address1 <= "XXX";
        end if; 
    end process;


    yData_1_ce0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_1_ce0, grp_p_convertColorSpace_fu_565_yData_1_ce0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_1_ce0 <= grp_p_convertColorSpace_fu_565_yData_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_1_ce0 <= grp_p_foword_FDC_fu_405_channel_data_1_ce0;
        else 
            yData_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_1_ce1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_1_ce1, grp_p_convertColorSpace_fu_565_yData_1_ce1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_1_ce1 <= grp_p_convertColorSpace_fu_565_yData_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_1_ce1 <= grp_p_foword_FDC_fu_405_channel_data_1_ce1;
        else 
            yData_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_1_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_1_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_1_we0 <= grp_p_convertColorSpace_fu_565_yData_1_we0;
        else 
            yData_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_1_we1_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_1_we1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_1_we1 <= grp_p_convertColorSpace_fu_565_yData_1_we1;
        else 
            yData_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_2_address0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_2_address0, grp_p_convertColorSpace_fu_565_yData_2_address0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_2_address0 <= grp_p_convertColorSpace_fu_565_yData_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_2_address0 <= grp_p_foword_FDC_fu_405_channel_data_2_address0;
        else 
            yData_2_address0 <= "XXX";
        end if; 
    end process;


    yData_2_address1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_2_address1, grp_p_convertColorSpace_fu_565_yData_2_address1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_2_address1 <= grp_p_convertColorSpace_fu_565_yData_2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_2_address1 <= grp_p_foword_FDC_fu_405_channel_data_2_address1;
        else 
            yData_2_address1 <= "XXX";
        end if; 
    end process;


    yData_2_ce0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_2_ce0, grp_p_convertColorSpace_fu_565_yData_2_ce0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_2_ce0 <= grp_p_convertColorSpace_fu_565_yData_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_2_ce0 <= grp_p_foword_FDC_fu_405_channel_data_2_ce0;
        else 
            yData_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_2_ce1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_2_ce1, grp_p_convertColorSpace_fu_565_yData_2_ce1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_2_ce1 <= grp_p_convertColorSpace_fu_565_yData_2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_2_ce1 <= grp_p_foword_FDC_fu_405_channel_data_2_ce1;
        else 
            yData_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_2_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_2_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_2_we0 <= grp_p_convertColorSpace_fu_565_yData_2_we0;
        else 
            yData_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_2_we1_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_2_we1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_2_we1 <= grp_p_convertColorSpace_fu_565_yData_2_we1;
        else 
            yData_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_3_address0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_3_address0, grp_p_convertColorSpace_fu_565_yData_3_address0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_3_address0 <= grp_p_convertColorSpace_fu_565_yData_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_3_address0 <= grp_p_foword_FDC_fu_405_channel_data_3_address0;
        else 
            yData_3_address0 <= "XXX";
        end if; 
    end process;


    yData_3_address1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_3_address1, grp_p_convertColorSpace_fu_565_yData_3_address1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_3_address1 <= grp_p_convertColorSpace_fu_565_yData_3_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_3_address1 <= grp_p_foword_FDC_fu_405_channel_data_3_address1;
        else 
            yData_3_address1 <= "XXX";
        end if; 
    end process;


    yData_3_ce0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_3_ce0, grp_p_convertColorSpace_fu_565_yData_3_ce0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_3_ce0 <= grp_p_convertColorSpace_fu_565_yData_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_3_ce0 <= grp_p_foword_FDC_fu_405_channel_data_3_ce0;
        else 
            yData_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_3_ce1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_3_ce1, grp_p_convertColorSpace_fu_565_yData_3_ce1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_3_ce1 <= grp_p_convertColorSpace_fu_565_yData_3_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_3_ce1 <= grp_p_foword_FDC_fu_405_channel_data_3_ce1;
        else 
            yData_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_3_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_3_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_3_we0 <= grp_p_convertColorSpace_fu_565_yData_3_we0;
        else 
            yData_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_3_we1_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_3_we1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_3_we1 <= grp_p_convertColorSpace_fu_565_yData_3_we1;
        else 
            yData_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_4_address0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_4_address0, grp_p_convertColorSpace_fu_565_yData_4_address0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_4_address0 <= grp_p_convertColorSpace_fu_565_yData_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_4_address0 <= grp_p_foword_FDC_fu_405_channel_data_4_address0;
        else 
            yData_4_address0 <= "XXX";
        end if; 
    end process;


    yData_4_address1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_4_address1, grp_p_convertColorSpace_fu_565_yData_4_address1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_4_address1 <= grp_p_convertColorSpace_fu_565_yData_4_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_4_address1 <= grp_p_foword_FDC_fu_405_channel_data_4_address1;
        else 
            yData_4_address1 <= "XXX";
        end if; 
    end process;


    yData_4_ce0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_4_ce0, grp_p_convertColorSpace_fu_565_yData_4_ce0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_4_ce0 <= grp_p_convertColorSpace_fu_565_yData_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_4_ce0 <= grp_p_foword_FDC_fu_405_channel_data_4_ce0;
        else 
            yData_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_4_ce1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_4_ce1, grp_p_convertColorSpace_fu_565_yData_4_ce1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_4_ce1 <= grp_p_convertColorSpace_fu_565_yData_4_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_4_ce1 <= grp_p_foword_FDC_fu_405_channel_data_4_ce1;
        else 
            yData_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_4_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_4_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_4_we0 <= grp_p_convertColorSpace_fu_565_yData_4_we0;
        else 
            yData_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_4_we1_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_4_we1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_4_we1 <= grp_p_convertColorSpace_fu_565_yData_4_we1;
        else 
            yData_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_5_address0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_5_address0, grp_p_convertColorSpace_fu_565_yData_5_address0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_5_address0 <= grp_p_convertColorSpace_fu_565_yData_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_5_address0 <= grp_p_foword_FDC_fu_405_channel_data_5_address0;
        else 
            yData_5_address0 <= "XXX";
        end if; 
    end process;


    yData_5_address1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_5_address1, grp_p_convertColorSpace_fu_565_yData_5_address1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_5_address1 <= grp_p_convertColorSpace_fu_565_yData_5_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_5_address1 <= grp_p_foword_FDC_fu_405_channel_data_5_address1;
        else 
            yData_5_address1 <= "XXX";
        end if; 
    end process;


    yData_5_ce0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_5_ce0, grp_p_convertColorSpace_fu_565_yData_5_ce0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_5_ce0 <= grp_p_convertColorSpace_fu_565_yData_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_5_ce0 <= grp_p_foword_FDC_fu_405_channel_data_5_ce0;
        else 
            yData_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_5_ce1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_5_ce1, grp_p_convertColorSpace_fu_565_yData_5_ce1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_5_ce1 <= grp_p_convertColorSpace_fu_565_yData_5_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_5_ce1 <= grp_p_foword_FDC_fu_405_channel_data_5_ce1;
        else 
            yData_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_5_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_5_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_5_we0 <= grp_p_convertColorSpace_fu_565_yData_5_we0;
        else 
            yData_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_5_we1_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_5_we1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_5_we1 <= grp_p_convertColorSpace_fu_565_yData_5_we1;
        else 
            yData_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_6_address0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_6_address0, grp_p_convertColorSpace_fu_565_yData_6_address0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_6_address0 <= grp_p_convertColorSpace_fu_565_yData_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_6_address0 <= grp_p_foword_FDC_fu_405_channel_data_6_address0;
        else 
            yData_6_address0 <= "XXX";
        end if; 
    end process;


    yData_6_address1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_6_address1, grp_p_convertColorSpace_fu_565_yData_6_address1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_6_address1 <= grp_p_convertColorSpace_fu_565_yData_6_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_6_address1 <= grp_p_foword_FDC_fu_405_channel_data_6_address1;
        else 
            yData_6_address1 <= "XXX";
        end if; 
    end process;


    yData_6_ce0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_6_ce0, grp_p_convertColorSpace_fu_565_yData_6_ce0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_6_ce0 <= grp_p_convertColorSpace_fu_565_yData_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_6_ce0 <= grp_p_foword_FDC_fu_405_channel_data_6_ce0;
        else 
            yData_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_6_ce1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_6_ce1, grp_p_convertColorSpace_fu_565_yData_6_ce1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_6_ce1 <= grp_p_convertColorSpace_fu_565_yData_6_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_6_ce1 <= grp_p_foword_FDC_fu_405_channel_data_6_ce1;
        else 
            yData_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_6_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_6_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_6_we0 <= grp_p_convertColorSpace_fu_565_yData_6_we0;
        else 
            yData_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_6_we1_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_6_we1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_6_we1 <= grp_p_convertColorSpace_fu_565_yData_6_we1;
        else 
            yData_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_7_address0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_7_address0, grp_p_convertColorSpace_fu_565_yData_7_address0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_7_address0 <= grp_p_convertColorSpace_fu_565_yData_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_7_address0 <= grp_p_foword_FDC_fu_405_channel_data_7_address0;
        else 
            yData_7_address0 <= "XXX";
        end if; 
    end process;


    yData_7_address1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_7_address1, grp_p_convertColorSpace_fu_565_yData_7_address1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_7_address1 <= grp_p_convertColorSpace_fu_565_yData_7_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_7_address1 <= grp_p_foword_FDC_fu_405_channel_data_7_address1;
        else 
            yData_7_address1 <= "XXX";
        end if; 
    end process;


    yData_7_ce0_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_7_ce0, grp_p_convertColorSpace_fu_565_yData_7_ce0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_7_ce0 <= grp_p_convertColorSpace_fu_565_yData_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_7_ce0 <= grp_p_foword_FDC_fu_405_channel_data_7_ce0;
        else 
            yData_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_7_ce1_assign_proc : process(grp_p_foword_FDC_fu_405_channel_data_7_ce1, grp_p_convertColorSpace_fu_565_yData_7_ce1, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_7_ce1 <= grp_p_convertColorSpace_fu_565_yData_7_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yData_7_ce1 <= grp_p_foword_FDC_fu_405_channel_data_7_ce1;
        else 
            yData_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    yData_7_we0_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_7_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_7_we0 <= grp_p_convertColorSpace_fu_565_yData_7_we0;
        else 
            yData_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    yData_7_we1_assign_proc : process(grp_p_convertColorSpace_fu_565_yData_7_we1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            yData_7_we1 <= grp_p_convertColorSpace_fu_565_yData_7_we1;
        else 
            yData_7_we1 <= ap_const_logic_0;
        end if; 
    end process;


    yQuant_address0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_fdc_data_address0, grp_p_doHuffmanEncoding_fu_597_DU_address0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            yQuant_address0 <= grp_p_doHuffmanEncoding_fu_597_DU_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yQuant_address0 <= grp_p_foword_FDC_fu_405_fdc_data_address0;
        else 
            yQuant_address0 <= "XXXXXX";
        end if; 
    end process;


    yQuant_ce0_assign_proc : process(ap_CS_fsm_state13, grp_p_foword_FDC_fu_405_fdc_data_ce0, grp_p_doHuffmanEncoding_fu_597_DU_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            yQuant_ce0 <= grp_p_doHuffmanEncoding_fu_597_DU_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yQuant_ce0 <= grp_p_foword_FDC_fu_405_fdc_data_ce0;
        else 
            yQuant_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    yQuant_ce1_assign_proc : process(grp_p_foword_FDC_fu_405_fdc_data_ce1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yQuant_ce1 <= grp_p_foword_FDC_fu_405_fdc_data_ce1;
        else 
            yQuant_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    yQuant_we0_assign_proc : process(grp_p_foword_FDC_fu_405_fdc_data_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yQuant_we0 <= grp_p_foword_FDC_fu_405_fdc_data_we0;
        else 
            yQuant_we0 <= ap_const_logic_0;
        end if; 
    end process;


    yQuant_we1_assign_proc : process(grp_p_foword_FDC_fu_405_fdc_data_we1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            yQuant_we1 <= grp_p_foword_FDC_fu_405_fdc_data_we1;
        else 
            yQuant_we1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln295_1_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ZigZag_load_reg_975),64));
    zext_ln295_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_reg_371),64));
end behav;
