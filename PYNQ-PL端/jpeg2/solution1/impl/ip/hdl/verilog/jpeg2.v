// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="jpeg2,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.520000,HLS_SYN_LAT=71664823,HLS_SYN_TPT=none,HLS_SYN_MEM=35,HLS_SYN_DSP=115,HLS_SYN_FF=15509,HLS_SYN_LUT=33684,HLS_VERSION=2019_1}" *)

module jpeg2 (
        ap_clk,
        ap_rst_n,
        rgb_in_TDATA,
        rgb_in_TVALID,
        rgb_in_TREADY,
        rgb_in_TKEEP,
        rgb_in_TSTRB,
        rgb_in_TLAST,
        jpeg_out_TDATA,
        jpeg_out_TVALID,
        jpeg_out_TREADY,
        jpeg_out_TKEEP,
        jpeg_out_TSTRB,
        jpeg_out_TLAST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [23:0] rgb_in_TDATA;
input   rgb_in_TVALID;
output   rgb_in_TREADY;
input  [2:0] rgb_in_TKEEP;
input  [2:0] rgb_in_TSTRB;
input  [0:0] rgb_in_TLAST;
output  [7:0] jpeg_out_TDATA;
output   jpeg_out_TVALID;
input   jpeg_out_TREADY;
output  [0:0] jpeg_out_TKEEP;
output  [0:0] jpeg_out_TSTRB;
output  [0:0] jpeg_out_TLAST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg rgb_in_TREADY;
reg[7:0] jpeg_out_TDATA;
reg jpeg_out_TVALID;
reg[0:0] jpeg_out_TKEEP;
reg[0:0] jpeg_out_TSTRB;
reg[0:0] jpeg_out_TLAST;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire    grp_p_write_byte_s_fu_184_jpeg_out_TDATA_blk_n;
reg    jpeg_out_TDATA_blk_n;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [7:0] jpeg1_buffer_q0;
wire   [7:0] jpeg1_buffer_q1;
wire   [7:0] jpeg1_m_YTable_q0;
wire   [7:0] jpeg1_m_CbCrTable_q0;
wire   [4:0] jpeg1_m_Y_DC_Huffman_q0;
wire   [15:0] jpeg1_m_Y_DC_Huffman_1_q0;
wire   [4:0] jpeg1_m_Y_AC_Huffman_q0;
wire   [4:0] jpeg1_m_Y_AC_Huffman_q1;
wire   [15:0] jpeg1_m_Y_AC_Huffman_1_q0;
wire   [15:0] jpeg1_m_Y_AC_Huffman_1_q1;
wire   [4:0] jpeg1_m_CbCr_DC_Huff_q0;
wire   [15:0] jpeg1_m_CbCr_DC_Huff_1_q0;
wire   [4:0] jpeg1_m_CbCr_AC_Huff_q0;
wire   [4:0] jpeg1_m_CbCr_AC_Huff_q1;
wire   [15:0] jpeg1_m_CbCr_AC_Huff_1_q0;
wire   [15:0] jpeg1_m_CbCr_AC_Huff_1_q1;
wire    grp_encodeToJPG_fu_116_ap_start;
wire    grp_encodeToJPG_fu_116_ap_done;
wire    grp_encodeToJPG_fu_116_ap_idle;
wire    grp_encodeToJPG_fu_116_ap_ready;
wire   [13:0] grp_encodeToJPG_fu_116_JpegEncoder_buffer_address0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_buffer_ce0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_buffer_we0;
wire   [7:0] grp_encodeToJPG_fu_116_JpegEncoder_buffer_d0;
wire   [13:0] grp_encodeToJPG_fu_116_JpegEncoder_buffer_address1;
wire    grp_encodeToJPG_fu_116_JpegEncoder_buffer_ce1;
wire    grp_encodeToJPG_fu_116_JpegEncoder_buffer_we1;
wire   [7:0] grp_encodeToJPG_fu_116_JpegEncoder_buffer_d1;
wire   [5:0] grp_encodeToJPG_fu_116_JpegEncoder_m_YTable_address0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_YTable_ce0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_YTable_we0;
wire   [7:0] grp_encodeToJPG_fu_116_JpegEncoder_m_YTable_d0;
wire   [5:0] grp_encodeToJPG_fu_116_JpegEncoder_m_CbCrTable_address0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_CbCrTable_ce0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_CbCrTable_we0;
wire   [7:0] grp_encodeToJPG_fu_116_JpegEncoder_m_CbCrTable_d0;
wire   [3:0] grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_length_address0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_length_ce0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_length_we0;
wire   [4:0] grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_length_d0;
wire   [3:0] grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_value_address0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_value_ce0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_value_we0;
wire   [15:0] grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_value_d0;
wire   [7:0] grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_address0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_ce0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_we0;
wire   [4:0] grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_d0;
wire   [7:0] grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_address1;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_ce1;
wire   [7:0] grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_address0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_ce0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_we0;
wire   [15:0] grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_d0;
wire   [7:0] grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_address1;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_ce1;
wire   [3:0] grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_length_address0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_length_ce0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_length_we0;
wire   [4:0] grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_length_d0;
wire   [3:0] grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_value_address0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_value_ce0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_value_we0;
wire   [15:0] grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_value_d0;
wire   [7:0] grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_address0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_we0;
wire   [4:0] grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_d0;
wire   [7:0] grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_address1;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce1;
wire   [7:0] grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_address0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce0;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_we0;
wire   [15:0] grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_d0;
wire   [7:0] grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_address1;
wire    grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce1;
wire    grp_encodeToJPG_fu_116_rgb_in_TREADY;
wire   [7:0] grp_encodeToJPG_fu_116_jpeg_out_TDATA;
wire    grp_encodeToJPG_fu_116_jpeg_out_TVALID;
wire    grp_encodeToJPG_fu_116_jpeg_out_TREADY;
wire   [0:0] grp_encodeToJPG_fu_116_jpeg_out_TKEEP;
wire   [0:0] grp_encodeToJPG_fu_116_jpeg_out_TSTRB;
wire   [0:0] grp_encodeToJPG_fu_116_jpeg_out_TLAST;
reg    grp_p_write_byte_s_fu_184_ap_start;
wire    grp_p_write_byte_s_fu_184_ap_done;
wire    grp_p_write_byte_s_fu_184_ap_idle;
wire    grp_p_write_byte_s_fu_184_ap_ready;
reg   [0:0] grp_p_write_byte_s_fu_184_JpegEncoder_outhebyte_last_V_read;
reg   [7:0] grp_p_write_byte_s_fu_184_value_r;
wire   [7:0] grp_p_write_byte_s_fu_184_jpeg_out_TDATA;
wire    grp_p_write_byte_s_fu_184_jpeg_out_TVALID;
wire    grp_p_write_byte_s_fu_184_jpeg_out_TREADY;
wire   [0:0] grp_p_write_byte_s_fu_184_jpeg_out_TKEEP;
wire   [0:0] grp_p_write_byte_s_fu_184_jpeg_out_TSTRB;
wire   [0:0] grp_p_write_byte_s_fu_184_jpeg_out_TLAST;
wire   [7:0] grp_p_write_byte_s_fu_184_ap_return;
reg    grp_p_write_byte_s_fu_184_ap_ce;
reg    grp_encodeToJPG_fu_116_ap_start_reg;
wire    ap_CS_fsm_state2;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 grp_encodeToJPG_fu_116_ap_start_reg = 1'b0;
end

jpeg2_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
jpeg2_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

jpeg2_jpeg1_buffer #(
    .DataWidth( 8 ),
    .AddressRange( 15360 ),
    .AddressWidth( 14 ))
jpeg1_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_encodeToJPG_fu_116_JpegEncoder_buffer_address0),
    .ce0(grp_encodeToJPG_fu_116_JpegEncoder_buffer_ce0),
    .we0(grp_encodeToJPG_fu_116_JpegEncoder_buffer_we0),
    .d0(grp_encodeToJPG_fu_116_JpegEncoder_buffer_d0),
    .q0(jpeg1_buffer_q0),
    .address1(grp_encodeToJPG_fu_116_JpegEncoder_buffer_address1),
    .ce1(grp_encodeToJPG_fu_116_JpegEncoder_buffer_ce1),
    .we1(grp_encodeToJPG_fu_116_JpegEncoder_buffer_we1),
    .d1(grp_encodeToJPG_fu_116_JpegEncoder_buffer_d1),
    .q1(jpeg1_buffer_q1)
);

jpeg2_jpeg1_m_YTabbk #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
jpeg1_m_YTable_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_encodeToJPG_fu_116_JpegEncoder_m_YTable_address0),
    .ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_YTable_ce0),
    .we0(grp_encodeToJPG_fu_116_JpegEncoder_m_YTable_we0),
    .d0(grp_encodeToJPG_fu_116_JpegEncoder_m_YTable_d0),
    .q0(jpeg1_m_YTable_q0)
);

jpeg2_jpeg1_m_YTabbk #(
    .DataWidth( 8 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
jpeg1_m_CbCrTable_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCrTable_address0),
    .ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCrTable_ce0),
    .we0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCrTable_we0),
    .d0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCrTable_d0),
    .q0(jpeg1_m_CbCrTable_q0)
);

jpeg2_jpeg1_m_Y_Dbdk #(
    .DataWidth( 5 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
jpeg1_m_Y_DC_Huffman_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_length_address0),
    .ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_length_ce0),
    .we0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_length_we0),
    .d0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_length_d0),
    .q0(jpeg1_m_Y_DC_Huffman_q0)
);

jpeg2_jpeg1_m_Y_Dbek #(
    .DataWidth( 16 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
jpeg1_m_Y_DC_Huffman_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_value_address0),
    .ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_value_ce0),
    .we0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_value_we0),
    .d0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_value_d0),
    .q0(jpeg1_m_Y_DC_Huffman_1_q0)
);

jpeg2_jpeg1_m_Y_Abfk #(
    .DataWidth( 5 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
jpeg1_m_Y_AC_Huffman_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_address0),
    .ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_ce0),
    .we0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_we0),
    .d0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_d0),
    .q0(jpeg1_m_Y_AC_Huffman_q0),
    .address1(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_address1),
    .ce1(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_ce1),
    .q1(jpeg1_m_Y_AC_Huffman_q1)
);

jpeg2_jpeg1_m_Y_Abgk #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
jpeg1_m_Y_AC_Huffman_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_address0),
    .ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_ce0),
    .we0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_we0),
    .d0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_d0),
    .q0(jpeg1_m_Y_AC_Huffman_1_q0),
    .address1(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_address1),
    .ce1(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_ce1),
    .q1(jpeg1_m_Y_AC_Huffman_1_q1)
);

jpeg2_jpeg1_m_Y_Dbdk #(
    .DataWidth( 5 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
jpeg1_m_CbCr_DC_Huff_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_length_address0),
    .ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_length_ce0),
    .we0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_length_we0),
    .d0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_length_d0),
    .q0(jpeg1_m_CbCr_DC_Huff_q0)
);

jpeg2_jpeg1_m_Y_Dbek #(
    .DataWidth( 16 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
jpeg1_m_CbCr_DC_Huff_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_value_address0),
    .ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_value_ce0),
    .we0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_value_we0),
    .d0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_value_d0),
    .q0(jpeg1_m_CbCr_DC_Huff_1_q0)
);

jpeg2_jpeg1_m_Y_Abfk #(
    .DataWidth( 5 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
jpeg1_m_CbCr_AC_Huff_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_address0),
    .ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce0),
    .we0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_we0),
    .d0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_d0),
    .q0(jpeg1_m_CbCr_AC_Huff_q0),
    .address1(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_address1),
    .ce1(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce1),
    .q1(jpeg1_m_CbCr_AC_Huff_q1)
);

jpeg2_jpeg1_m_Y_Abgk #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
jpeg1_m_CbCr_AC_Huff_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_address0),
    .ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce0),
    .we0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_we0),
    .d0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_d0),
    .q0(jpeg1_m_CbCr_AC_Huff_1_q0),
    .address1(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_address1),
    .ce1(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce1),
    .q1(jpeg1_m_CbCr_AC_Huff_1_q1)
);

encodeToJPG grp_encodeToJPG_fu_116(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_encodeToJPG_fu_116_ap_start),
    .ap_done(grp_encodeToJPG_fu_116_ap_done),
    .ap_idle(grp_encodeToJPG_fu_116_ap_idle),
    .ap_ready(grp_encodeToJPG_fu_116_ap_ready),
    .JpegEncoder_buffer_address0(grp_encodeToJPG_fu_116_JpegEncoder_buffer_address0),
    .JpegEncoder_buffer_ce0(grp_encodeToJPG_fu_116_JpegEncoder_buffer_ce0),
    .JpegEncoder_buffer_we0(grp_encodeToJPG_fu_116_JpegEncoder_buffer_we0),
    .JpegEncoder_buffer_d0(grp_encodeToJPG_fu_116_JpegEncoder_buffer_d0),
    .JpegEncoder_buffer_q0(jpeg1_buffer_q0),
    .JpegEncoder_buffer_address1(grp_encodeToJPG_fu_116_JpegEncoder_buffer_address1),
    .JpegEncoder_buffer_ce1(grp_encodeToJPG_fu_116_JpegEncoder_buffer_ce1),
    .JpegEncoder_buffer_we1(grp_encodeToJPG_fu_116_JpegEncoder_buffer_we1),
    .JpegEncoder_buffer_d1(grp_encodeToJPG_fu_116_JpegEncoder_buffer_d1),
    .JpegEncoder_buffer_q1(jpeg1_buffer_q1),
    .JpegEncoder_m_YTable_address0(grp_encodeToJPG_fu_116_JpegEncoder_m_YTable_address0),
    .JpegEncoder_m_YTable_ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_YTable_ce0),
    .JpegEncoder_m_YTable_we0(grp_encodeToJPG_fu_116_JpegEncoder_m_YTable_we0),
    .JpegEncoder_m_YTable_d0(grp_encodeToJPG_fu_116_JpegEncoder_m_YTable_d0),
    .JpegEncoder_m_YTable_q0(jpeg1_m_YTable_q0),
    .JpegEncoder_m_CbCrTable_address0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCrTable_address0),
    .JpegEncoder_m_CbCrTable_ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCrTable_ce0),
    .JpegEncoder_m_CbCrTable_we0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCrTable_we0),
    .JpegEncoder_m_CbCrTable_d0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCrTable_d0),
    .JpegEncoder_m_CbCrTable_q0(jpeg1_m_CbCrTable_q0),
    .JpegEncoder_m_Y_DC_Huffman_Table_length_address0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_length_address0),
    .JpegEncoder_m_Y_DC_Huffman_Table_length_ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_length_ce0),
    .JpegEncoder_m_Y_DC_Huffman_Table_length_we0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_length_we0),
    .JpegEncoder_m_Y_DC_Huffman_Table_length_d0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_length_d0),
    .JpegEncoder_m_Y_DC_Huffman_Table_length_q0(jpeg1_m_Y_DC_Huffman_q0),
    .JpegEncoder_m_Y_DC_Huffman_Table_value_address0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_value_address0),
    .JpegEncoder_m_Y_DC_Huffman_Table_value_ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_value_ce0),
    .JpegEncoder_m_Y_DC_Huffman_Table_value_we0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_value_we0),
    .JpegEncoder_m_Y_DC_Huffman_Table_value_d0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_DC_Huffman_Table_value_d0),
    .JpegEncoder_m_Y_DC_Huffman_Table_value_q0(jpeg1_m_Y_DC_Huffman_1_q0),
    .JpegEncoder_m_Y_AC_Huffman_Table_length_address0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_address0),
    .JpegEncoder_m_Y_AC_Huffman_Table_length_ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_ce0),
    .JpegEncoder_m_Y_AC_Huffman_Table_length_we0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_we0),
    .JpegEncoder_m_Y_AC_Huffman_Table_length_d0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_d0),
    .JpegEncoder_m_Y_AC_Huffman_Table_length_q0(jpeg1_m_Y_AC_Huffman_q0),
    .JpegEncoder_m_Y_AC_Huffman_Table_length_address1(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_address1),
    .JpegEncoder_m_Y_AC_Huffman_Table_length_ce1(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_length_ce1),
    .JpegEncoder_m_Y_AC_Huffman_Table_length_q1(jpeg1_m_Y_AC_Huffman_q1),
    .JpegEncoder_m_Y_AC_Huffman_Table_value_address0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_address0),
    .JpegEncoder_m_Y_AC_Huffman_Table_value_ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_ce0),
    .JpegEncoder_m_Y_AC_Huffman_Table_value_we0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_we0),
    .JpegEncoder_m_Y_AC_Huffman_Table_value_d0(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_d0),
    .JpegEncoder_m_Y_AC_Huffman_Table_value_q0(jpeg1_m_Y_AC_Huffman_1_q0),
    .JpegEncoder_m_Y_AC_Huffman_Table_value_address1(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_address1),
    .JpegEncoder_m_Y_AC_Huffman_Table_value_ce1(grp_encodeToJPG_fu_116_JpegEncoder_m_Y_AC_Huffman_Table_value_ce1),
    .JpegEncoder_m_Y_AC_Huffman_Table_value_q1(jpeg1_m_Y_AC_Huffman_1_q1),
    .JpegEncoder_m_CbCr_DC_Huffman_Table_length_address0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_length_address0),
    .JpegEncoder_m_CbCr_DC_Huffman_Table_length_ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_length_ce0),
    .JpegEncoder_m_CbCr_DC_Huffman_Table_length_we0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_length_we0),
    .JpegEncoder_m_CbCr_DC_Huffman_Table_length_d0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_length_d0),
    .JpegEncoder_m_CbCr_DC_Huffman_Table_length_q0(jpeg1_m_CbCr_DC_Huff_q0),
    .JpegEncoder_m_CbCr_DC_Huffman_Table_value_address0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_value_address0),
    .JpegEncoder_m_CbCr_DC_Huffman_Table_value_ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_value_ce0),
    .JpegEncoder_m_CbCr_DC_Huffman_Table_value_we0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_value_we0),
    .JpegEncoder_m_CbCr_DC_Huffman_Table_value_d0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_DC_Huffman_Table_value_d0),
    .JpegEncoder_m_CbCr_DC_Huffman_Table_value_q0(jpeg1_m_CbCr_DC_Huff_1_q0),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_length_address0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_address0),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce0),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_length_we0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_we0),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_length_d0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_d0),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_length_q0(jpeg1_m_CbCr_AC_Huff_q0),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_length_address1(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_address1),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce1(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_length_ce1),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_length_q1(jpeg1_m_CbCr_AC_Huff_q1),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_value_address0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_address0),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce0),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_value_we0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_we0),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_value_d0(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_d0),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_value_q0(jpeg1_m_CbCr_AC_Huff_1_q0),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_value_address1(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_address1),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce1(grp_encodeToJPG_fu_116_JpegEncoder_m_CbCr_AC_Huffman_Table_value_ce1),
    .JpegEncoder_m_CbCr_AC_Huffman_Table_value_q1(jpeg1_m_CbCr_AC_Huff_1_q1),
    .rgb_in_TDATA(rgb_in_TDATA),
    .rgb_in_TVALID(rgb_in_TVALID),
    .rgb_in_TREADY(grp_encodeToJPG_fu_116_rgb_in_TREADY),
    .rgb_in_TKEEP(rgb_in_TKEEP),
    .rgb_in_TSTRB(rgb_in_TSTRB),
    .rgb_in_TLAST(rgb_in_TLAST),
    .jpeg_out_TDATA(grp_encodeToJPG_fu_116_jpeg_out_TDATA),
    .jpeg_out_TVALID(grp_encodeToJPG_fu_116_jpeg_out_TVALID),
    .jpeg_out_TREADY(grp_encodeToJPG_fu_116_jpeg_out_TREADY),
    .jpeg_out_TKEEP(grp_encodeToJPG_fu_116_jpeg_out_TKEEP),
    .jpeg_out_TSTRB(grp_encodeToJPG_fu_116_jpeg_out_TSTRB),
    .jpeg_out_TLAST(grp_encodeToJPG_fu_116_jpeg_out_TLAST)
);

p_write_byte_s grp_p_write_byte_s_fu_184(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_p_write_byte_s_fu_184_ap_start),
    .ap_done(grp_p_write_byte_s_fu_184_ap_done),
    .ap_idle(grp_p_write_byte_s_fu_184_ap_idle),
    .ap_ready(grp_p_write_byte_s_fu_184_ap_ready),
    .JpegEncoder_outhebyte_last_V_read(grp_p_write_byte_s_fu_184_JpegEncoder_outhebyte_last_V_read),
    .value_r(grp_p_write_byte_s_fu_184_value_r),
    .jpeg_out_TDATA(grp_p_write_byte_s_fu_184_jpeg_out_TDATA),
    .jpeg_out_TVALID(grp_p_write_byte_s_fu_184_jpeg_out_TVALID),
    .jpeg_out_TREADY(grp_p_write_byte_s_fu_184_jpeg_out_TREADY),
    .jpeg_out_TKEEP(grp_p_write_byte_s_fu_184_jpeg_out_TKEEP),
    .jpeg_out_TSTRB(grp_p_write_byte_s_fu_184_jpeg_out_TSTRB),
    .jpeg_out_TLAST(grp_p_write_byte_s_fu_184_jpeg_out_TLAST),
    .ap_return(grp_p_write_byte_s_fu_184_ap_return),
    .jpeg_out_TDATA_blk_n(grp_p_write_byte_s_fu_184_jpeg_out_TDATA_blk_n),
    .ap_ce(grp_p_write_byte_s_fu_184_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_encodeToJPG_fu_116_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_encodeToJPG_fu_116_ap_start_reg <= 1'b1;
        end else if ((grp_encodeToJPG_fu_116_ap_ready == 1'b1)) begin
            grp_encodeToJPG_fu_116_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((grp_p_write_byte_s_fu_184_jpeg_out_TDATA_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_p_write_byte_s_fu_184_jpeg_out_TDATA_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_p_write_byte_s_fu_184_JpegEncoder_outhebyte_last_V_read = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_p_write_byte_s_fu_184_JpegEncoder_outhebyte_last_V_read = 1'd0;
    end else begin
        grp_p_write_byte_s_fu_184_JpegEncoder_outhebyte_last_V_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_p_write_byte_s_fu_184_ap_ce = 1'b1;
    end else begin
        grp_p_write_byte_s_fu_184_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_p_write_byte_s_fu_184_ap_start = 1'b1;
    end else begin
        grp_p_write_byte_s_fu_184_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_p_write_byte_s_fu_184_value_r = 8'd217;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_p_write_byte_s_fu_184_value_r = 8'd255;
    end else begin
        grp_p_write_byte_s_fu_184_value_r = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (grp_p_write_byte_s_fu_184_jpeg_out_TVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state3) & (grp_p_write_byte_s_fu_184_jpeg_out_TVALID == 1'b1)))) begin
        jpeg_out_TDATA = grp_p_write_byte_s_fu_184_jpeg_out_TDATA;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_encodeToJPG_fu_116_jpeg_out_TVALID == 1'b1))) begin
        jpeg_out_TDATA = grp_encodeToJPG_fu_116_jpeg_out_TDATA;
    end else begin
        jpeg_out_TDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        jpeg_out_TDATA_blk_n = grp_p_write_byte_s_fu_184_jpeg_out_TDATA_blk_n;
    end else begin
        jpeg_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (grp_p_write_byte_s_fu_184_jpeg_out_TVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state3) & (grp_p_write_byte_s_fu_184_jpeg_out_TVALID == 1'b1)))) begin
        jpeg_out_TKEEP = grp_p_write_byte_s_fu_184_jpeg_out_TKEEP;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_encodeToJPG_fu_116_jpeg_out_TVALID == 1'b1))) begin
        jpeg_out_TKEEP = grp_encodeToJPG_fu_116_jpeg_out_TKEEP;
    end else begin
        jpeg_out_TKEEP = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (grp_p_write_byte_s_fu_184_jpeg_out_TVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state3) & (grp_p_write_byte_s_fu_184_jpeg_out_TVALID == 1'b1)))) begin
        jpeg_out_TLAST = grp_p_write_byte_s_fu_184_jpeg_out_TLAST;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_encodeToJPG_fu_116_jpeg_out_TVALID == 1'b1))) begin
        jpeg_out_TLAST = grp_encodeToJPG_fu_116_jpeg_out_TLAST;
    end else begin
        jpeg_out_TLAST = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (grp_p_write_byte_s_fu_184_jpeg_out_TVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state3) & (grp_p_write_byte_s_fu_184_jpeg_out_TVALID == 1'b1)))) begin
        jpeg_out_TSTRB = grp_p_write_byte_s_fu_184_jpeg_out_TSTRB;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_encodeToJPG_fu_116_jpeg_out_TVALID == 1'b1))) begin
        jpeg_out_TSTRB = grp_encodeToJPG_fu_116_jpeg_out_TSTRB;
    end else begin
        jpeg_out_TSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        jpeg_out_TVALID = grp_p_write_byte_s_fu_184_jpeg_out_TVALID;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        jpeg_out_TVALID = grp_encodeToJPG_fu_116_jpeg_out_TVALID;
    end else begin
        jpeg_out_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        rgb_in_TREADY = grp_encodeToJPG_fu_116_rgb_in_TREADY;
    end else begin
        rgb_in_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_encodeToJPG_fu_116_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_p_write_byte_s_fu_184_jpeg_out_TDATA_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((grp_p_write_byte_s_fu_184_jpeg_out_TDATA_blk_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_encodeToJPG_fu_116_ap_start = grp_encodeToJPG_fu_116_ap_start_reg;

assign grp_encodeToJPG_fu_116_jpeg_out_TREADY = (jpeg_out_TREADY & ap_CS_fsm_state2);

assign grp_p_write_byte_s_fu_184_jpeg_out_TREADY = ((jpeg_out_TREADY & ap_CS_fsm_state4) | (jpeg_out_TREADY & ap_CS_fsm_state3));

endmodule //jpeg2
